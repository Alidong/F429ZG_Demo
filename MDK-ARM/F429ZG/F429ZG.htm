<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [F429ZG\F429ZG.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image F429ZG\F429ZG.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sun Dec 20 18:59:59 2020
<BR><P>
<H3>Maximum Stack Usage =       2280 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
lv_btnmatrix_design &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[24]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC_IRQHandler</a><BR>
 <LI><a href="#[c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">BusFault_Handler</a><BR>
 <LI><a href="#[a]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">HardFault_Handler</a><BR>
 <LI><a href="#[1b9]">_lv_area_is_point_on</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b9]">_lv_area_is_point_on</a><BR>
 <LI><a href="#[468]">refresh_children_style</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[468]">refresh_children_style</a><BR>
 <LI><a href="#[357]">update_style_cache_children</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[357]">update_style_cache_children</a><BR>
 <LI><a href="#[212]">_lv_obj_get_style_ptr</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20e]">update_style_cache</a><BR>
 <LI><a href="#[466]">lv_obj_get_style_value_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[465]">lv_obj_get_style_transform_zoom</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[420]">lv_obj_get_style_transform_width</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[421]">lv_obj_get_style_transform_height</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[464]">lv_obj_get_style_transform_angle</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[20e]">update_style_cache</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[463]">lv_obj_get_style_text_line_space</a><BR>
 <LI><a href="#[462]">lv_obj_get_style_text_letter_space</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[460]">lv_obj_get_style_text_decor</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[45f]">lv_obj_get_style_text_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[427]">lv_obj_get_style_shadow_width</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[45d]">lv_obj_get_style_shadow_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[41f]">lv_obj_get_style_radius</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[45a]">lv_obj_get_style_pattern_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[437]">lv_obj_get_style_pad_top</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[450]">lv_obj_get_style_pad_right</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[44b]">lv_obj_get_style_pad_left</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[438]">lv_obj_get_style_pad_bottom</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[433]">lv_obj_get_style_outline_width</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[443]">lv_obj_get_style_outline_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[210]">_lv_obj_get_style_opa</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20e]">update_style_cache</a><BR>
 <LI><a href="#[442]">lv_obj_get_style_margin_top</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[441]">lv_obj_get_style_margin_right</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[440]">lv_obj_get_style_margin_left</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[43f]">lv_obj_get_style_margin_bottom</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[43e]">lv_obj_get_style_line_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[43c]">lv_obj_get_style_image_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[41e]">lv_obj_get_style_clip_corner</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[43b]">lv_obj_get_style_border_width</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[43a]">lv_obj_get_style_border_side</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[426]">lv_obj_get_style_border_post</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[424]">lv_obj_get_style_border_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[423]">lv_obj_get_style_bg_blend_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20d]">_lv_obj_get_style_int</a><BR>
 <LI><a href="#[3c7]">lv_event_send_func</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2aa]">lv_event_send</a><BR>
 <LI><a href="#[472]">refresh_children_position</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[472]">refresh_children_position</a><BR>
 <LI><a href="#[249]">apply_theme</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[249]">apply_theme</a><BR>
 <LI><a href="#[46a]">report_style_mod_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46a]">report_style_mod_core</a><BR>
 <LI><a href="#[41d]">obj_del_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41d]">obj_del_core</a><BR>
 <LI><a href="#[b]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">MemManage_Handler</a><BR>
 <LI><a href="#[d]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">UsageFault_Handler</a><BR>
 <LI><a href="#[2e2]">draw_value_str</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2df]">lv_draw_label</a><BR>
 <LI><a href="#[2d9]">draw_pattern</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2df]">lv_draw_label</a><BR>
 <LI><a href="#[48e]">lv_refr_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48e]">lv_refr_obj</a><BR>
 <LI><a href="#[48b]">lv_refr_get_top_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48b]">lv_refr_get_top_obj</a><BR>
 <LI><a href="#[34f]">lv_indev_search_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34f]">lv_indev_search_obj</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[c]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[26]">CAN1_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[27]">CAN1_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[28]">CAN1_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[25]">CAN1_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[52]">CAN2_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[53]">CAN2_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[54]">CAN2_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[51]">CAN2_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[60]">DCMI_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[77]">DHT11_Task</a> from freertos.o(i.DHT11_Task) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[1d]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1f]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[20]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[21]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[22]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[23]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[41]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6b]">DMA2D_IRQHandler</a> from stm32f4xx_it.o(i.DMA2D_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4a]">DMA2_Stream0_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream0_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream3_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream3_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[56]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[57]">DMA2_Stream6_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream6_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[58]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[b4]">DMA_Transit_Callback</a> from lv_port_disp.o(i.DMA_Transit_Callback) referenced from lv_port_disp.o(i.lv_port_disp_init)
 <LI><a href="#[f]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4f]">ETH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[50]">ETH_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[18]">EXTI0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3a]">EXTI15_10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[19]">EXTI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1a]">EXTI2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1b]">EXTI3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1c]">EXTI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[29]">EXTI9_5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[16]">FLASH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[42]">FMC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[62]">FPU_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[61]">HASH_RNG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[a]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[32]">I2C1_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[31]">I2C1_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[34]">I2C2_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[33]">I2C2_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5b]">I2C3_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5a]">I2C3_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6a]">LTDC_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[69]">LTDC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[76]">Lvgl_Task</a> from freertos.o(i.Lvgl_Task) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[b]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[9]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[55]">OTG_FS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3c]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5d]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5c]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5f]">OTG_HS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5e]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[13]">PVD_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[10]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[17]">RCC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3b]">RTC_Alarm_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[15]">RTC_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8]">Reset_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[68]">SAI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[43]">SDIO_IRQHandler</a> from stm32f4xx_it.o(i.SDIO_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[72]">SD_DMAError</a> from stm32f4xx_hal_sd.o(i.SD_DMAError) referenced from stm32f4xx_hal_sd.o(i.HAL_SD_ReadBlocks_DMA)
 <LI><a href="#[72]">SD_DMAError</a> from stm32f4xx_hal_sd.o(i.SD_DMAError) referenced from stm32f4xx_hal_sd.o(i.HAL_SD_WriteBlocks_DMA)
 <LI><a href="#[71]">SD_DMAReceiveCplt</a> from stm32f4xx_hal_sd.o(i.SD_DMAReceiveCplt) referenced from stm32f4xx_hal_sd.o(i.HAL_SD_ReadBlocks_DMA)
 <LI><a href="#[70]">SD_DMARxAbort</a> from stm32f4xx_hal_sd.o(i.SD_DMARxAbort) referenced from stm32f4xx_hal_sd.o(i.HAL_SD_IRQHandler)
 <LI><a href="#[73]">SD_DMATransmitCplt</a> from stm32f4xx_hal_sd.o(i.SD_DMATransmitCplt) referenced from stm32f4xx_hal_sd.o(i.HAL_SD_WriteBlocks_DMA)
 <LI><a href="#[6f]">SD_DMATxAbort</a> from stm32f4xx_hal_sd.o(i.SD_DMATxAbort) referenced from stm32f4xx_hal_sd.o(i.HAL_SD_IRQHandler)
 <LI><a href="#[d1]">SD_initialize</a> from sd_diskio.o(i.SD_initialize) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[d5]">SD_ioctl</a> from sd_diskio.o(i.SD_ioctl) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[d3]">SD_read</a> from sd_diskio.o(i.SD_read) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[d2]">SD_status</a> from sd_diskio.o(i.SD_status) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[d4]">SD_write</a> from sd_diskio.o(i.SD_write) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[35]">SPI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[36]">SPI2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[45]">SPI3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[65]">SPI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[66]">SPI5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[67]">SPI6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[e]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[11]">SysTick_Handler</a> from port.o(i.SysTick_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6d]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[14]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2a]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2d]">TIM1_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2c]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2b]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2e]">TIM2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2f]">TIM3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[30]">TIM4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[44]">TIM5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[48]">TIM6_DAC_IRQHandler</a> from stm32f4xx_it.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[49]">TIM7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3d]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[40]">TIM8_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3f]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3e]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[46]">UART4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[47]">UART5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[63]">UART7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[64]">UART8_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[37]">USART1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[38]">USART2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[39]">USART3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[59]">USART6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[d]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[12]">WWDG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[94]">_lv_disp_refr_task</a> from lv_refr.o(i._lv_disp_refr_task) referenced from lv_hal_disp.o(i.lv_disp_drv_register)
 <LI><a href="#[9d]">_lv_indev_read_task</a> from lv_indev.o(i._lv_indev_read_task) referenced from lv_hal_indev.o(i.lv_indev_drv_register)
 <LI><a href="#[98]">_lv_ll_get_head</a> from lv_ll.o(i._lv_ll_get_head) referenced from lv_group.o(i.lv_group_focus_next)
 <LI><a href="#[97]">_lv_ll_get_next</a> from lv_ll.o(i._lv_ll_get_next) referenced from lv_group.o(i.lv_group_focus_next)
 <LI><a href="#[99]">_lv_ll_get_prev</a> from lv_ll.o(i._lv_ll_get_prev) referenced from lv_group.o(i.lv_group_focus_prev)
 <LI><a href="#[9a]">_lv_ll_get_tail</a> from lv_ll.o(i._lv_ll_get_tail) referenced from lv_group.o(i.lv_group_focus_prev)
 <LI><a href="#[c7]">_out_buffer</a> from lv_printf.o(i._out_buffer) referenced from lv_printf.o(i.lv_snprintf)
 <LI><a href="#[c7]">_out_buffer</a> from lv_printf.o(i._out_buffer) referenced from lv_printf.o(i.lv_vsnprintf)
 <LI><a href="#[7f]">_out_null</a> from lv_printf.o(i._out_null) referenced from lv_printf.o(i._vsnprintf)
 <LI><a href="#[7a]">anim_task</a> from lv_anim.o(i.anim_task) referenced from lv_anim.o(i._lv_anim_core_init)
 <LI><a href="#[78]">back_to_home_event_cb</a> from lv_box.o(i.back_to_home_event_cb) referenced from lv_box.o(i.Sensors_open)
 <LI><a href="#[78]">back_to_home_event_cb</a> from lv_box.o(i.back_to_home_event_cb) referenced from lv_box.o(i.icon_settings_event_handler)
 <LI><a href="#[83]">color_blend_true_color_additive</a> from lv_draw_blend.o(i.color_blend_true_color_additive) referenced from lv_draw_blend.o(i.fill_blended)
 <LI><a href="#[83]">color_blend_true_color_additive</a> from lv_draw_blend.o(i.color_blend_true_color_additive) referenced from lv_draw_blend.o(i.map_blended)
 <LI><a href="#[84]">color_blend_true_color_subtractive</a> from lv_draw_blend.o(i.color_blend_true_color_subtractive) referenced from lv_draw_blend.o(i.fill_blended)
 <LI><a href="#[84]">color_blend_true_color_subtractive</a> from lv_draw_blend.o(i.color_blend_true_color_subtractive) referenced from lv_draw_blend.o(i.map_blended)
 <LI><a href="#[b5]">disp_flush</a> from lv_port_disp.o(i.disp_flush) referenced from lv_port_disp.o(i.lv_port_disp_init)
 <LI><a href="#[b2]">edge_flash_anim</a> from lv_page.o(i.edge_flash_anim) referenced from lv_page.o(i.lv_page_start_edge_flash)
 <LI><a href="#[b3]">edge_flash_anim_end</a> from lv_page.o(i.edge_flash_anim_end) referenced from lv_page.o(i.lv_page_start_edge_flash)
 <LI><a href="#[79]">fputc</a> from bsp_usart_fputc.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[b7]">fs_close</a> from lv_port_fs_template.o(i.fs_close) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[c1]">fs_dir_close</a> from lv_port_fs_template.o(i.fs_dir_close) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[c2]">fs_dir_open</a> from lv_port_fs_template.o(i.fs_dir_open) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[c3]">fs_dir_read</a> from lv_port_fs_template.o(i.fs_dir_read) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[bc]">fs_free</a> from lv_port_fs_template.o(i.fs_free) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[b6]">fs_open</a> from lv_port_fs_template.o(i.fs_open) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[b8]">fs_read</a> from lv_port_fs_template.o(i.fs_read) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[be]">fs_remove</a> from lv_port_fs_template.o(i.fs_remove) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[bf]">fs_rename</a> from lv_port_fs_template.o(i.fs_rename) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[ba]">fs_seek</a> from lv_port_fs_template.o(i.fs_seek) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[bd]">fs_size</a> from lv_port_fs_template.o(i.fs_size) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[bb]">fs_tell</a> from lv_port_fs_template.o(i.fs_tell) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[c0]">fs_trunc</a> from lv_port_fs_template.o(i.fs_trunc) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[b9]">fs_write</a> from lv_port_fs_template.o(i.fs_write) referenced from lv_port_fs_template.o(i.lv_port_fs_init)
 <LI><a href="#[75]">icon_sensors_event_handler</a> from lv_box.o(i.icon_sensors_event_handler) referenced from lv_box.o(i.Home_open)
 <LI><a href="#[74]">icon_settings_event_handler</a> from lv_box.o(i.icon_settings_event_handler) referenced from lv_box.o(i.Home_open)
 <LI><a href="#[87]">kern_pair_16_compare</a> from lv_font_fmt_txt.o(i.kern_pair_16_compare) referenced from lv_font_fmt_txt.o(i.get_kern_value)
 <LI><a href="#[86]">kern_pair_8_compare</a> from lv_font_fmt_txt.o(i.kern_pair_8_compare) referenced from lv_font_fmt_txt.o(i.get_kern_value)
 <LI><a href="#[d6]">lv_anim_path_linear</a> from lv_anim.o(i.lv_anim_path_linear) referenced from lv_anim.o(.constdata)
 <LI><a href="#[82]">lv_area_get_height</a> from lv_bar.o(i.lv_area_get_height) referenced from lv_bar.o(i.draw_indic)
 <LI><a href="#[81]">lv_area_get_width</a> from lv_bar.o(i.lv_area_get_width) referenced from lv_bar.o(i.draw_indic)
 <LI><a href="#[8b]">lv_bar_anim</a> from lv_bar.o(i.lv_bar_anim) referenced from lv_bar.o(i.lv_bar_set_value_with_anim)
 <LI><a href="#[8c]">lv_bar_anim_ready</a> from lv_bar.o(i.lv_bar_anim_ready) referenced from lv_bar.o(i.lv_bar_set_value_with_anim)
 <LI><a href="#[8a]">lv_bar_design</a> from lv_bar.o(i.lv_bar_design) referenced from lv_bar.o(i.lv_bar_create)
 <LI><a href="#[89]">lv_bar_signal</a> from lv_bar.o(i.lv_bar_signal) referenced from lv_bar.o(i.lv_bar_create)
 <LI><a href="#[8e]">lv_btn_design</a> from lv_btn.o(i.lv_btn_design) referenced from lv_btn.o(i.lv_btn_create)
 <LI><a href="#[8d]">lv_btn_signal</a> from lv_btn.o(i.lv_btn_signal) referenced from lv_btn.o(i.lv_btn_create)
 <LI><a href="#[90]">lv_btnmatrix_design</a> from lv_btnmatrix.o(i.lv_btnmatrix_design) referenced from lv_btnmatrix.o(i.lv_btnmatrix_create)
 <LI><a href="#[8f]">lv_btnmatrix_signal</a> from lv_btnmatrix.o(i.lv_btnmatrix_signal) referenced from lv_btnmatrix.o(i.lv_btnmatrix_create)
 <LI><a href="#[91]">lv_checkbox_signal</a> from lv_checkbox.o(i.lv_checkbox_signal) referenced from lv_checkbox.o(i.lv_checkbox_create)
 <LI><a href="#[92]">lv_cont_signal</a> from lv_cont.o(i.lv_cont_signal) referenced from lv_cont.o(i.lv_cont_create)
 <LI><a href="#[95]">lv_draw_mask_line</a> from lv_draw_mask.o(i.lv_draw_mask_line) referenced from lv_draw_mask.o(i.lv_draw_mask_line_points_init)
 <LI><a href="#[96]">lv_draw_mask_radius</a> from lv_draw_mask.o(i.lv_draw_mask_radius) referenced from lv_draw_mask.o(i.lv_draw_mask_radius_init)
 <LI><a href="#[1]">lv_font_get_bitmap_fmt_txt</a> from lv_font_fmt_txt.o(i.lv_font_get_bitmap_fmt_txt) referenced 2 times from lv_font_montserrat_14.o(.data)
 <LI><a href="#[0]">lv_font_get_glyph_dsc_fmt_txt</a> from lv_font_fmt_txt.o(i.lv_font_get_glyph_dsc_fmt_txt) referenced 2 times from lv_font_montserrat_14.o(.data)
 <LI><a href="#[7e]">lv_img_decoder_built_in_close</a> from lv_img_decoder.o(i.lv_img_decoder_built_in_close) referenced from lv_img_decoder.o(i._lv_img_decoder_init)
 <LI><a href="#[7b]">lv_img_decoder_built_in_info</a> from lv_img_decoder.o(i.lv_img_decoder_built_in_info) referenced from lv_img_decoder.o(i._lv_img_decoder_init)
 <LI><a href="#[7c]">lv_img_decoder_built_in_open</a> from lv_img_decoder.o(i.lv_img_decoder_built_in_open) referenced from lv_img_decoder.o(i._lv_img_decoder_init)
 <LI><a href="#[7d]">lv_img_decoder_built_in_read_line</a> from lv_img_decoder.o(i.lv_img_decoder_built_in_read_line) referenced from lv_img_decoder.o(i._lv_img_decoder_init)
 <LI><a href="#[9c]">lv_img_design</a> from lv_img.o(i.lv_img_design) referenced from lv_img.o(i.lv_img_create)
 <LI><a href="#[9b]">lv_img_signal</a> from lv_img.o(i.lv_img_signal) referenced from lv_img.o(i.lv_img_create)
 <LI><a href="#[9e]">lv_label_design</a> from lv_label.o(i.lv_label_design) referenced from lv_label.o(i.lv_label_create)
 <LI><a href="#[a0]">lv_label_set_offset_x</a> from lv_label.o(i.lv_label_set_offset_x) referenced from lv_label.o(i.lv_label_refr_text)
 <LI><a href="#[a0]">lv_label_set_offset_x</a> from lv_label.o(i.lv_label_set_offset_x) referenced from lv_label.o(i.lv_label_set_long_mode)
 <LI><a href="#[a1]">lv_label_set_offset_y</a> from lv_label.o(i.lv_label_set_offset_y) referenced from lv_label.o(i.lv_label_refr_text)
 <LI><a href="#[a1]">lv_label_set_offset_y</a> from lv_label.o(i.lv_label_set_offset_y) referenced from lv_label.o(i.lv_label_set_long_mode)
 <LI><a href="#[9f]">lv_label_signal</a> from lv_label.o(i.lv_label_signal) referenced from lv_label.o(i.lv_label_create)
 <LI><a href="#[a3]">lv_msgbox_btnm_event_cb</a> from lv_msgbox.o(i.lv_msgbox_btnm_event_cb) referenced from lv_msgbox.o(i.lv_msgbox_add_btns)
 <LI><a href="#[a8]">lv_msgbox_close_ready_cb</a> from lv_msgbox.o(i.lv_msgbox_close_ready_cb) referenced from lv_msgbox.o(i.lv_msgbox_start_auto_close)
 <LI><a href="#[a5]">lv_msgbox_default_event_cb</a> from lv_msgbox.o(i.lv_msgbox_default_event_cb) referenced from lv_msgbox.o(i.lv_msgbox_create)
 <LI><a href="#[a4]">lv_msgbox_signal</a> from lv_msgbox.o(i.lv_msgbox_signal) referenced from lv_msgbox.o(i.lv_msgbox_create)
 <LI><a href="#[93]">lv_obj_del_anim_ready_cb</a> from lv_obj.o(i.lv_obj_del_anim_ready_cb) referenced from lv_box.o(i.lv_demo_printer_anim_out_all)
 <LI><a href="#[aa]">lv_obj_design</a> from lv_obj.o(i.lv_obj_design) referenced from lv_obj.o(i.lv_obj_create)
 <LI><a href="#[a6]">lv_obj_set_height</a> from lv_obj.o(i.lv_obj_set_height) referenced from lv_msgbox.o(i.lv_msgbox_start_auto_close)
 <LI><a href="#[a7]">lv_obj_set_width</a> from lv_obj.o(i.lv_obj_set_width) referenced from lv_msgbox.o(i.lv_msgbox_start_auto_close)
 <LI><a href="#[a2]">lv_obj_set_x</a> from lv_obj.o(i.lv_obj_set_x) referenced from lv_label.o(i.lv_label_set_long_mode)
 <LI><a href="#[a2]">lv_obj_set_x</a> from lv_obj.o(i.lv_obj_set_x) referenced from lv_page.o(i.lv_page_scroll_hor)
 <LI><a href="#[a2]">lv_obj_set_x</a> from lv_obj.o(i.lv_obj_set_x) referenced from lv_tabview.o(i.lv_tabview_set_tab_act)
 <LI><a href="#[88]">lv_obj_set_y</a> from lv_obj.o(i.lv_obj_set_y) referenced from lv_box.o(i.icon_generic_event_cb)
 <LI><a href="#[88]">lv_obj_set_y</a> from lv_obj.o(i.lv_obj_set_y) referenced from lv_box.o(i.lv_demo_printer_anim_in)
 <LI><a href="#[88]">lv_obj_set_y</a> from lv_obj.o(i.lv_obj_set_y) referenced from lv_box.o(i.lv_demo_printer_anim_out_all)
 <LI><a href="#[88]">lv_obj_set_y</a> from lv_obj.o(i.lv_obj_set_y) referenced from lv_label.o(i.lv_label_set_long_mode)
 <LI><a href="#[88]">lv_obj_set_y</a> from lv_obj.o(i.lv_obj_set_y) referenced from lv_page.o(i.lv_page_scroll_ver)
 <LI><a href="#[88]">lv_obj_set_y</a> from lv_obj.o(i.lv_obj_set_y) referenced from lv_tabview.o(i.lv_tabview_set_tab_act)
 <LI><a href="#[a9]">lv_obj_signal</a> from lv_obj.o(i.lv_obj_signal) referenced from lv_obj.o(i.lv_obj_create)
 <LI><a href="#[b0]">lv_page_design</a> from lv_page.o(i.lv_page_design) referenced from lv_page.o(i.lv_page_create)
 <LI><a href="#[ae]">lv_page_scrollable_signal</a> from lv_page.o(i.lv_page_scrollable_signal) referenced from lv_page.o(i.lv_page_create)
 <LI><a href="#[af]">lv_page_signal</a> from lv_page.o(i.lv_page_signal) referenced from lv_page.o(i.lv_page_create)
 <LI><a href="#[c6]">lv_slider_design</a> from lv_slider.o(i.lv_slider_design) referenced from lv_slider.o(i.lv_slider_create)
 <LI><a href="#[c5]">lv_slider_signal</a> from lv_slider.o(i.lv_slider_signal) referenced from lv_slider.o(i.lv_slider_create)
 <LI><a href="#[c9]">lv_switch_design</a> from lv_switch.o(i.lv_switch_design) referenced from lv_switch.o(i.lv_switch_create)
 <LI><a href="#[c8]">lv_switch_signal</a> from lv_switch.o(i.lv_switch_signal) referenced from lv_switch.o(i.lv_switch_create)
 <LI><a href="#[ca]">lv_tabview_signal</a> from lv_tabview.o(i.lv_tabview_signal) referenced from lv_tabview.o(i.lv_tabview_create)
 <LI><a href="#[4]">lv_txt_utf8_get_byte_id</a> from lv_txt.o(i.lv_txt_utf8_get_byte_id) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[6]">lv_txt_utf8_get_char_id</a> from lv_txt.o(i.lv_txt_utf8_get_char_id) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[7]">lv_txt_utf8_get_length</a> from lv_txt.o(i.lv_txt_utf8_get_length) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[3]">lv_txt_utf8_next</a> from lv_txt.o(i.lv_txt_utf8_next) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[5]">lv_txt_utf8_prev</a> from lv_txt.o(i.lv_txt_utf8_prev) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[2]">lv_txt_utf8_size</a> from lv_txt.o(i.lv_txt_utf8_size) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[6c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[cf]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[ce]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[d0]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
 <LI><a href="#[b1]">scrl_def_event_cb</a> from lv_page.o(i.scrl_def_event_cb) referenced from lv_page.o(i.lv_page_create)
 <LI><a href="#[80]">slider_event_cb</a> from lv_box.o(i.slider_event_cb) referenced from lv_box.o(i.dht11_create)
 <LI><a href="#[cc]">tab_btnm_event_cb</a> from lv_tabview.o(i.tab_btnm_event_cb) referenced from lv_tabview.o(i.lv_tabview_create)
 <LI><a href="#[cb]">tabview_scrl_signal</a> from lv_tabview.o(i.tabview_scrl_signal) referenced from lv_tabview.o(i.lv_tabview_create)
 <LI><a href="#[cd]">theme_apply</a> from lv_theme_material.o(i.theme_apply) referenced from lv_theme_material.o(i.lv_theme_material_init)
 <LI><a href="#[c4]">touchpad_read</a> from lv_port_indev.o(i.touchpad_read) referenced from lv_port_indev.o(i.lv_port_indev_init)
 <LI><a href="#[ab]">trans_anim_cb</a> from lv_obj.o(i.trans_anim_cb) referenced from lv_obj.o(i.lv_obj_set_state)
 <LI><a href="#[ad]">trans_anim_ready_cb</a> from lv_obj.o(i.trans_anim_ready_cb) referenced from lv_obj.o(i.lv_obj_set_state)
 <LI><a href="#[ac]">trans_anim_start_cb</a> from lv_obj.o(i.trans_anim_start_cb) referenced from lv_obj.o(i.lv_obj_set_state)
 <LI><a href="#[85]">unicode_list_compare</a> from lv_font_fmt_txt.o(i.unicode_list_compare) referenced from lv_font_fmt_txt.o(i.get_glyph_dsc_id)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[505]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[d7]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e0]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[506]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[507]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[508]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[509]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[50a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[e]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4fe]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4fd]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[10]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4f5]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[8]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[101]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[50b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[50c]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[50d]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[50e]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[100]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[50f]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[203]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
</UL>

<P><STRONG><a name="[1e5]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
</UL>

<P><STRONG><a name="[4ef]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot_compare
</UL>

<P><STRONG><a name="[3de]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[510]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[511]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[512]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[513]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[514]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>BSP_SD_AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp_driver_sd.o(i.BSP_SD_AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_AbortCallback
</UL>

<P><STRONG><a name="[e1]"></a>BSP_SD_GetCardInfo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_driver_sd.o(i.BSP_SD_GetCardInfo))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ioctl
</UL>

<P><STRONG><a name="[e3]"></a>BSP_SD_GetCardState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_driver_sd.o(i.BSP_SD_GetCardState))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BSP_SD_GetCardState &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CheckStatusWithTimeout
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CheckStatus
</UL>

<P><STRONG><a name="[e5]"></a>BSP_SD_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_driver_sd.o(i.BSP_SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = BSP_SD_Init &rArr; HAL_SD_Init &rArr; HAL_SD_InitCard &rArr; SD_InitCard &rArr; SDMMC_CmdSetRelAdd &rArr; SDMMC_GetCmdResp6
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_IsDetected
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_initialize
</UL>

<P><STRONG><a name="[e6]"></a>BSP_SD_IsDetected</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_driver_sd.o(i.BSP_SD_IsDetected))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_SD_IsDetected
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Init
</UL>

<P><STRONG><a name="[e9]"></a>BSP_SD_ReadBlocks_DMA</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_driver_sd.o(i.BSP_SD_ReadBlocks_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BSP_SD_ReadBlocks_DMA &rArr; HAL_SD_ReadBlocks_DMA &rArr; SDMMC_CmdReadSingleBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
</UL>

<P><STRONG><a name="[eb]"></a>BSP_SD_ReadCpltCallback</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sd_diskio.o(i.BSP_SD_ReadCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BSP_SD_ReadCpltCallback &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_RxCpltCallback
</UL>

<P><STRONG><a name="[ed]"></a>BSP_SD_WriteBlocks_DMA</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_driver_sd.o(i.BSP_SD_WriteBlocks_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BSP_SD_WriteBlocks_DMA &rArr; HAL_SD_WriteBlocks_DMA &rArr; SDMMC_CmdWriteSingleBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
</UL>

<P><STRONG><a name="[ef]"></a>BSP_SD_WriteCpltCallback</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sd_diskio.o(i.BSP_SD_WriteCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BSP_SD_WriteCpltCallback &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_TxCpltCallback
</UL>

<P><STRONG><a name="[c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4f2]"></a>Check_finger</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gt5xx.o(i.Check_finger))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchpad_read
</UL>

<P><STRONG><a name="[77]"></a>DHT11_Task</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, freertos.o(i.DHT11_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DHT11_Task &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[6b]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2_Stream0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Stream0_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2_Stream3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Stream3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2_Stream6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Stream6_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[135]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM7_Init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
</UL>

<P><STRONG><a name="[f3]"></a>FATFS_LinkDriver</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ff_gen_drv.o(i.FATFS_LinkDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FATFS_LinkDriver &rArr; FATFS_LinkDriverEx
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FATFS_LinkDriverEx
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FATFS_Init
</UL>

<P><STRONG><a name="[f4]"></a>FATFS_LinkDriverEx</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, ff_gen_drv.o(i.FATFS_LinkDriverEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FATFS_LinkDriverEx
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FATFS_LinkDriver
</UL>

<P><STRONG><a name="[142]"></a>FMC_NORSRAM_Extended_Timing_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_ll_fmc.o(i.FMC_NORSRAM_Extended_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[140]"></a>FMC_NORSRAM_Init</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, stm32f4xx_ll_fmc.o(i.FMC_NORSRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_NORSRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[141]"></a>FMC_NORSRAM_Timing_Init</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, stm32f4xx_ll_fmc.o(i.FMC_NORSRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_NORSRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[fb]"></a>GTP_Init_Panel</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gt5xx.o(i.GTP_Init_Panel))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GTP_Init_Panel &rArr; GTP_Get_Info &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ResetChip
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_indev_init
</UL>

<P><STRONG><a name="[fd]"></a>GTP_Read_Version</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, gt5xx.o(i.GTP_Read_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GTP_Read_Version &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[fe]"></a>GTP_TouchProcess</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt5xx.o(i.GTP_TouchProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GTP_TouchProcess &rArr; Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchpad_read
</UL>

<P><STRONG><a name="[103]"></a>GTP_Touch_Down</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt5xx.o(i.GTP_Touch_Down))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[4f3]"></a>Get_Touch_XY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt5xx.o(i.Get_Touch_XY))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchpad_read
</UL>

<P><STRONG><a name="[105]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_CLUTLoadingCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[17a]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[f1]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[106]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[104]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_LineEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[107]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dma2d.o(i.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[12f]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>

<P><STRONG><a name="[196]"></a>HAL_DMA_GetError</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_GetError))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMAError
</UL>

<P><STRONG><a name="[f2]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream6_IRQHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
</UL>

<P><STRONG><a name="[10a]"></a>HAL_DMA_Init</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CheckFifoParam
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
</UL>

<P><STRONG><a name="[488]"></a>HAL_DMA_RegisterCallback</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_RegisterCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_RegisterCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[10e]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_flush
</UL>

<P><STRONG><a name="[110]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_PowerState_ON
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ResetChip
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_init
</UL>

<P><STRONG><a name="[112]"></a>HAL_GPIO_Init</STRONG> (Thumb, 414 bytes, Stack size 40 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
</UL>

<P><STRONG><a name="[32f]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
</UL>

<P><STRONG><a name="[16a]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ResetChip
</UL>

<P><STRONG><a name="[10b]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[14e]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[113]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[115]"></a>HAL_InitTick</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, stm32f4xx_hal_timebase_tim.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[116]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[109]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[108]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[114]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[11c]"></a>HAL_PWREx_EnableOverDrive</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableOverDrive))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_PWREx_EnableOverDrive
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[11d]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[117]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[118]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1ab]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[11e]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[11f]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 840 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[120]"></a>HAL_SD_AbortCallback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_driver_sd.o(i.HAL_SD_AbortCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SD_AbortCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_AbortCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMATxAbort
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMARxAbort
</UL>

<P><STRONG><a name="[e8]"></a>HAL_SD_ConfigWideBusOperation</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_ConfigWideBusOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_SD_ConfigWideBusOperation &rArr; SD_FindSCR &rArr; SDMMC_CmdSendSCR &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBusWidth
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Init
</UL>

<P><STRONG><a name="[12b]"></a>HAL_SD_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMATxAbort
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMARxAbort
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMAReceiveCplt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMAError
</UL>

<P><STRONG><a name="[198]"></a>HAL_SD_GetCardCSD</STRONG> (Thumb, 402 bytes, Stack size 20 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_GetCardCSD))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_SD_GetCardCSD
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
</UL>

<P><STRONG><a name="[e2]"></a>HAL_SD_GetCardInfo</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_GetCardInfo))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardInfo
</UL>

<P><STRONG><a name="[e4]"></a>HAL_SD_GetCardState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_GetCardState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMATxAbort
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMARxAbort
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMAError
</UL>

<P><STRONG><a name="[128]"></a>HAL_SD_IRQHandler</STRONG> (Thumb, 512 bytes, Stack size 24 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HAL_SD_IRQHandler &rArr; HAL_SD_TxCpltCallback &rArr; BSP_SD_WriteCpltCallback &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_TxCpltCallback
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_RxCpltCallback
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_AbortCallback
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ErrorCallback
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMATxAbort
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMARxAbort
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_WriteFIFO
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadFIFO
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[e7]"></a>HAL_SD_Init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = HAL_SD_Init &rArr; HAL_SD_InitCard &rArr; SD_InitCard &rArr; SDMMC_CmdSetRelAdd &rArr; SDMMC_GetCmdResp6
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Init
</UL>

<P><STRONG><a name="[131]"></a>HAL_SD_InitCard</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_InitCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = HAL_SD_InitCard &rArr; SD_InitCard &rArr; SDMMC_CmdSetRelAdd &rArr; SDMMC_GetCmdResp6
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_PowerState_ON
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[130]"></a>HAL_SD_MspInit</STRONG> (Thumb, 332 bytes, Stack size 64 bytes, sdio.o(i.HAL_SD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[ea]"></a>HAL_SD_ReadBlocks_DMA</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_ReadBlocks_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_SD_ReadBlocks_DMA &rArr; SDMMC_CmdReadSingleBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadSingleBlock
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadMultiBlock
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ConfigData
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_ReadBlocks_DMA
</UL>

<P><STRONG><a name="[12c]"></a>HAL_SD_RxCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_driver_sd.o(i.HAL_SD_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_SD_RxCpltCallback &rArr; BSP_SD_ReadCpltCallback &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_ReadCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMAReceiveCplt
</UL>

<P><STRONG><a name="[12d]"></a>HAL_SD_TxCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_driver_sd.o(i.HAL_SD_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_SD_TxCpltCallback &rArr; BSP_SD_WriteCpltCallback &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_WriteCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>

<P><STRONG><a name="[ee]"></a>HAL_SD_WriteBlocks_DMA</STRONG> (Thumb, 290 bytes, Stack size 80 bytes, stm32f4xx_hal_sd.o(i.HAL_SD_WriteBlocks_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_SD_WriteBlocks_DMA &rArr; SDMMC_CmdWriteSingleBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteSingleBlock
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteMultiBlock
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ConfigData
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_WriteBlocks_DMA
</UL>

<P><STRONG><a name="[13c]"></a>HAL_SPI_Init</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[13d]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[13e]"></a>HAL_SRAM_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f4xx_hal_sram.o(i.HAL_SRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SRAM_Init &rArr; HAL_SRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspInit
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_NORSRAM_Timing_Init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_NORSRAM_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
</UL>

<P><STRONG><a name="[13f]"></a>HAL_SRAM_MspInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fmc.o(i.HAL_SRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[14b]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[14d]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[184]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM7_Init
</UL>

<P><STRONG><a name="[119]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM7_Init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[143]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_Base_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[145]"></a>HAL_TIM_Base_Start</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>

<P><STRONG><a name="[11a]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[290]"></a>HAL_TIM_Base_Stop</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>

<P><STRONG><a name="[147]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[146]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[148]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[149]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[14a]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[14c]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[14f]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[150]"></a>HAL_UART_MspInit</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[152]"></a>HAL_UART_Transmit</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[a]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[162]"></a>I2C_ReadBytes</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_i2c_touch.o(i.I2C_ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_ReadBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_NAck
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
</UL>

<P><STRONG><a name="[fc]"></a>I2C_ResetChip</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bsp_i2c_touch.o(i.I2C_ResetChip))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_ResetChip &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[16b]"></a>I2C_WriteBytes</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bsp_i2c_touch.o(i.I2C_WriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
</UL>

<P><STRONG><a name="[16c]"></a>ILI9488_init</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, ili9488.o(i.ILI9488_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ILI9488_init &rArr; LCD_Clear &rArr; LCD_SetWindows
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_direction
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Read_ID
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[16f]"></a>LCD_Clear</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, ili9488.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_Clear &rArr; LCD_SetWindows
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_init
</UL>

<P><STRONG><a name="[171]"></a>LCD_ReadReg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ili9488.o(i.LCD_ReadReg))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Read_ID
</UL>

<P><STRONG><a name="[16d]"></a>LCD_Read_ID</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ili9488.o(i.LCD_Read_ID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Read_ID
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_init
</UL>

<P><STRONG><a name="[170]"></a>LCD_SetWindows</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, ili9488.o(i.LCD_SetWindows))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_SetWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_flush
</UL>

<P><STRONG><a name="[172]"></a>LCD_WriteReg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ili9488.o(i.LCD_WriteReg))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_direction
</UL>

<P><STRONG><a name="[16e]"></a>LCD_direction</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, ili9488.o(i.LCD_direction))
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_init
</UL>

<P><STRONG><a name="[76]"></a>Lvgl_Task</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, freertos.o(i.Lvgl_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = Lvgl_Task &rArr; lv_box_demo &rArr; Home_open &rArr; lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_handler
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_indev_init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_fs_init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_box_demo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[179]"></a>MX_DMA2D_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dma2d.o(i.MX_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17b]"></a>MX_DMA_Init</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, dma.o(i.MX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MX_DMA_Init &rArr; HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17c]"></a>MX_FATFS_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fatfs.o(i.MX_FATFS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MX_FATFS_Init &rArr; FATFS_LinkDriver &rArr; FATFS_LinkDriverEx
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FATFS_LinkDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17d]"></a>MX_FMC_Init</STRONG> (Thumb, 184 bytes, Stack size 64 bytes, fmc.o(i.MX_FMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MX_FMC_Init &rArr; HAL_SRAM_Init &rArr; HAL_SRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17e]"></a>MX_FREERTOS_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, freertos.o(i.MX_FREERTOS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = MX_FREERTOS_Init &rArr; osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[181]"></a>MX_GPIO_Init</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4ae]"></a>MX_SDIO_SD_Init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sdio.o(i.MX_SDIO_SD_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[182]"></a>MX_SPI1_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, spi.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[183]"></a>MX_TIM7_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, tim.o(i.MX_TIM7_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MX_TIM7_Init &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[185]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[137]"></a>SDIO_ConfigData</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_ll_sdmmc.o(i.SDIO_ConfigData))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[197]"></a>SDIO_GetPowerState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_ll_sdmmc.o(i.SDIO_GetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
</UL>

<P><STRONG><a name="[122]"></a>SDIO_GetResponse</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_ll_sdmmc.o(i.SDIO_GetResponse))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp6
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>

<P><STRONG><a name="[43]"></a>SDIO_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SDIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SDIO_IRQHandler &rArr; HAL_SD_IRQHandler &rArr; HAL_SD_TxCpltCallback &rArr; BSP_SD_WriteCpltCallback &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>SDIO_Init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f4xx_ll_sdmmc.o(i.SDIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
</UL>

<P><STRONG><a name="[132]"></a>SDIO_PowerState_ON</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_ll_sdmmc.o(i.SDIO_PowerState_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SDIO_PowerState_ON &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[129]"></a>SDIO_ReadFIFO</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_ll_sdmmc.o(i.SDIO_ReadFIFO))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[186]"></a>SDIO_SendCommand</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_ll_sdmmc.o(i.SDIO_SendCommand))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteSingleBlock
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteMultiBlock
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSetRelAdd
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendSCR
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendCSD
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendCID
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSelDesel
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadSingleBlock
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadMultiBlock
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdOperCond
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdGoIdleState
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBusWidth
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppOperCommand
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
</UL>

<P><STRONG><a name="[12e]"></a>SDIO_WriteFIFO</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_ll_sdmmc.o(i.SDIO_WriteFIFO))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>

<P><STRONG><a name="[124]"></a>SDMMC_CmdAppCommand</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdAppCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdAppCommand &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[188]"></a>SDMMC_CmdAppOperCommand</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdAppOperCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDMMC_CmdAppOperCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp3
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[136]"></a>SDMMC_CmdBlockLength</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdBlockLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdBlockLength &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[125]"></a>SDMMC_CmdBusWidth</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdBusWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdBusWidth &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>

<P><STRONG><a name="[18a]"></a>SDMMC_CmdGoIdleState</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdGoIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDMMC_CmdGoIdleState
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[18b]"></a>SDMMC_CmdOperCond</STRONG> (Thumb, 112 bytes, Stack size 36 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdOperCond))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDMMC_CmdOperCond
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[138]"></a>SDMMC_CmdReadMultiBlock</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdReadMultiBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdReadMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
</UL>

<P><STRONG><a name="[139]"></a>SDMMC_CmdReadSingleBlock</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdReadSingleBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdReadSingleBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
</UL>

<P><STRONG><a name="[18c]"></a>SDMMC_CmdSelDesel</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdSelDesel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdSelDesel &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
</UL>

<P><STRONG><a name="[18d]"></a>SDMMC_CmdSendCID</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdSendCID))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDMMC_CmdSendCID
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp2
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
</UL>

<P><STRONG><a name="[18f]"></a>SDMMC_CmdSendCSD</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdSendCSD))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDMMC_CmdSendCSD
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp2
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
</UL>

<P><STRONG><a name="[190]"></a>SDMMC_CmdSendSCR</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdSendSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdSendSCR &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[127]"></a>SDMMC_CmdSendStatus</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdSendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState
</UL>

<P><STRONG><a name="[191]"></a>SDMMC_CmdSetRelAdd</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdSetRelAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SDMMC_CmdSetRelAdd &rArr; SDMMC_GetCmdResp6
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp6
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitCard
</UL>

<P><STRONG><a name="[12a]"></a>SDMMC_CmdStopTransfer</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdStopTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdStopTransfer &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMATxAbort
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMARxAbort
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMAReceiveCplt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMAError
</UL>

<P><STRONG><a name="[13a]"></a>SDMMC_CmdWriteMultiBlock</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdWriteMultiBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdWriteMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
</UL>

<P><STRONG><a name="[13b]"></a>SDMMC_CmdWriteSingleBlock</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_CmdWriteSingleBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDMMC_CmdWriteSingleBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
</UL>

<P><STRONG><a name="[d1]"></a>SD_initialize</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, sd_diskio.o(i.SD_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = SD_initialize &rArr; BSP_SD_Init &rArr; HAL_SD_Init &rArr; HAL_SD_InitCard &rArr; SD_InitCard &rArr; SDMMC_CmdSetRelAdd &rArr; SDMMC_GetCmdResp6
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CheckStatus
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>SD_ioctl</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, sd_diskio.o(i.SD_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_ioctl
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>SD_read</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, sd_diskio.o(i.SD_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SD_read &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CheckStatusWithTimeout
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_ReadBlocks_DMA
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>SD_status</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sd_diskio.o(i.SD_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SD_status &rArr; SD_CheckStatus &rArr; BSP_SD_GetCardState &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CheckStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>SD_write</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, sd_diskio.o(i.SD_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SD_write &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CheckStatusWithTimeout
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_WriteBlocks_DMA
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[11]"></a>SysTick_Handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, port.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1a9]"></a>SystemClock_Config</STRONG> (Thumb, 128 bytes, Stack size 88 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>SystemInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_inc
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[144]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[d]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1ac]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[515]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[f7]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_fs_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[516]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[517]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[518]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1b0]"></a>_lv_anim_core_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_anim.o(i._lv_anim_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = _lv_anim_core_init &rArr; lv_task_create &rArr; lv_task_create_basic &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1b5]"></a>_lv_area_align</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, lv_area.o(i._lv_area_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _lv_area_align
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_value_str
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_core
</UL>

<P><STRONG><a name="[1c1]"></a>_lv_area_intersect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lv_area.o(i._lv_area_intersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[1b8]"></a>_lv_area_is_in</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, lv_area.o(i._lv_area_is_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[47a]"></a>_lv_area_is_on</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lv_area.o(i._lv_area_is_on))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_design
</UL>

<P><STRONG><a name="[1b9]"></a>_lv_area_is_point_on</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, lv_area.o(i._lv_area_is_point_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_point_within_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_point_on_coords
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
</UL>

<P><STRONG><a name="[48d]"></a>_lv_area_join</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lv_area.o(i._lv_area_join))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_area_join
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
</UL>

<P><STRONG><a name="[1bb]"></a>_lv_area_set_pos</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lv_area.o(i._lv_area_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _lv_area_set_pos
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_height
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_width
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
</UL>

<P><STRONG><a name="[1be]"></a>_lv_blend_fill</STRONG> (Thumb, 238 bytes, Stack size 80 bytes, lv_draw_blend.o(i._lv_blend_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = _lv_blend_fill &rArr; fill_blended &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_set_px
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_blended
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[1c5]"></a>_lv_blend_map</STRONG> (Thumb, 248 bytes, Stack size 80 bytes, lv_draw_blend.o(i._lv_blend_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = _lv_blend_map &rArr; map_blended &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_set_px
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_blended
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[342]"></a>_lv_disp_pop_from_inv_buf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lv_hal_disp.o(i._lv_disp_pop_from_inv_buf))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
</UL>

<P><STRONG><a name="[94]"></a>_lv_disp_refr_task</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, lv_refr.o(i._lv_disp_refr_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 2144<LI>Call Chain = _lv_disp_refr_task &rArr; lv_refr_areas &rArr; lv_refr_area &rArr; lv_refr_area_part &rArr; lv_draw_img &rArr; lv_img_draw_core &rArr; show_error &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_set_prio
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_copy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_is_true_double_buf
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_free_all
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_font_clean_up_fmt_txt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_vdb_flush
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_areas
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(i.lv_disp_drv_register)
</UL>
<P><STRONG><a name="[1d3]"></a>_lv_font_clean_up_fmt_txt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_font_fmt_txt.o(i._lv_font_clean_up_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _lv_font_clean_up_fmt_txt &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
</UL>

<P><STRONG><a name="[1d5]"></a>_lv_fs_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_fs.o(i._lv_fs_init))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1d6]"></a>_lv_group_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_group.o(i._lv_group_init))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1d7]"></a>_lv_img_buf_get_transformed_area</STRONG> (Thumb, 576 bytes, Stack size 56 bytes, lv_img_buf.o(i._lv_img_buf_get_transformed_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _lv_img_buf_get_transformed_area
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[1dd]"></a>_lv_img_buf_transform_anti_alias</STRONG> (Thumb, 644 bytes, Stack size 64 bytes, lv_img_buf.o(i._lv_img_buf_transform_anti_alias))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _lv_img_buf_transform_anti_alias &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
</UL>

<P><STRONG><a name="[1e0]"></a>_lv_img_buf_transform_init</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, lv_img_buf.o(i._lv_img_buf_transform_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_img_buf_transform_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_is_chroma_keyed
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_has_alpha
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[1e3]"></a>_lv_img_cache_open</STRONG> (Thumb, 336 bytes, Stack size 32 bytes, lv_img_cache.o(i._lv_img_cache_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = _lv_img_cache_open &rArr; lv_img_decoder_open &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
</UL>

<P><STRONG><a name="[1e8]"></a>_lv_img_decoder_init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lv_img_decoder.o(i._lv_img_decoder_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = _lv_img_decoder_init &rArr; lv_img_decoder_create &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1ec]"></a>_lv_indev_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_indev.o(i._lv_indev_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _lv_indev_init &rArr; lv_indev_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1ee]"></a>_lv_indev_read</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lv_hal_indev.o(i._lv_indev_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = _lv_indev_read &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
</UL>

<P><STRONG><a name="[9d]"></a>_lv_indev_read_task</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, lv_indev.o(i._lv_indev_read_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = _lv_indev_read_task &rArr; indev_button_proc &rArr; indev_proc_press &rArr; indev_drag_throw &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_reset_query_handler
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_button_proc
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_indev.o(i.lv_indev_drv_register)
</UL>
<P><STRONG><a name="[1f6]"></a>_lv_inv_area</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, lv_refr.o(i._lv_inv_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_set_prio
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>

<P><STRONG><a name="[1f9]"></a>_lv_ll_chg_list</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lv_ll.o(i._lv_ll_chg_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_ll_chg_list &rArr; _lv_ll_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
</UL>

<P><STRONG><a name="[98]"></a>_lv_ll_get_head</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_get_head))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_handler
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_set_prio
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_mod
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_position
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_task
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_prev
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_drv
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(i.lv_group_focus_next)
</UL>
<P><STRONG><a name="[97]"></a>_lv_ll_get_next</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_get_next))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_handler
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_set_prio
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_mod
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_position
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_task
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_drv
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(i.lv_group_focus_next)
</UL>
<P><STRONG><a name="[99]"></a>_lv_ll_get_prev</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_get_prev))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_back
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_move_before
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_prev
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(i.lv_group_focus_prev)
</UL>
<P><STRONG><a name="[9a]"></a>_lv_ll_get_tail</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_get_tail))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_back
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_move_before
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(i.lv_group_focus_prev)
</UL>
<P><STRONG><a name="[1b1]"></a>_lv_ll_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_init))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_group_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_task_core_init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_fs_init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[1fd]"></a>_lv_ll_ins_head</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_ll.o(i._lv_ll_ins_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_prev
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_register
</UL>

<P><STRONG><a name="[1ff]"></a>_lv_ll_ins_prev</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lv_ll.o(i._lv_ll_ins_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = _lv_ll_ins_prev &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
</UL>

<P><STRONG><a name="[200]"></a>_lv_ll_ins_tail</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_ll.o(i._lv_ll_ins_tail))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = _lv_ll_ins_tail &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
</UL>

<P><STRONG><a name="[348]"></a>_lv_ll_is_empty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_is_empty))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
</UL>

<P><STRONG><a name="[201]"></a>_lv_ll_move_before</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lv_ll.o(i._lv_ll_move_before))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_ll_move_before &rArr; _lv_ll_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_set_prio
</UL>

<P><STRONG><a name="[1fa]"></a>_lv_ll_remove</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lv_ll.o(i._lv_ll_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _lv_ll_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_chg_list
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_del
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_move_before
</UL>

<P><STRONG><a name="[1cd]"></a>_lv_log_add</STRONG> (Thumb, 84 bytes, Stack size 288 bytes, lv_log.o(i._lv_log_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_vsnprintf
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_throw
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_dir
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_click
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_button_proc
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_focused
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_prev
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_blended
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_blended
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_remove_style
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_trans_style
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_hidden
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_throw
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_parent
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_dir
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_adv_hittest
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_pad
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_realign
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_fit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_back
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_auto_realign
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_protect
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_mid
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send_func
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_register
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_focused_btn
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_map_array
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_focused_btn
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_ctrl
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_align
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_active_btn
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_style
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_toggle
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_state
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_checkable
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_get_checkable
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_type
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_type
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_style
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_align
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_layout
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_top
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_right
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_left
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_auto_size
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_style
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_anim_time
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_align
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_sel_start
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_sel_end
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_recolor
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_long_mode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_value
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_style
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scroll_propagation
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_fit
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_style
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_btnmatrix
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_anim_time
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_active_btn
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab_act
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_anim_time
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_style
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_on
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_off
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_get_style
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_settings_event_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_sensors_event_handler
</UL>

<P><STRONG><a name="[1d2]"></a>_lv_mem_buf_free_all</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_mem.o(i._lv_mem_buf_free_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_mem_buf_free_all &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
</UL>

<P><STRONG><a name="[204]"></a>_lv_mem_buf_get</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, lv_mem.o(i._lv_mem_buf_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[206]"></a>_lv_mem_buf_release</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_mem.o(i._lv_mem_buf_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _lv_mem_buf_release &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3c8]"></a>_lv_mem_get_size</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_mem.o(i._lv_mem_get_size))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>

<P><STRONG><a name="[3f2]"></a>_lv_mem_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_mem.o(i._lv_mem_init))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[248]"></a>_lv_memcpy</STRONG> (Thumb, 296 bytes, Stack size 12 bytes, lv_mem.o(i._lv_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _lv_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_copy
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_register
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
</UL>

<P><STRONG><a name="[2c2]"></a>_lv_memset</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, lv_mem.o(i._lv_memset))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[1d0]"></a>_lv_memset_00</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lv_mem.o(i._lv_memset_00))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_invalidate_src
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_steep
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_flat
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_init
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_init
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_init
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_buf_init
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
</UL>

<P><STRONG><a name="[2c8]"></a>_lv_memset_ff</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, lv_mem.o(i._lv_memset_ff))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
</UL>

<P><STRONG><a name="[207]"></a>_lv_obj_disable_style_caching</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_obj.o(i._lv_obj_disable_style_caching))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_obj_disable_style_caching &rArr; lv_obj_get_style_list &rArr; lv_signal_send
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
</UL>

<P><STRONG><a name="[209]"></a>_lv_obj_get_style_color</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, lv_obj.o(i._lv_obj_get_style_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = _lv_obj_get_style_color &rArr; lv_obj_get_state &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_color
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pattern_recolor
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[20d]"></a>_lv_obj_get_style_int</STRONG> (Thumb, 426 bytes, Stack size 32 bytes, lv_obj.o(i._lv_obj_get_style_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_int
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_ofs_y
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_ofs_x
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_letter_space
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_blend_mode
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_align
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_zoom
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_angle
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_decor
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_blend_mode
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_blend_mode
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pattern_blend_mode
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_blend_mode
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_top
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_right
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_left
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_bottom
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_line_blend_mode
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_image_blend_mode
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_side
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_blend_mode
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_blend_mode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_signal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_top
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_right
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_left
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_bottom
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_zoom
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_angle
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_size
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_indic_size
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>

<P><STRONG><a name="[210]"></a>_lv_obj_get_style_opa</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, lv_obj.o(i._lv_obj_get_style_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + In Cycle
<LI>Call Chain = _lv_obj_get_style_opa &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_opa
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_opa
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_image_recolor_opa
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[212]"></a>_lv_obj_get_style_ptr</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, lv_obj.o(i._lv_obj_get_style_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + In Cycle
<LI>Call Chain = _lv_obj_get_style_ptr &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_normal
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_ptr
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_str
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_font
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pattern_image
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_signal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
</UL>

<P><STRONG><a name="[215]"></a>_lv_obj_set_style_local_color</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_obj.o(i._lv_obj_set_style_local_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = _lv_obj_set_style_local_color &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_color
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_bg_color
</UL>

<P><STRONG><a name="[1a5]"></a>_lv_obj_set_style_local_int</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_obj.o(i._lv_obj_set_style_local_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = _lv_obj_set_style_local_int &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_int
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_ofs_y
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[21a]"></a>_lv_obj_set_style_local_opa</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_obj.o(i._lv_obj_set_style_local_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = _lv_obj_set_style_local_opa &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_opa
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_opa
</UL>

<P><STRONG><a name="[21c]"></a>_lv_obj_set_style_local_ptr</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_obj.o(i._lv_obj_set_style_local_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = _lv_obj_set_style_local_ptr &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_ptr
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_str
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_font
</UL>

<P><STRONG><a name="[1bf]"></a>_lv_refr_get_disp_refreshing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_refr.o(i._lv_refr_get_disp_refreshing))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_set_px
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_set_px
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_cache
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma2d_wait
</UL>

<P><STRONG><a name="[3f7]"></a>_lv_refr_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_refr.o(i._lv_refr_init))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[3c6]"></a>_lv_sqrt</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, lv_math.o(i._lv_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _lv_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
</UL>

<P><STRONG><a name="[21e]"></a>_lv_style_get_color</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_style.o(i._lv_style_get_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _lv_style_get_color &rArr; get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_color
</UL>

<P><STRONG><a name="[222]"></a>_lv_style_get_int</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_style.o(i._lv_style_get_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _lv_style_get_int &rArr; get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_int
</UL>

<P><STRONG><a name="[223]"></a>_lv_style_get_mem_size</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_style.o(i._lv_style_get_mem_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _lv_style_get_mem_size &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_id
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prop_size
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_copy
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>

<P><STRONG><a name="[226]"></a>_lv_style_get_opa</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_style.o(i._lv_style_get_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _lv_style_get_opa &rArr; get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_opa
</UL>

<P><STRONG><a name="[227]"></a>_lv_style_get_ptr</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_style.o(i._lv_style_get_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _lv_style_get_ptr &rArr; get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_ptr
</UL>

<P><STRONG><a name="[228]"></a>_lv_style_list_add_style</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lv_style.o(i._lv_style_list_add_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = _lv_style_list_add_style &rArr; _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_remove_style
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_trans_style
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
</UL>

<P><STRONG><a name="[22a]"></a>_lv_style_list_add_trans_style</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lv_style.o(i._lv_style_list_add_trans_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = _lv_style_list_add_trans_style &rArr; _lv_style_list_add_style &rArr; _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_transition_style
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[20b]"></a>_lv_style_list_get_color</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lv_style.o(i._lv_style_list_get_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _lv_style_list_get_color &rArr; _lv_style_get_color &rArr; get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_color
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_get_style
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
</UL>

<P><STRONG><a name="[20f]"></a>_lv_style_list_get_int</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lv_style.o(i._lv_style_list_get_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _lv_style_list_get_int &rArr; _lv_style_get_int &rArr; get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_int
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_get_style
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>

<P><STRONG><a name="[211]"></a>_lv_style_list_get_opa</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lv_style.o(i._lv_style_list_get_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _lv_style_list_get_opa &rArr; _lv_style_get_opa &rArr; get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_opa
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_get_style
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
</UL>

<P><STRONG><a name="[213]"></a>_lv_style_list_get_ptr</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, lv_style.o(i._lv_style_list_get_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _lv_style_list_get_ptr &rArr; _lv_style_get_ptr &rArr; get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_ptr
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_get_style
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
</UL>

<P><STRONG><a name="[22b]"></a>_lv_style_list_get_transition_style</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_style.o(i._lv_style_list_get_transition_style))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_reset
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_trans_style
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
</UL>

<P><STRONG><a name="[229]"></a>_lv_style_list_remove_style</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, lv_style.o(i._lv_style_list_remove_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
</UL>

<P><STRONG><a name="[22d]"></a>_lv_style_list_reset</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lv_style.o(i._lv_style_list_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_style_list_reset &rArr; lv_style_reset &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_get_local_style
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_transition_style
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
</UL>

<P><STRONG><a name="[216]"></a>_lv_style_list_set_local_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style.o(i._lv_style_list_set_local_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = _lv_style_list_set_local_color &rArr; get_alloc_local_style &rArr; _lv_style_list_add_style &rArr; _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_color
</UL>

<P><STRONG><a name="[219]"></a>_lv_style_list_set_local_int</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style.o(i._lv_style_list_set_local_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = _lv_style_list_set_local_int &rArr; get_alloc_local_style &rArr; _lv_style_list_add_style &rArr; _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_int
</UL>

<P><STRONG><a name="[21b]"></a>_lv_style_list_set_local_opa</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style.o(i._lv_style_list_set_local_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = _lv_style_list_set_local_opa &rArr; get_alloc_local_style &rArr; _lv_style_list_add_style &rArr; _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_opa
</UL>

<P><STRONG><a name="[21d]"></a>_lv_style_list_set_local_ptr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style.o(i._lv_style_list_set_local_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = _lv_style_list_set_local_ptr &rArr; get_alloc_local_style &rArr; _lv_style_list_add_style &rArr; _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_ptr
</UL>

<P><STRONG><a name="[231]"></a>_lv_style_set_color</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, lv_style.o(i._lv_style_set_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_mem_size
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_resize
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_box_demo
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_color
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_value_color
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_color
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_grad_color
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_end_color
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_image_recolor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[19f]"></a>_lv_style_set_int</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, lv_style.o(i._lv_style_set_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_mem_size
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_resize
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_int
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_time
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_prop_6
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_prop_5
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_delay
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_width
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_line_space
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_size
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_width
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_width
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_end_line_width
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_pad
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_margin_top
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_margin_bottom
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_rounded
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_clip_corner
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[232]"></a>_lv_style_set_opa</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, lv_style.o(i._lv_style_set_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = _lv_style_set_opa &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_mem_size
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_resize
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_box_demo
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_opa
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pattern_opa
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
</UL>

<P><STRONG><a name="[233]"></a>_lv_style_set_ptr</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, lv_style.o(i._lv_style_set_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = _lv_style_set_ptr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_mem_size
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_resize
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_ptr
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_value_font
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
</UL>

<P><STRONG><a name="[235]"></a>_lv_task_core_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_task.o(i._lv_task_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_task_core_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1d8]"></a>_lv_trigo_sin</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, lv_math.o(i._lv_trigo_sin))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
</UL>

<P><STRONG><a name="[236]"></a>_lv_txt_get_next_line</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, lv_txt.o(i._lv_txt_get_next_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_next_word
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[238]"></a>_lv_txt_get_size</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, lv_txt.o(i._lv_txt_get_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = _lv_txt_get_size &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_width
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_value_str
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[239]"></a>_lv_txt_get_width</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, lv_txt.o(i._lv_txt_get_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _lv_txt_get_width &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[23a]"></a>_lv_txt_is_cmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lv_txt.o(i._lv_txt_is_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_width
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_next_word
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[327]"></a>_lv_utils_bsearch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, lv_utils.o(i._lv_utils_bsearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_kern_value
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>

<P><STRONG><a name="[28f]"></a>delay_us</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tim.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_NAck
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Ack
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_flush
</UL>

<P><STRONG><a name="[312]"></a>disk_initialize</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[4f0]"></a>disk_ioctl</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[2f0]"></a>disk_read</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[311]"></a>disk_status</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[2ef]"></a>disk_write</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[2e5]"></a>f_close</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = f_close &rArr; f_sync &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_close
</UL>

<P><STRONG><a name="[2ea]"></a>f_closedir</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ff.o(i.f_closedir))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = f_closedir &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_dir_close
</UL>

<P><STRONG><a name="[2eb]"></a>f_getfree</STRONG> (Thumb, 220 bytes, Stack size 72 bytes, ff.o(i.f_getfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = f_getfree &rArr; find_volume &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_free
</UL>

<P><STRONG><a name="[2ed]"></a>f_lseek</STRONG> (Thumb, 554 bytes, Stack size 48 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = f_lseek &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_seek
</UL>

<P><STRONG><a name="[2f1]"></a>f_mount</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = f_mount &rArr; find_volume &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_del_syncobj
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_cre_syncobj
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_fs_init
</UL>

<P><STRONG><a name="[2f6]"></a>f_open</STRONG> (Thumb, 536 bytes, Stack size 632 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_lock
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_lock
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_open
</UL>

<P><STRONG><a name="[2ff]"></a>f_opendir</STRONG> (Thumb, 148 bytes, Stack size 544 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_lock
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_dir_open
</UL>

<P><STRONG><a name="[300]"></a>f_read</STRONG> (Thumb, 380 bytes, Stack size 48 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = f_read &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_read
</UL>

<P><STRONG><a name="[301]"></a>f_readdir</STRONG> (Thumb, 98 bytes, Stack size 536 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_dir_read
</UL>

<P><STRONG><a name="[303]"></a>f_rename</STRONG> (Thumb, 278 bytes, Stack size 680 bytes, ff.o(i.f_rename))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = f_rename &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_rename
</UL>

<P><STRONG><a name="[2e6]"></a>f_sync</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = f_sync &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[305]"></a>f_truncate</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, ff.o(i.f_truncate))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = f_truncate &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_trunc
</UL>

<P><STRONG><a name="[306]"></a>f_unlink</STRONG> (Thumb, 180 bytes, Stack size 640 bytes, ff.o(i.f_unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_remove
</UL>

<P><STRONG><a name="[307]"></a>f_write</STRONG> (Thumb, 438 bytes, Stack size 48 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = f_write &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_write
</UL>

<P><STRONG><a name="[285]"></a>ff_convert</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, ccsbcs.o(i.ff_convert))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[2f5]"></a>ff_cre_syncobj</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, syscall.o(i.ff_cre_syncobj))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ff_cre_syncobj &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>

<P><STRONG><a name="[2f4]"></a>ff_del_syncobj</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, syscall.o(i.ff_del_syncobj))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ff_del_syncobj &rArr; osSemaphoreDelete &rArr; vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>

<P><STRONG><a name="[309]"></a>ff_rel_grant</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, syscall.o(i.ff_rel_grant))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ff_rel_grant &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
</UL>

<P><STRONG><a name="[30b]"></a>ff_req_grant</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, syscall.o(i.ff_req_grant))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_fs
</UL>

<P><STRONG><a name="[27d]"></a>ff_wtoupper</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, ccsbcs.o(i.ff_wtoupper))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[79]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, bsp_usart_fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[2f9]"></a>get_fattime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fatfs.o(i.get_fattime))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[169]"></a>i2c_Ack</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bsp_i2c_touch.o(i.i2c_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_Ack &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[167]"></a>i2c_NAck</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp_i2c_touch.o(i.i2c_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = i2c_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[168]"></a>i2c_ReadByte</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, bsp_i2c_touch.o(i.i2c_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = i2c_ReadByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[164]"></a>i2c_SendByte</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, bsp_i2c_touch.o(i.i2c_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[163]"></a>i2c_Start</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bsp_i2c_touch.o(i.i2c_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_Start &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[166]"></a>i2c_Stop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_i2c_touch.o(i.i2c_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = i2c_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[165]"></a>i2c_WaitAck</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_i2c_touch.o(i.i2c_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_WaitAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[363]"></a>lv_anim_del</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lv_anim.o(i.lv_anim_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_anim_del &rArr; anim_mark_list_change &rArr; lv_task_set_prio &rArr; _lv_ll_move_before &rArr; _lv_ll_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_signal
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[364]"></a>lv_anim_get</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_anim.o(i.lv_anim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_anim_get
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[333]"></a>lv_anim_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lv_anim.o(i.lv_anim_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_anim_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_start_edge_flash
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_ver
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_hor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_out_all
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_generic_event_cb
</UL>

<P><STRONG><a name="[d6]"></a>lv_anim_path_linear</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lv_anim.o(i.lv_anim_path_linear))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_anim.o(.constdata)
</UL>
<P><STRONG><a name="[40a]"></a>lv_anim_speed_to_time</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lv_anim.o(i.lv_anim_speed_to_time))
<BR><BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[335]"></a>lv_anim_start</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, lv_anim.o(i.lv_anim_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_anim_start &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_is_empty
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_start_edge_flash
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_ver
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_hor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_out_all
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_generic_event_cb
</UL>

<P><STRONG><a name="[2d6]"></a>lv_area_get_size</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_get_size))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_areas
</UL>

<P><STRONG><a name="[325]"></a>lv_area_set</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_area.o(i.lv_area_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_area_set
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_edge_flash_area
</UL>

<P><STRONG><a name="[1bd]"></a>lv_area_set_height</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_set_height))
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_set_pos
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[1bc]"></a>lv_area_set_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_set_width))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_set_pos
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[367]"></a>lv_bar_create</STRONG> (Thumb, 336 bytes, Stack size 32 bytes, lv_bar.o(i.lv_bar_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = lv_bar_create &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_init_anim
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[373]"></a>lv_bar_get_start_value</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_get_start_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_bar_get_start_value &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
</UL>

<P><STRONG><a name="[375]"></a>lv_bar_get_type</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_get_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_bar_get_type &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_type
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
</UL>

<P><STRONG><a name="[376]"></a>lv_bar_get_value</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_bar_get_value &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_value
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_on
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_off
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_get_state
</UL>

<P><STRONG><a name="[377]"></a>lv_bar_set_range</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lv_bar.o(i.lv_bar_set_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096<LI>Call Chain = lv_bar_set_range &rArr; lv_bar_set_value &rArr; lv_bar_set_value_with_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_type
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[2a9]"></a>lv_bar_set_start_value</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lv_bar.o(i.lv_bar_set_start_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = lv_bar_set_start_value &rArr; lv_bar_set_value_with_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[2a8]"></a>lv_bar_set_type</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_set_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_bar_set_type &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[2a2]"></a>lv_bar_set_value</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lv_bar.o(i.lv_bar_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = lv_bar_set_value &rArr; lv_bar_set_value_with_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_on
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_off
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[177]"></a>lv_box_demo</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lv_box.o(i.lv_box_demo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = lv_box_demo &rArr; Home_open &rArr; lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvgl_Task
</UL>

<P><STRONG><a name="[242]"></a>lv_btn_create</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, lv_btn.o(i.lv_btn_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = lv_btn_create &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
</UL>

<P><STRONG><a name="[37b]"></a>lv_btn_get_checkable</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_btn.o(i.lv_btn_get_checkable))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_btn_get_checkable &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_signal
</UL>

<P><STRONG><a name="[37c]"></a>lv_btn_set_checkable</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_btn.o(i.lv_btn_set_checkable))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_btn_set_checkable &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
</UL>

<P><STRONG><a name="[37d]"></a>lv_btn_set_state</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, lv_btn.o(i.lv_btn_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = lv_btn_set_state &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_signal
</UL>

<P><STRONG><a name="[29d]"></a>lv_btn_toggle</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_btn.o(i.lv_btn_toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = lv_btn_toggle &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[381]"></a>lv_btnmatrix_clear_btn_ctrl</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_clear_btn_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000<LI>Call Chain = lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
</UL>

<P><STRONG><a name="[382]"></a>lv_btnmatrix_clear_btn_ctrl_all</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_clear_btn_ctrl_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_toggled
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
</UL>

<P><STRONG><a name="[383]"></a>lv_btnmatrix_create</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, lv_btnmatrix.o(i.lv_btnmatrix_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = lv_btnmatrix_create &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
</UL>

<P><STRONG><a name="[388]"></a>lv_btnmatrix_get_active_btn</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_get_active_btn))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_btnmatrix_get_active_btn &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_active_btn
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
</UL>

<P><STRONG><a name="[386]"></a>lv_btnmatrix_get_align</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_get_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_btnmatrix_get_align &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
</UL>

<P><STRONG><a name="[389]"></a>lv_btnmatrix_get_btn_ctrl</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_get_btn_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = lv_btnmatrix_get_btn_ctrl &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_toggled
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
</UL>

<P><STRONG><a name="[38a]"></a>lv_btnmatrix_get_focused_btn</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_get_focused_btn))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_btnmatrix_get_focused_btn &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_active_btn
</UL>

<P><STRONG><a name="[38b]"></a>lv_btnmatrix_get_map_array</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_get_map_array))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_btnmatrix_get_map_array &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
</UL>

<P><STRONG><a name="[297]"></a>lv_btnmatrix_set_btn_ctrl</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_btn_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_toggled
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[38d]"></a>lv_btnmatrix_set_btn_ctrl_all</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_btn_ctrl_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = lv_btnmatrix_set_btn_ctrl_all &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
</UL>

<P><STRONG><a name="[385]"></a>lv_btnmatrix_set_ctrl_map</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_ctrl_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = lv_btnmatrix_set_ctrl_map &rArr; lv_btnmatrix_set_map &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
</UL>

<P><STRONG><a name="[38e]"></a>lv_btnmatrix_set_focused_btn</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_focused_btn))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_btnmatrix_set_focused_btn &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[384]"></a>lv_btnmatrix_set_map</STRONG> (Thumb, 648 bytes, Stack size 88 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = lv_btnmatrix_set_map &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_width
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
</UL>

<P><STRONG><a name="[29f]"></a>lv_checkbox_create</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, lv_checkbox.o(i.lv_checkbox_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408<LI>Call Chain = lv_checkbox_create &rArr; lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_checkable
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[396]"></a>lv_checkbox_set_text</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_checkbox_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = lv_checkbox_set_text &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
</UL>

<P><STRONG><a name="[268]"></a>lv_color_darken</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_color.o(i.lv_color_darken))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_color_darken &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[30e]"></a>lv_color_fill</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_color.o(i.lv_color_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_color_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
</UL>

<P><STRONG><a name="[35a]"></a>lv_color_lighten</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_color.o(i.lv_color_lighten))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_color_lighten &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[298]"></a>lv_cont_create</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, lv_cont.o(i.lv_cont_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = lv_cont_create &rArr; lv_obj_del &rArr; obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[39b]"></a>lv_cont_get_fit_left</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_cont.o(i.lv_cont_get_fit_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_cont_get_fit_left &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[39c]"></a>lv_cont_get_fit_right</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_cont.o(i.lv_cont_get_fit_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_cont_get_fit_right &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[39d]"></a>lv_cont_get_fit_top</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_cont.o(i.lv_cont_get_fit_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_cont_get_fit_top &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[39e]"></a>lv_cont_get_layout</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_cont.o(i.lv_cont_get_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_cont_get_layout &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
</UL>

<P><STRONG><a name="[2ac]"></a>lv_cont_set_fit4</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, lv_cont.o(i.lv_cont_set_fit4))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = lv_cont_set_fit4 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit2
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[292]"></a>lv_cont_set_layout</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lv_cont.o(i.lv_cont_set_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_cont_set_layout &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[1ea]"></a>lv_debug_check_null</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_debug.o(i.lv_debug_check_null))
<BR><BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_throw
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_dir
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_click
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_focused
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_remove_style
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_trans_style
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_hidden
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_throw
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_parent
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_dir
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_adv_hittest
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_pad
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_realign
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_fit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_back
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_auto_realign
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_protect
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_mid
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send_func
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_register
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_focused_btn
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_map_array
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_focused_btn
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_ctrl
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_align
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_active_btn
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_style
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_toggle
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_state
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_checkable
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_get_checkable
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_type
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_type
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_style
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_align
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_layout
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_top
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_right
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_left
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_auto_size
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_style
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_anim_time
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_align
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_sel_start
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_sel_end
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_recolor
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_long_mode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_value
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_style
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scroll_propagation
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_fit
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_style
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_btnmatrix
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_anim_time
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_active_btn
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab_act
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_anim_time
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_style
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_on
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_off
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_get_style
</UL>

<P><STRONG><a name="[1eb]"></a>lv_debug_log_error</STRONG> (Thumb, 124 bytes, Stack size 280 bytes, lv_debug.o(i.lv_debug_log_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_throw
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_dir
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_click
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_focused
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_remove_style
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_trans_style
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_hidden
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_throw
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_parent
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_dir
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_adv_hittest
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_pad
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_realign
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_fit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_back
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_auto_realign
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_protect
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_mid
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send_func
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_register
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_focused_btn
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_map_array
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_focused_btn
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_ctrl
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_align
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_active_btn
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_style
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_toggle
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_state
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_checkable
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_get_checkable
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_type
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_type
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_style
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_align
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_layout
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_top
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_right
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_left
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_auto_size
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_style
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_anim_time
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_align
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_sel_start
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_sel_end
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_recolor
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_long_mode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_value
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_style
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scroll_propagation
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_fit
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_style
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_btnmatrix
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_anim_time
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_active_btn
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab_act
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_anim_time
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_style
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_on
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_off
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_get_style
</UL>

<P><STRONG><a name="[3b3]"></a>lv_disp_buf_init</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lv_hal_disp.o(i.lv_disp_buf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_disp_buf_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[3b4]"></a>lv_disp_drv_init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_hal_disp.o(i.lv_disp_drv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_disp_drv_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[3b5]"></a>lv_disp_drv_register</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, lv_hal_disp.o(i.lv_disp_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = lv_disp_drv_register &rArr; lv_obj_create &rArr; lv_group_add_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_is_true_double_buf
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_reset_style_list
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_ready
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[2ba]"></a>lv_disp_flush_ready</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_flush_ready))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_flush
</UL>

<P><STRONG><a name="[1c0]"></a>lv_disp_get_buf</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_buf))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_vdb_flush
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
</UL>

<P><STRONG><a name="[1a3]"></a>lv_disp_get_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_default))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_prev
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[1a0]"></a>lv_disp_get_dpi</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_dpi))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spinbox_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roller_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgbox_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[1a4]"></a>lv_disp_get_hor_res</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_hor_res))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[341]"></a>lv_disp_get_inv_buf_size</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_inv_buf_size))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
</UL>

<P><STRONG><a name="[34e]"></a>lv_disp_get_layer_sys</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_layer_sys))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = lv_disp_get_layer_sys &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[350]"></a>lv_disp_get_layer_top</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_layer_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = lv_disp_get_layer_top &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[3b8]"></a>lv_disp_get_next</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_next))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_mod
</UL>

<P><STRONG><a name="[351]"></a>lv_disp_get_scr_act</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_scr_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = lv_disp_get_scr_act &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
</UL>

<P><STRONG><a name="[3b9]"></a>lv_disp_get_scr_prev</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_scr_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = lv_disp_get_scr_prev &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[265]"></a>lv_disp_get_size_category</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, lv_hal_disp.o(i.lv_disp_get_size_category))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_disp_get_size_category
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[1f7]"></a>lv_disp_get_ver_res</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_ver_res))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
</UL>

<P><STRONG><a name="[3ba]"></a>lv_disp_is_double_buf</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_is_double_buf))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_is_true_double_buf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_vdb_flush
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[1cc]"></a>lv_disp_is_true_double_buf</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, lv_hal_disp.o(i.lv_disp_is_true_double_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_disp_is_true_double_buf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_is_double_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[2da]"></a>lv_draw_img</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_draw_img.o(i.lv_draw_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904<LI>Call Chain = lv_draw_img &rArr; lv_img_draw_core &rArr; show_error &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[2dc]"></a>lv_draw_img_dsc_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lv_draw_img.o(i.lv_draw_img_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_img_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[2df]"></a>lv_draw_label</STRONG> (Thumb, 1308 bytes, Stack size 256 bytes, lv_draw_label.o(i.lv_draw_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 1656<LI>Call Chain = lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_width
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_char_to_num
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_value_str
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[2dd]"></a>lv_draw_label_dsc_init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_draw_label.o(i.lv_draw_label_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_label_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_value_str
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[3c0]"></a>lv_draw_line</STRONG> (Thumb, 402 bytes, Stack size 136 bytes, lv_draw_line.o(i.lv_draw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400<LI>Call Chain = lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[3bd]"></a>lv_draw_line_dsc_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_draw_line.o(i.lv_draw_line_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_line_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[2c0]"></a>lv_draw_mask_add</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_draw_mask.o(i.lv_draw_mask_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = lv_draw_mask_add &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[2c3]"></a>lv_draw_mask_apply</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lv_draw_mask.o(i.lv_draw_mask_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[2be]"></a>lv_draw_mask_get_cnt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_draw_mask.o(i.lv_draw_mask_get_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[2d5]"></a>lv_draw_mask_line_points_init</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, lv_draw_mask.o(i.lv_draw_mask_line_points_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_draw_mask_line_points_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
</UL>

<P><STRONG><a name="[2bf]"></a>lv_draw_mask_radius_init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_draw_mask.o(i.lv_draw_mask_radius_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_mask_radius_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3e8]"></a>lv_draw_mask_remove_custom</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_draw_mask.o(i.lv_draw_mask_remove_custom))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_mask_remove_custom
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[2c5]"></a>lv_draw_mask_remove_id</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_draw_mask.o(i.lv_draw_mask_remove_id))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[2cf]"></a>lv_draw_rect</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_draw_rect.o(i.lv_draw_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264<LI>Call Chain = lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_value_str
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_outline
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_design
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_draw_knob
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_design
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[2cd]"></a>lv_draw_rect_dsc_init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lv_draw_rect.o(i.lv_draw_rect_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_rect_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_design
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_draw_knob
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_design
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[412]"></a>lv_event_get_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_event_get_data))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_btnm_event_cb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_def_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[2aa]"></a>lv_event_send</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_obj.o(i.lv_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = lv_event_send &rArr; lv_event_send_func &rArr;  lv_event_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send_func
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_finish_drag
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send_func
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_signal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_btnm_event_cb
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_def_event_cb
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[3c7]"></a>lv_event_send_func</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, lv_obj.o(i.lv_event_send_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 872 + In Cycle
<LI>Call Chain = lv_event_send_func &rArr;  lv_event_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>

<P><STRONG><a name="[1]"></a>lv_font_get_bitmap_fmt_txt</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, lv_font_fmt_txt.o(i.lv_font_get_bitmap_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_font_get_bitmap_fmt_txt &rArr; decompress &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_get_size
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_font_montserrat_14.o(.data)
</UL>
<P><STRONG><a name="[3c2]"></a>lv_font_get_glyph_bitmap</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_font.o(i.lv_font_get_glyph_bitmap))
<BR><BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
</UL>

<P><STRONG><a name="[3c1]"></a>lv_font_get_glyph_dsc</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lv_font.o(i.lv_font_get_glyph_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_font_get_glyph_dsc
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
</UL>

<P><STRONG><a name="[0]"></a>lv_font_get_glyph_dsc_fmt_txt</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lv_font_fmt_txt.o(i.lv_font_get_glyph_dsc_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_font_get_glyph_dsc_fmt_txt &rArr; get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_kern_value
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_font_montserrat_14.o(.data)
</UL>
<P><STRONG><a name="[23b]"></a>lv_font_get_glyph_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_font.o(i.lv_font_get_glyph_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_width
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_next_word
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
</UL>

<P><STRONG><a name="[3c9]"></a>lv_fs_close</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_fs.o(i.lv_fs_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_fs_close &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
</UL>

<P><STRONG><a name="[3ca]"></a>lv_fs_drv_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_fs.o(i.lv_fs_drv_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_fs_init
</UL>

<P><STRONG><a name="[3cb]"></a>lv_fs_drv_register</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_fs.o(i.lv_fs_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_fs_drv_register &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_fs_init
</UL>

<P><STRONG><a name="[3cc]"></a>lv_fs_get_drv</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lv_fs.o(i.lv_fs_get_drv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_fs_get_drv
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
</UL>

<P><STRONG><a name="[3cd]"></a>lv_fs_get_ext</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_fs.o(i.lv_fs_get_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_fs_get_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[3ce]"></a>lv_fs_open</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, lv_fs.o(i.lv_fs_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = lv_fs_open &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_drv
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_real_path
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[3d8]"></a>lv_fs_read</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lv_fs.o(i.lv_fs_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_fs_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
</UL>

<P><STRONG><a name="[3da]"></a>lv_fs_seek</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_fs.o(i.lv_fs_seek))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_fs_seek
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
</UL>

<P><STRONG><a name="[30f]"></a>lv_gpu_stm32_dma2d_blend</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, lv_gpu_stm32_dma2d.o(i.lv_gpu_stm32_dma2d_blend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_gpu_stm32_dma2d_blend &rArr; dma2d_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_cache
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma2d_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
</UL>

<P><STRONG><a name="[1cf]"></a>lv_gpu_stm32_dma2d_copy</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lv_gpu_stm32_dma2d.o(i.lv_gpu_stm32_dma2d_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_gpu_stm32_dma2d_copy &rArr; dma2d_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_cache
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma2d_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
</UL>

<P><STRONG><a name="[30d]"></a>lv_gpu_stm32_dma2d_fill</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, lv_gpu_stm32_dma2d.o(i.lv_gpu_stm32_dma2d_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_gpu_stm32_dma2d_fill &rArr; dma2d_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_cache
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma2d_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
</UL>

<P><STRONG><a name="[3f3]"></a>lv_gpu_stm32_dma2d_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_gpu_stm32_dma2d.o(i.lv_gpu_stm32_dma2d_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_gpu_stm32_dma2d_init
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[3d0]"></a>lv_group_add_obj</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, lv_group.o(i.lv_group_add_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = lv_group_add_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_focused
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_refocus
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
</UL>

<P><STRONG><a name="[34b]"></a>lv_group_focus_next</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_group.o(i.lv_group_focus_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = lv_group_focus_next &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_refocus
</UL>

<P><STRONG><a name="[33a]"></a>lv_group_focus_obj</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, lv_group.o(i.lv_group_focus_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000<LI>Call Chain = lv_group_focus_obj &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_to_foreground
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
</UL>

<P><STRONG><a name="[34a]"></a>lv_group_focus_prev</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_group.o(i.lv_group_focus_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_refocus
</UL>

<P><STRONG><a name="[347]"></a>lv_group_get_editing</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_group.o(i.lv_group_get_editing))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[345]"></a>lv_group_get_focused</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_group.o(i.lv_group_get_focused))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_focused
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
</UL>

<P><STRONG><a name="[3d3]"></a>lv_group_remove_obj</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lv_group.o(i.lv_group_remove_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = lv_group_remove_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_refocus
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[346]"></a>lv_group_send_data</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lv_group.o(i.lv_group_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = lv_group_send_data &rArr; lv_event_send &rArr; lv_event_send_func &rArr;  lv_event_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
</UL>

<P><STRONG><a name="[349]"></a>lv_group_set_editing</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_group.o(i.lv_group_set_editing))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_group_set_editing &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
</UL>

<P><STRONG><a name="[1dc]"></a>lv_img_buf_get_px_alpha</STRONG> (Thumb, 186 bytes, Stack size 36 bytes, lv_img_buf.o(i.lv_img_buf_get_px_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_img_buf_get_px_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
</UL>

<P><STRONG><a name="[1db]"></a>lv_img_buf_get_px_color</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, lv_img_buf.o(i.lv_img_buf_get_px_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_img_buf_get_px_color &rArr; _lv_memcpy_small
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
</UL>

<P><STRONG><a name="[3d5]"></a>lv_img_cache_invalidate_src</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_img_cache.o(i.lv_img_cache_invalidate_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_img_cache_invalidate_src &rArr; lv_img_decoder_close &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
</UL>

<P><STRONG><a name="[3d6]"></a>lv_img_cache_set_size</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lv_img_cache.o(i.lv_img_cache_set_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = lv_img_cache_set_size &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_invalidate_src
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[3d4]"></a>lv_img_cf_get_px_size</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_img_cf_get_px_size))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
</UL>

<P><STRONG><a name="[1e2]"></a>lv_img_cf_has_alpha</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_img_cf_has_alpha))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
</UL>

<P><STRONG><a name="[1e1]"></a>lv_img_cf_is_chroma_keyed</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_img_cf_is_chroma_keyed))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
</UL>

<P><STRONG><a name="[15b]"></a>lv_img_create</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, lv_img.o(i.lv_img_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240<LI>Call Chain = lv_img_create &rArr; lv_img_set_src &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_adv_hittest
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[7e]"></a>lv_img_decoder_built_in_close</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_img_decoder_built_in_close &rArr; lv_fs_close &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(i._lv_img_decoder_init)
</UL>
<P><STRONG><a name="[7b]"></a>lv_img_decoder_built_in_info</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_img_decoder_built_in_info &rArr; lv_fs_open &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(i._lv_img_decoder_init)
</UL>
<P><STRONG><a name="[7c]"></a>lv_img_decoder_built_in_open</STRONG> (Thumb, 680 bytes, Stack size 48 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = lv_img_decoder_built_in_open &rArr; lv_fs_open &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(i._lv_img_decoder_init)
</UL>
<P><STRONG><a name="[7d]"></a>lv_img_decoder_built_in_read_line</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = lv_img_decoder_built_in_read_line &rArr; lv_img_decoder_built_in_line_alpha &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(i._lv_img_decoder_init)
</UL>
<P><STRONG><a name="[1e6]"></a>lv_img_decoder_close</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_img_decoder.o(i.lv_img_decoder_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_img_decoder_close &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_invalidate_src
</UL>

<P><STRONG><a name="[1e9]"></a>lv_img_decoder_create</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_img_decoder.o(i.lv_img_decoder_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_img_decoder_create &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
</UL>

<P><STRONG><a name="[2db]"></a>lv_img_decoder_get_info</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_img_decoder.o(i.lv_img_decoder_get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_img_decoder_get_info
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
</UL>

<P><STRONG><a name="[1e7]"></a>lv_img_decoder_open</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, lv_img_decoder.o(i.lv_img_decoder_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = lv_img_decoder_open &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
</UL>

<P><STRONG><a name="[3e9]"></a>lv_img_decoder_read_line</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, lv_img_decoder.o(i.lv_img_decoder_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_img_decoder_read_line
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
</UL>

<P><STRONG><a name="[3ea]"></a>lv_img_get_auto_size</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_img.o(i.lv_img_get_auto_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_img_get_auto_size &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
</UL>

<P><STRONG><a name="[15c]"></a>lv_img_set_src</STRONG> (Thumb, 480 bytes, Stack size 56 bytes, lv_img.o(i.lv_img_set_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = lv_img_set_src &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_pad
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_auto_size
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[1e4]"></a>lv_img_src_get_type</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_img_src_get_type))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
</UL>

<P><STRONG><a name="[3ed]"></a>lv_indev_drv_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_hal_indev.o(i.lv_indev_drv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_indev_drv_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_indev_init
</UL>

<P><STRONG><a name="[3ee]"></a>lv_indev_drv_register</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lv_hal_indev.o(i.lv_indev_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = lv_indev_drv_register &rArr; lv_task_create &rArr; lv_task_create_basic &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_indev_init
</UL>

<P><STRONG><a name="[3ef]"></a>lv_indev_finish_drag</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lv_indev.o(i.lv_indev_finish_drag))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = lv_indev_finish_drag &rArr; lv_event_send &rArr; lv_event_send_func &rArr;  lv_event_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dragged_obj
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
</UL>

<P><STRONG><a name="[390]"></a>lv_indev_get_act</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_act))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send_func
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[395]"></a>lv_indev_get_next</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_hal_indev.o(i.lv_indev_get_next))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
</UL>

<P><STRONG><a name="[4b1]"></a>lv_indev_get_obj_act</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_obj_act))
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[392]"></a>lv_indev_get_point</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_point))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
</UL>

<P><STRONG><a name="[391]"></a>lv_indev_get_type</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_type))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[4f1]"></a>lv_indev_get_vect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_vect))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
</UL>

<P><STRONG><a name="[380]"></a>lv_indev_is_dragging</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_is_dragging))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
</UL>

<P><STRONG><a name="[1ed]"></a>lv_indev_reset</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lv_indev.o(i.lv_indev_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_indev_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_init
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[393]"></a>lv_indev_reset_long_press</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_indev.o(i.lv_indev_reset_long_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_indev_reset_long_press
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
</UL>

<P><STRONG><a name="[34f]"></a>lv_indev_search_obj</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lv_indev.o(i.lv_indev_search_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + In Cycle
<LI>Call Chain = lv_indev_search_obj &rArr;  lv_indev_search_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hittest
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_click
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[173]"></a>lv_init</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lv_obj.o(i.lv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = lv_init &rArr; lv_theme_material_init &rArr; lv_obj_report_style_mod &rArr; report_style_mod_core &rArr;  report_style_mod_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_group_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_set_act
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_task_core_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_init
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_fs_init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvgl_Task
</UL>

<P><STRONG><a name="[15e]"></a>lv_label_create</STRONG> (Thumb, 466 bytes, Stack size 32 bytes, lv_label.o(i.lv_label_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_get_size
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_align
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_align
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_recolor
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_long_mode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[3fc]"></a>lv_label_get_align</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_get_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_label_get_align &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[404]"></a>lv_label_get_letter_on</STRONG> (Thumb, 584 bytes, Stack size 72 bytes, lv_label.o(i.lv_label_get_letter_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_label_get_letter_on &rArr; get_txt_coords &rArr; lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_width
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_align
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_txt_coords
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[3f8]"></a>lv_label_get_long_mode</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_get_long_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_label_get_long_mode &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>

<P><STRONG><a name="[3fa]"></a>lv_label_get_recolor</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_get_recolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_label_get_recolor &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>

<P><STRONG><a name="[40d]"></a>lv_label_get_style</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_label.o(i.lv_label_get_style))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
</UL>

<P><STRONG><a name="[3fe]"></a>lv_label_get_text</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_get_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_label_get_text &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[402]"></a>lv_label_get_text_sel_end</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_get_text_sel_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_label_get_text_sel_end &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[401]"></a>lv_label_get_text_sel_start</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_get_text_sel_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_label_get_text_sel_start &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[408]"></a>lv_label_refr_text</STRONG> (Thumb, 1114 bytes, Stack size 144 bytes, lv_label.o(i.lv_label_refr_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312<LI>Call Chain = lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_speed_to_time
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_txt_coords
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
</UL>

<P><STRONG><a name="[3fd]"></a>lv_label_set_align</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_set_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_label_set_align &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
</UL>

<P><STRONG><a name="[3f9]"></a>lv_label_set_long_mode</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lv_label.o(i.lv_label_set_long_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336<LI>Call Chain = lv_label_set_long_mode &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
</UL>

<P><STRONG><a name="[3fb]"></a>lv_label_set_recolor</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_set_recolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = lv_label_set_recolor &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>

<P><STRONG><a name="[15f]"></a>lv_label_set_text</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, lv_label.o(i.lv_label_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[3ff]"></a>lv_label_set_text_static</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lv_label.o(i.lv_label_set_text_static))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336<LI>Call Chain = lv_label_set_text_static &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>

<P><STRONG><a name="[1fe]"></a>lv_mem_alloc</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lv_mem.o(i.lv_mem_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ent_trunc
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ent_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_copy
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_remove_style
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_trans_style
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_prev
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
</UL>

<P><STRONG><a name="[410]"></a>lv_mem_defrag</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lv_mem.o(i.lv_mem_defrag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ent_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>

<P><STRONG><a name="[1d4]"></a>lv_mem_free</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lv_mem.o(i.lv_mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_defrag
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ent_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_free_all
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_font_clean_up_fmt_txt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_reset
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_remove_style
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_del
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[205]"></a>lv_mem_realloc</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lv_mem.o(i.lv_mem_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = lv_mem_realloc &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_get_size
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ent_trunc
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_resize
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
</UL>

<P><STRONG><a name="[295]"></a>lv_msgbox_add_btns</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, lv_msgbox.o(i.lv_msgbox_add_btns))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = lv_msgbox_add_btns &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_focused
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_focused_btn
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[294]"></a>lv_msgbox_create</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, lv_msgbox.o(i.lv_msgbox_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408<LI>Call Chain = lv_msgbox_create &rArr; lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_align
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[413]"></a>lv_msgbox_get_active_btn</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lv_msgbox.o(i.lv_msgbox_get_active_btn))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = lv_msgbox_get_active_btn &rArr; lv_btnmatrix_get_focused_btn &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_focused_btn
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_active_btn
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_default_event_cb
</UL>

<P><STRONG><a name="[415]"></a>lv_msgbox_get_anim_time</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_msgbox.o(i.lv_msgbox_get_anim_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_msgbox_get_anim_time &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
</UL>

<P><STRONG><a name="[296]"></a>lv_msgbox_get_btnmatrix</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_msgbox.o(i.lv_msgbox_get_btnmatrix))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_msgbox_get_btnmatrix &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[414]"></a>lv_msgbox_start_auto_close</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, lv_msgbox.o(i.lv_msgbox_start_auto_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = lv_msgbox_start_auto_close &rArr; lv_cont_set_fit4 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_anim_time
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_default_event_cb
</UL>

<P><STRONG><a name="[397]"></a>lv_obj_add_protect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_add_protect))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_add_protect &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[37f]"></a>lv_obj_add_state</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_add_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = lv_obj_add_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_toggle
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_state
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_on
</UL>

<P><STRONG><a name="[299]"></a>lv_obj_add_style</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_add_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = lv_obj_add_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[15d]"></a>lv_obj_align</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, lv_obj.o(i.lv_obj_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = lv_obj_align &rArr; obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_core
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_realign
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_align
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[418]"></a>lv_obj_align_mid</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, lv_obj.o(i.lv_obj_align_mid))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_realign
</UL>

<P><STRONG><a name="[36a]"></a>lv_obj_allocate_ext_attr</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_allocate_ext_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_allocate_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[41a]"></a>lv_obj_area_is_visible</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, lv_obj.o(i.lv_obj_area_is_visible))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_prev
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>

<P><STRONG><a name="[27b]"></a>lv_obj_clean_style_list</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_clean_style_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = lv_obj_clean_style_list &rArr; trans_del &rArr; lv_style_remove_prop &rArr; style_resize &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_reset
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_reset_style_list
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_styles
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
</UL>

<P><STRONG><a name="[3a1]"></a>lv_obj_clear_protect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_clear_protect))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_clear_protect &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
</UL>

<P><STRONG><a name="[37e]"></a>lv_obj_clear_state</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_clear_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_focus_parent
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_toggle
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_state
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_off
</UL>

<P><STRONG><a name="[156]"></a>lv_obj_create</STRONG> (Thumb, 960 bytes, Stack size 40 bytes, lv_obj.o(i.lv_obj_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096<LI>Call Chain = lv_obj_create &rArr; lv_group_add_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[370]"></a>lv_obj_del</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = lv_obj_del &rArr; obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_anim_ready_cb
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_close_ready_cb
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[93]"></a>lv_obj_del_anim_ready_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_del_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = lv_obj_del_anim_ready_cb &rArr; lv_obj_del &rArr; obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_box.o(i.lv_demo_printer_anim_out_all)
</UL>
<P><STRONG><a name="[3b0]"></a>lv_obj_get_auto_realign</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_auto_realign))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_auto_realign &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
</UL>

<P><STRONG><a name="[2ca]"></a>lv_obj_get_base_dir</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_base_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_base_dir &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_design
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[332]"></a>lv_obj_get_child</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_child))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_child &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_mod_core
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_style_cache
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_generic_event_cb
</UL>

<P><STRONG><a name="[331]"></a>lv_obj_get_child_back</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_child_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_child_back &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_out_all
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_generic_event_cb
</UL>

<P><STRONG><a name="[3f1]"></a>lv_obj_get_click</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_click))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_click &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
</UL>

<P><STRONG><a name="[31c]"></a>lv_obj_get_coords</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_coords))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_coords &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_txt_coords
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_on_edge
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
</UL>

<P><STRONG><a name="[369]"></a>lv_obj_get_design_cb</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_design_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_design_cb &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[41c]"></a>lv_obj_get_disp</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_get_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[33e]"></a>lv_obj_get_drag</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_drag))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_drag &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
</UL>

<P><STRONG><a name="[33f]"></a>lv_obj_get_drag_dir</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_drag_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_drag_dir &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
</UL>

<P><STRONG><a name="[324]"></a>lv_obj_get_drag_parent</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_drag_parent))
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dragged_obj
</UL>

<P><STRONG><a name="[344]"></a>lv_obj_get_drag_throw</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_drag_throw))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_drag_throw &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
</UL>

<P><STRONG><a name="[37a]"></a>lv_obj_get_draw_rect_ext_pad_size</STRONG> (Thumb, 484 bytes, Stack size 64 bytes, lv_obj.o(i.lv_obj_get_draw_rect_ext_pad_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = lv_obj_get_draw_rect_ext_pad_size &rArr; lv_obj_get_style_value_align &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_align
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_str
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_opa
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_ofs_y
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_ofs_x
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_letter_space
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_font
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_align
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
</UL>

<P><STRONG><a name="[246]"></a>lv_obj_get_ext_attr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_ext_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_focused_btn
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_map_array
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_focused_btn
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_ctrl
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_align
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_active_btn
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_style
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_checkable
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_get_checkable
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_type
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_type
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_signal
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_style
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim_ready
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_signal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_align
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_layout
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_top
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_right
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_left
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_auto_size
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_style
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_anim_time
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_align
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_recolor
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_long_mode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_offset_y
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_offset_x
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_style
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_design
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_start_edge_flash
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scroll_propagation
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_fit
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_style
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_design
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_edge_flash_area
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edge_flash_anim_end
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edge_flash_anim
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_btnmatrix
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_anim_time
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_active_btn
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab_act
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_anim_time
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_indic_size
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_align
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_style
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_get_style
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[337]"></a>lv_obj_get_focused_obj</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_focused_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = lv_obj_get_focused_obj &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_focus_parent
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
</UL>

<P><STRONG><a name="[34d]"></a>lv_obj_get_gesture_parent</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_gesture_parent))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
</UL>

<P><STRONG><a name="[339]"></a>lv_obj_get_group</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_group))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_group &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[2cb]"></a>lv_obj_get_height</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_height &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_fit
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_signal
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_design
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_edge_flash_area
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_generic_event_cb
</UL>

<P><STRONG><a name="[436]"></a>lv_obj_get_height_fit</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_get_height_fit))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = lv_obj_get_height_fit &rArr; lv_obj_get_height &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_grid
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
</UL>

<P><STRONG><a name="[244]"></a>lv_obj_get_height_grid</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_get_height_grid))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = lv_obj_get_height_grid &rArr; lv_obj_get_style_pad_inner &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_fit
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
</UL>

<P><STRONG><a name="[314]"></a>lv_obj_get_hidden</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_hidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_hidden &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
</UL>

<P><STRONG><a name="[20c]"></a>lv_obj_get_parent</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_focused_obj
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dragged_obj
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_to_foreground
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_hidden
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_mid
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_core
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_btnm_event_cb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_def_event_cb
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
</UL>

<P><STRONG><a name="[41b]"></a>lv_obj_get_screen</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[368]"></a>lv_obj_get_signal_cb</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_signal_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_signal_cb &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[20a]"></a>lv_obj_get_state</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_get_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = lv_obj_get_state &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_signal_send
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_toggle
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_signal
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_signal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[208]"></a>lv_obj_get_style_list</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_obj_get_style_list &rArr; lv_signal_send
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_signal_send
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_opa
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_ptr
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_int
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_color
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_disable_style_caching
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_mod_core
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_style_cache
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_signal
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_style
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_style
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_style
</UL>

<P><STRONG><a name="[2ab]"></a>lv_obj_get_width</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_get_width &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_signal
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_design
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_fit
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrl_width
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_edge_flash_area
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_align
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[2a0]"></a>lv_obj_get_width_fit</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_get_width_fit))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = lv_obj_get_width_fit &rArr; lv_obj_get_width &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_grid
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[243]"></a>lv_obj_get_width_grid</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_get_width_grid))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = lv_obj_get_width_grid &rArr; lv_obj_get_style_pad_inner &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
</UL>

<P><STRONG><a name="[340]"></a>lv_obj_get_x</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_obj_get_x &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_hor
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
</UL>

<P><STRONG><a name="[334]"></a>lv_obj_get_y</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_obj_get_y &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_ver
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_out_all
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_generic_event_cb
</UL>

<P><STRONG><a name="[379]"></a>lv_obj_handle_get_type_signal</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_handle_get_type_signal))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_signal
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_signal
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_signal
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_signal
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
</UL>

<P><STRONG><a name="[3f0]"></a>lv_obj_hittest</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_hittest))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_obj_hittest &rArr; lv_obj_is_point_on_coords &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_point_on_coords
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
</UL>

<P><STRONG><a name="[3e7]"></a>lv_obj_init_draw_img_dsc</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_init_draw_img_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = lv_obj_init_draw_img_dsc &rArr; _lv_obj_get_style_color &rArr; lv_obj_get_state &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_image_recolor_opa
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_image_blend_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[387]"></a>lv_obj_init_draw_label_dsc</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_init_draw_label_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = lv_obj_init_draw_label_dsc &rArr; lv_obj_get_style_text_line_space &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_decor
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_blend_mode
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[467]"></a>lv_obj_init_draw_line_dsc</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_init_draw_line_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = lv_obj_init_draw_line_dsc &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_line_blend_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[2ce]"></a>lv_obj_init_draw_rect_dsc</STRONG> (Thumb, 772 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_init_draw_rect_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_value_align &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_str
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_opa
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_ofs_y
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_ofs_x
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_letter_space
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_font
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_blend_mode
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_align
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_blend_mode
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pattern_recolor
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pattern_image
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pattern_blend_mode
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_blend_mode
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_side
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_blend_mode
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_blend_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_design
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_draw_knob
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_design
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[315]"></a>lv_obj_invalidate</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_hidden
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_focused_btn
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_type
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim_ready
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_align
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_offset_y
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_offset_x
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
</UL>

<P><STRONG><a name="[2e4]"></a>lv_obj_invalidate_area</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_invalidate_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edge_flash_anim_end
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edge_flash_anim
</UL>

<P><STRONG><a name="[3d1]"></a>lv_obj_is_focused</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_is_focused))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_is_focused &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_focus_parent
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
</UL>

<P><STRONG><a name="[3ec]"></a>lv_obj_is_point_on_coords</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_is_point_on_coords))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lv_obj_is_point_on_coords &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hittest
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
</UL>

<P><STRONG><a name="[338]"></a>lv_obj_is_protected</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_is_protected))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_is_protected &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[352]"></a>lv_obj_move_foreground</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_move_foreground))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_chg_list
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_to_foreground
</UL>

<P><STRONG><a name="[3b1]"></a>lv_obj_realign</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_realign))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_mid
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
</UL>

<P><STRONG><a name="[3eb]"></a>lv_obj_refresh_ext_draw_pad</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_refresh_ext_draw_pad))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_refresh_ext_draw_pad &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_signal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
</UL>

<P><STRONG><a name="[218]"></a>lv_obj_refresh_style</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_refresh_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000<LI>Call Chain = lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_style_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_opa
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_reset_style_list
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_ptr
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_int
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_color
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_mod_core
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[469]"></a>lv_obj_report_style_mod</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lv_obj.o(i.lv_obj_report_style_mod))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = lv_obj_report_style_mod &rArr; report_style_mod_core &rArr;  report_style_mod_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_mod_core
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[3b6]"></a>lv_obj_reset_style_list</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_reset_style_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = lv_obj_reset_style_list &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[3d7]"></a>lv_obj_set_adv_hittest</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_adv_hittest))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_set_adv_hittest &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
</UL>

<P><STRONG><a name="[158]"></a>lv_obj_set_click</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_click))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_set_click &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[36e]"></a>lv_obj_set_design_cb</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_design_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_set_design_cb &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[46b]"></a>lv_obj_set_drag</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_drag))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_obj_set_drag &rArr; lv_obj_set_click &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_dir
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
</UL>

<P><STRONG><a name="[46c]"></a>lv_obj_set_drag_dir</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_drag_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = lv_obj_set_drag_dir &rArr; lv_obj_set_drag &rArr; lv_obj_set_click &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scroll_propagation
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
</UL>

<P><STRONG><a name="[29a]"></a>lv_obj_set_drag_parent</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_drag_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_set_drag_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[46d]"></a>lv_obj_set_drag_throw</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_drag_throw))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_set_drag_throw &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
</UL>

<P><STRONG><a name="[160]"></a>lv_obj_set_event_cb</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_set_event_cb &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[46e]"></a>lv_obj_set_ext_click_area</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, lv_obj.o(i.lv_obj_set_ext_click_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_obj_set_ext_click_area &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
</UL>

<P><STRONG><a name="[46f]"></a>lv_obj_set_focus_parent</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_focus_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = lv_obj_set_focus_parent &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_focused_obj
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_focused
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
</UL>

<P><STRONG><a name="[a6]"></a>lv_obj_set_height</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_indic_size
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_msgbox.o(i.lv_msgbox_start_auto_close)
</UL>
<P><STRONG><a name="[470]"></a>lv_obj_set_hidden</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_hidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_obj_set_hidden &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_indic_size
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
</UL>

<P><STRONG><a name="[471]"></a>lv_obj_set_parent</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, lv_obj.o(i.lv_obj_set_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = lv_obj_set_parent &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_chg_list
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[1f0]"></a>lv_obj_set_pos</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, lv_obj.o(i.lv_obj_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_position
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_core
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
</UL>

<P><STRONG><a name="[36d]"></a>lv_obj_set_signal_cb</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_signal_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_obj_set_signal_cb &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[157]"></a>lv_obj_set_size</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, lv_obj.o(i.lv_obj_set_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_realign
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_signal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[398]"></a>lv_obj_set_state</STRONG> (Thumb, 506 bytes, Stack size 432 bytes, lv_obj.o(i.lv_obj_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 1440<LI>Call Chain = lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_trans_style
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_create
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot_compare
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_style_cache
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_focus_parent
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_signal
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[a7]"></a>lv_obj_set_width</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = lv_obj_set_width &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width_margin
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_indic_size
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_msgbox.o(i.lv_msgbox_start_auto_close)
</UL>
<P><STRONG><a name="[2a3]"></a>lv_obj_set_width_margin</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_width_margin))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = lv_obj_set_width_margin &rArr; lv_obj_set_width &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_right
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_left
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[a2]"></a>lv_obj_set_x</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = lv_obj_set_x &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_core
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lv_tabview.o(i.lv_tabview_set_tab_act)
<LI> lv_label.o(i.lv_label_set_long_mode)
<LI> lv_page.o(i.lv_page_scroll_hor)
</UL>
<P><STRONG><a name="[88]"></a>lv_obj_set_y</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_set_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_mid_core
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_align_core
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
</UL>
<BR>[Address Reference Count : 6]<UL><LI> lv_tabview.o(i.lv_tabview_set_tab_act)
<LI> lv_box.o(i.icon_generic_event_cb)
<LI> lv_label.o(i.lv_label_set_long_mode)
<LI> lv_page.o(i.lv_page_scroll_ver)
<LI> lv_box.o(i.lv_demo_printer_anim_in)
<LI> lv_box.o(i.lv_demo_printer_anim_out_all)
</UL>
<P><STRONG><a name="[476]"></a>lv_page_create</STRONG> (Thumb, 416 bytes, Stack size 32 bytes, lv_page.o(i.lv_page_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504<LI>Call Chain = lv_page_create &rArr; lv_obj_set_focus_parent &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_focus_parent
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_throw
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
</UL>

<P><STRONG><a name="[47b]"></a>lv_page_get_anim_time</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_page.o(i.lv_page_get_anim_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_page_get_anim_time &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_start_edge_flash
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_ver
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_hor
</UL>

<P><STRONG><a name="[291]"></a>lv_page_get_scrollable</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_page.o(i.lv_page_get_scrollable))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_page_get_scrollable &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_ver
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_hor
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_on_edge
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrl_width
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[47e]"></a>lv_page_get_width_fit</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lv_page.o(i.lv_page_get_width_fit))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = lv_page_get_width_fit &rArr; lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_grid
</UL>

<P><STRONG><a name="[293]"></a>lv_page_get_width_grid</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_page.o(i.lv_page_get_width_grid))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = lv_page_get_width_grid &rArr; lv_page_get_width_fit &rArr; lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_fit
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[47f]"></a>lv_page_on_edge</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, lv_page.o(i.lv_page_on_edge))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_page_on_edge &rArr; lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
</UL>

<P><STRONG><a name="[480]"></a>lv_page_scroll_hor</STRONG> (Thumb, 68 bytes, Stack size 88 bytes, lv_page.o(i.lv_page_scroll_hor))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = lv_page_scroll_hor &rArr; lv_obj_get_x &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_anim_time
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[481]"></a>lv_page_scroll_ver</STRONG> (Thumb, 68 bytes, Stack size 88 bytes, lv_page.o(i.lv_page_scroll_ver))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = lv_page_scroll_ver &rArr; lv_obj_get_y &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_anim_time
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[485]"></a>lv_page_set_scroll_propagation</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_page.o(i.lv_page_set_scroll_propagation))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = lv_page_set_scroll_propagation &rArr; lv_obj_set_drag_dir &rArr; lv_obj_set_drag &rArr; lv_obj_set_click &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_dir
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
</UL>

<P><STRONG><a name="[477]"></a>lv_page_set_scrollbar_mode</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lv_page.o(i.lv_page_set_scrollbar_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = lv_page_set_scrollbar_mode &rArr; scrlbar_refresh &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
</UL>

<P><STRONG><a name="[487]"></a>lv_page_start_edge_flash</STRONG> (Thumb, 152 bytes, Stack size 88 bytes, lv_page.o(i.lv_page_start_edge_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = lv_page_start_edge_flash &rArr; lv_page_get_anim_time &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_anim_time
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
</UL>

<P><STRONG><a name="[175]"></a>lv_port_disp_init</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, lv_port_disp.o(i.lv_port_disp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = lv_port_disp_init &rArr; lv_disp_drv_register &rArr; lv_obj_create &rArr; lv_group_add_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_RegisterCallback
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_init
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_init
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_buf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvgl_Task
</UL>

<P><STRONG><a name="[174]"></a>lv_port_fs_init</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, lv_port_fs_template.o(i.lv_port_fs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = lv_port_fs_init &rArr; lv_fs_drv_register &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_register
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvgl_Task
</UL>

<P><STRONG><a name="[176]"></a>lv_port_indev_init</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, lv_port_indev.o(i.lv_port_indev_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_port_indev_init &rArr; lv_indev_drv_register &rArr; lv_task_create &rArr; lv_task_create_basic &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvgl_Task
</UL>

<P><STRONG><a name="[33b]"></a>lv_signal_send</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_obj.o(i.lv_signal_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_signal_send
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[2a1]"></a>lv_slider_create</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, lv_slider.o(i.lv_slider_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = lv_slider_create &rArr; lv_bar_create &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[494]"></a>lv_slider_get_value</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_slider.o(i.lv_slider_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = lv_slider_get_value &rArr; lv_bar_get_value &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
</UL>

<P><STRONG><a name="[495]"></a>lv_snprintf</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_printf.o(i.lv_snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = lv_snprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
</UL>

<P><STRONG><a name="[267]"></a>lv_style_copy</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_style.o(i.lv_style_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = lv_style_copy &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_mem_size
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[19e]"></a>lv_style_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_style.o(i.lv_style_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_box_demo
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_trans_style
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[36f]"></a>lv_style_list_copy</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, lv_style.o(i.lv_style_list_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = lv_style_list_copy &rArr; get_alloc_local_style &rArr; _lv_style_list_add_style &rArr; _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_copy
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[22e]"></a>lv_style_list_get_local_style</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_style.o(i.lv_style_list_get_local_style))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_reset
</UL>

<P><STRONG><a name="[36c]"></a>lv_style_list_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_style.o(i.lv_style_list_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[496]"></a>lv_style_remove_prop</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_style.o(i.lv_style_remove_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = lv_style_remove_prop &rArr; style_resize &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_mem_size
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_resize
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prop_size
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
</UL>

<P><STRONG><a name="[22f]"></a>lv_style_reset</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_style.o(i.lv_style_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_style_reset &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_reset
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
</UL>

<P><STRONG><a name="[29e]"></a>lv_switch_create</STRONG> (Thumb, 354 bytes, Stack size 32 bytes, lv_switch.o(i.lv_switch_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = lv_switch_create &rArr; lv_bar_create &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_design_cb
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_design_cb
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[499]"></a>lv_switch_off</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_switch.o(i.lv_switch_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = lv_switch_off &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
</UL>

<P><STRONG><a name="[49a]"></a>lv_switch_on</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_switch.o(i.lv_switch_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = lv_switch_on &rArr; lv_obj_add_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
</UL>

<P><STRONG><a name="[1a2]"></a>lv_tabview_add_tab</STRONG> (Thumb, 520 bytes, Stack size 56 bytes, lv_tabview.o(i.lv_tabview_add_tab))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560<LI>Call Chain = lv_tabview_add_tab &rArr; lv_page_create &rArr; lv_obj_set_focus_parent &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scroll_propagation
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[1a1]"></a>lv_tabview_create</STRONG> (Thumb, 756 bytes, Stack size 40 bytes, lv_tabview.o(i.lv_tabview_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1600<LI>Call Chain = lv_tabview_create &rArr; lv_tabview_add_tab &rArr; lv_page_create &rArr; lv_obj_set_focus_parent &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_signal_cb
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_dir
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_fit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_ext_attr
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[49e]"></a>lv_tabview_get_anim_time</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_tabview.o(i.lv_tabview_get_anim_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_tabview_get_anim_time &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
</UL>

<P><STRONG><a name="[49d]"></a>lv_tabview_get_tab</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lv_tabview.o(i.lv_tabview_get_tab))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = lv_tabview_get_tab &rArr; lv_page_get_scrollable &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_back
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
</UL>

<P><STRONG><a name="[4a0]"></a>lv_tabview_get_tab_act</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_tabview.o(i.lv_tabview_get_tab_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_tabview_get_tab_act &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
</UL>

<P><STRONG><a name="[49c]"></a>lv_tabview_set_tab_act</STRONG> (Thumb, 478 bytes, Stack size 104 bytes, lv_tabview.o(i.lv_tabview_set_tab_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = lv_tabview_set_tab_act &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_anim_time
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_scrl_signal
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_btnm_event_cb
</UL>

<P><STRONG><a name="[1b3]"></a>lv_task_create</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, lv_task.o(i.lv_task_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_task_create &rArr; lv_task_create_basic &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_set_prio
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[4a1]"></a>lv_task_create_basic</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, lv_task.o(i.lv_task_create_basic))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = lv_task_create_basic &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_prev
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create
</UL>

<P><STRONG><a name="[4a2]"></a>lv_task_del</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_task.o(i.lv_task_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_task_del &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_exec
</UL>

<P><STRONG><a name="[178]"></a>lv_task_handler</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, lv_task.o(i.lv_task_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_task_handler &rArr; lv_task_exec &rArr; lv_task_del &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_time_remaining
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_exec
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvgl_Task
</UL>

<P><STRONG><a name="[3b7]"></a>lv_task_ready</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_task.o(i.lv_task_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_task_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[1c9]"></a>lv_task_set_prio</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lv_task.o(i.lv_task_set_prio))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lv_task_set_prio &rArr; _lv_ll_move_before &rArr; _lv_ll_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_move_before
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create
</UL>

<P><STRONG><a name="[371]"></a>lv_theme_apply</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_theme.o(i.lv_theme_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = lv_theme_apply &rArr; clear_styles &rArr; lv_obj_clean_style_list &rArr; trans_del &rArr; lv_style_remove_prop &rArr; style_resize &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_styles
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
</UL>

<P><STRONG><a name="[214]"></a>lv_theme_get_font_normal</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_theme.o(i.lv_theme_get_font_normal))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
</UL>

<P><STRONG><a name="[2a4]"></a>lv_theme_get_font_small</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_theme.o(i.lv_theme_get_font_small))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[3f5]"></a>lv_theme_material_init</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, lv_theme_material.o(i.lv_theme_material_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096<LI>Call Chain = lv_theme_material_init &rArr; lv_obj_report_style_mod &rArr; report_style_mod_core &rArr;  report_style_mod_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_mod
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spinbox_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roller_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgbox_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[3f6]"></a>lv_theme_set_act</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_theme.o(i.lv_theme_set_act))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1d1]"></a>lv_tick_elaps</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_hal_tick.o(i.lv_tick_elaps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_handler
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_task
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_time_remaining
</UL>

<P><STRONG><a name="[1b2]"></a>lv_tick_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_hal_tick.o(i.lv_tick_get))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_handler
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset_long_press
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_task
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_ready
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_create_basic
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_exec
</UL>

<P><STRONG><a name="[1aa]"></a>lv_tick_inc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_hal_tick.o(i.lv_tick_inc))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[202]"></a>lv_vsnprintf</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_printf.o(i.lv_vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>

<P><STRONG><a name="[6c]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM7_Init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SDIO_SD_Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FATFS_Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[f0]"></a>osDelay</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, cmsis_os2.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvgl_Task
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT11_Task
</UL>

<P><STRONG><a name="[199]"></a>osKernelGetState</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cmsis_os2.o(i.osKernelGetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_initialize
</UL>

<P><STRONG><a name="[195]"></a>osKernelGetTickCount</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, cmsis_os2.o(i.osKernelGetTickCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osKernelGetTickCount &rArr; xTaskGetTickCountFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CheckStatusWithTimeout
</UL>

<P><STRONG><a name="[4af]"></a>osKernelInitialize</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cmsis_os2.o(i.osKernelInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b0]"></a>osKernelStart</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, cmsis_os2.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19b]"></a>osMessageQueueGet</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
</UL>

<P><STRONG><a name="[19a]"></a>osMessageQueueNew</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osMessageQueueNew &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_initialize
</UL>

<P><STRONG><a name="[ec]"></a>osMessageQueuePut</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_WriteCpltCallback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_ReadCpltCallback
</UL>

<P><STRONG><a name="[30c]"></a>osSemaphoreAcquire</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_req_grant
</UL>

<P><STRONG><a name="[308]"></a>osSemaphoreDelete</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, cmsis_os2.o(i.osSemaphoreDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osSemaphoreDelete &rArr; vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_del_syncobj
</UL>

<P><STRONG><a name="[17f]"></a>osSemaphoreNew</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_cre_syncobj
</UL>

<P><STRONG><a name="[30a]"></a>osSemaphoreRelease</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, cmsis_os2.o(i.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant
</UL>

<P><STRONG><a name="[180]"></a>osThreadNew</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, cmsis_os2.o(i.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[4e6]"></a>pvPortMalloc</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[501]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4d8]"></a>pxPortInitialiseStack</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[4c7]"></a>uxListRemove</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
</UL>

<P><STRONG><a name="[4f9]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetIdleTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[504]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetTimerTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[4cc]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[4d7]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[4c9]"></a>vListInsert</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[4c8]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
</UL>

<P><STRONG><a name="[4cb]"></a>vPortEnterCritical</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
</UL>

<P><STRONG><a name="[4cd]"></a>vPortExitCritical</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
</UL>

<P><STRONG><a name="[4d3]"></a>vPortFree</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[4fc]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4f4]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[4bb]"></a>vQueueAddToRegistry</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, queue.o(i.vQueueAddToRegistry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[4c0]"></a>vQueueDelete</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, queue.o(i.vQueueDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreDelete
</UL>

<P><STRONG><a name="[4bf]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, queue.o(i.vQueueUnregisterQueue))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreDelete
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[4e1]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[4b2]"></a>vTaskDelay</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[4ff]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskInternalSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4e5]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[4f7]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4f6]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[4f8]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityDisinheritAfterTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityDisinheritAfterTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4b6]"></a>vTaskStartScheduler</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[4df]"></a>vTaskSuspendAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[d9]"></a>vTaskSwitchContext</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[4fb]"></a>xPortStartScheduler</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[4c2]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[4c1]"></a>xQueueCreateCountingSemaphoreStatic</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphoreStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[4ba]"></a>xQueueGenericCreate</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>

<P><STRONG><a name="[4b9]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
</UL>

<P><STRONG><a name="[4d5]"></a>xQueueGenericReset</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[4bc]"></a>xQueueGenericSend</STRONG> (Thumb, 346 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[4bd]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[4c3]"></a>xQueueGiveFromISR</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[4b7]"></a>xQueueReceive</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, queue.o(i.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[4b8]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, queue.o(i.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[4be]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, queue.o(i.xQueueSemaphoreTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[500]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4c5]"></a>xTaskCreate</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[4c4]"></a>xTaskCreateStatic</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, tasks.o(i.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[4b3]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4b4]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[4b5]"></a>xTaskGetTickCountFromISR</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tasks.o(i.xTaskGetTickCountFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskGetTickCountFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
</UL>

<P><STRONG><a name="[1a8]"></a>xTaskIncrementTick</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4d1]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[502]"></a>xTaskPriorityInherit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4e4]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[4e0]"></a>xTaskResumeAll</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4fa]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[4dd]"></a>xTimerGenericCommand</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, timers.o(i.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[193]"></a>SD_CheckStatus</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sd_diskio.o(i.SD_CheckStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SD_CheckStatus &rArr; BSP_SD_GetCardState &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_status
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_initialize
</UL>

<P><STRONG><a name="[194]"></a>SD_CheckStatusWithTimeout</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, sd_diskio.o(i.SD_CheckStatusWithTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_CheckStatusWithTimeout &rArr; BSP_SD_GetCardState &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
</UL>

<P><STRONG><a name="[111]"></a>HAL_FMC_MspInit</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, fmc.o(i.HAL_FMC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspInit
</UL>

<P><STRONG><a name="[10d]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.DMA_CalcBaseAndBitshift))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[10c]"></a>DMA_CheckFifoParam</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(i.DMA_CheckFifoParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_CheckFifoParam
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[10f]"></a>DMA_SetConfig</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, stm32f4xx_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[11b]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[187]"></a>SDMMC_GetCmdResp1</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_GetCmdResp1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteSingleBlock
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteMultiBlock
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendSCR
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSelDesel
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadSingleBlock
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadMultiBlock
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBusWidth
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
</UL>

<P><STRONG><a name="[18e]"></a>SDMMC_GetCmdResp2</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_GetCmdResp2))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendCSD
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendCID
</UL>

<P><STRONG><a name="[189]"></a>SDMMC_GetCmdResp3</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_GetCmdResp3))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppOperCommand
</UL>

<P><STRONG><a name="[192]"></a>SDMMC_GetCmdResp6</STRONG> (Thumb, 130 bytes, Stack size 12 bytes, stm32f4xx_ll_sdmmc.o(i.SDMMC_GetCmdResp6))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDMMC_GetCmdResp6
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSetRelAdd
</UL>

<P><STRONG><a name="[72]"></a>SD_DMAError</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32f4xx_hal_sd.o(i.SD_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_DMAError &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ErrorCallback
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetError
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f4xx_hal_sd.o(i.HAL_SD_ReadBlocks_DMA)
<LI> stm32f4xx_hal_sd.o(i.HAL_SD_WriteBlocks_DMA)
</UL>
<P><STRONG><a name="[71]"></a>SD_DMAReceiveCplt</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32f4xx_hal_sd.o(i.SD_DMAReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SD_DMAReceiveCplt &rArr; HAL_SD_RxCpltCallback &rArr; BSP_SD_ReadCpltCallback &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_RxCpltCallback
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ErrorCallback
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_sd.o(i.HAL_SD_ReadBlocks_DMA)
</UL>
<P><STRONG><a name="[70]"></a>SD_DMARxAbort</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_hal_sd.o(i.SD_DMARxAbort))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_DMARxAbort &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_AbortCallback
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ErrorCallback
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_sd.o(i.HAL_SD_IRQHandler)
</UL>
<P><STRONG><a name="[73]"></a>SD_DMATransmitCplt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_sd.o(i.SD_DMATransmitCplt))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_sd.o(i.HAL_SD_WriteBlocks_DMA)
</UL>
<P><STRONG><a name="[6f]"></a>SD_DMATxAbort</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_hal_sd.o(i.SD_DMATxAbort))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_DMATxAbort &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_AbortCallback
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ErrorCallback
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_sd.o(i.HAL_SD_IRQHandler)
</UL>
<P><STRONG><a name="[123]"></a>SD_FindSCR</STRONG> (Thumb, 212 bytes, Stack size 72 bytes, stm32f4xx_hal_sd.o(i.SD_FindSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_FindSCR &rArr; SDMMC_CmdSendSCR &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendSCR
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadFIFO
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ConfigData
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>

<P><STRONG><a name="[134]"></a>SD_InitCard</STRONG> (Thumb, 238 bytes, Stack size 72 bytes, stm32f4xx_hal_sd.o(i.SD_InitCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SD_InitCard &rArr; SDMMC_CmdSetRelAdd &rArr; SDMMC_GetCmdResp6
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardCSD
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSetRelAdd
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendCSD
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendCID
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSelDesel
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetPowerState
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[133]"></a>SD_PowerON</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, stm32f4xx_hal_sd.o(i.SD_PowerON))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_PowerON &rArr; SDMMC_CmdAppCommand &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdOperCond
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdGoIdleState
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppOperCommand
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[151]"></a>UART_SetConfig</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[153]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[4cf]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[4d0]"></a>prvCopyDataToQueue</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4d4]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[4da]"></a>prvIsQueueEmpty</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[4e3]"></a>prvUnlockQueue</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[4c6]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[4ca]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvAddNewTaskToReadyList
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4d2]"></a>prvDeleteTCB</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[cf]"></a>prvIdleTask</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[4d6]"></a>prvInitialiseNewTask</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[503]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[4ce]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[4d9]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[4db]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[4de]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[4dc]"></a>prvSampleTimeNow</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[4e2]"></a>prvSwitchTimerLists</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[d0]"></a>prvTimerTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[4e7]"></a>prvHeapInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[4e8]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[ce]"></a>prvTaskExitError</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[f5]"></a>GTP_Get_Info</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, gt5xx.o(i.GTP_Get_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GTP_Get_Info &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[f6]"></a>GTP_I2C_Read</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, gt5xx.o(i.GTP_I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
</UL>

<P><STRONG><a name="[f9]"></a>GTP_I2C_Test</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gt5xx.o(i.GTP_I2C_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GTP_I2C_Test &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[fa]"></a>GTP_I2C_Write</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gt5xx.o(i.GTP_I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GTP_I2C_Write &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[102]"></a>GTP_Touch_Up</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gt5xx.o(i.GTP_Touch_Up))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[ff]"></a>Goodix_TS_Work_Func</STRONG> (Thumb, 286 bytes, Stack size 128 bytes, gt5xx.o(i.Goodix_TS_Work_Func))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Up
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Down
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_TouchProcess
</UL>

<P><STRONG><a name="[f8]"></a>I2C_Transfer</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gt5xx.o(i.I2C_Transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
</UL>

<P><STRONG><a name="[313]"></a>focus_next_core</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, lv_group.o(i.focus_next_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_to_foreground
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
</UL>

<P><STRONG><a name="[3d2]"></a>lv_group_refocus</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_group.o(i.lv_group_refocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
</UL>

<P><STRONG><a name="[316]"></a>obj_to_foreground</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_group.o(i.obj_to_foreground))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>

<P><STRONG><a name="[323]"></a>get_dragged_obj</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_indev.o(i.get_dragged_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = get_dragged_obj &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_parent
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_finish_drag
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
</UL>

<P><STRONG><a name="[1f5]"></a>indev_button_proc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lv_indev.o(i.indev_button_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = indev_button_proc &rArr; indev_proc_press &rArr; indev_drag_throw &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
</UL>

<P><STRONG><a name="[336]"></a>indev_click_focus</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, lv_indev.o(i.indev_click_focus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = indev_click_focus &rArr; lv_group_focus_obj &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_signal_send
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_focused_obj
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[33d]"></a>indev_drag</STRONG> (Thumb, 676 bytes, Stack size 48 bytes, lv_indev.o(i.indev_drag))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = indev_drag &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_dir
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_inv_buf_size
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_pop_from_inv_buf
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dragged_obj
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[343]"></a>indev_drag_throw</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, lv_indev.o(i.indev_drag_throw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = indev_drag_throw &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_throw
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_dir
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dragged_obj
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[1f4]"></a>indev_encoder_proc</STRONG> (Thumb, 882 bytes, Stack size 40 bytes, lv_indev.o(i.indev_encoder_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = indev_encoder_proc &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_is_empty
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
</UL>

<P><STRONG><a name="[34c]"></a>indev_gesture</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, lv_indev.o(i.indev_gesture))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = indev_gesture &rArr; lv_event_send &rArr; lv_event_send_func &rArr;  lv_event_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_gesture_parent
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[1f3]"></a>indev_keypad_proc</STRONG> (Thumb, 544 bytes, Stack size 32 bytes, lv_indev.o(i.indev_keypad_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = indev_keypad_proc &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; obj_to_foreground &rArr; lv_obj_move_foreground &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
</UL>

<P><STRONG><a name="[1f2]"></a>indev_proc_press</STRONG> (Thumb, 686 bytes, Stack size 24 bytes, lv_indev.o(i.indev_proc_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = indev_proc_press &rArr; indev_drag_throw &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_button_proc
</UL>

<P><STRONG><a name="[1f1]"></a>indev_proc_release</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, lv_indev.o(i.indev_proc_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = indev_proc_release &rArr; indev_drag_throw &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_drag_throw
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dragged_obj
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_button_proc
</UL>

<P><STRONG><a name="[1ef]"></a>indev_proc_reset_query_handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lv_indev.o(i.indev_proc_reset_query_handler))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read_task
</UL>

<P><STRONG><a name="[33c]"></a>indev_reset_check</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_indev.o(i.indev_reset_check))
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag_throw
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_drag
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
</UL>

<P><STRONG><a name="[366]"></a>_lv_memcpy_small</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_obj.o(i._lv_memcpy_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>

<P><STRONG><a name="[355]"></a>invalidate_style_cache</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, lv_obj.o(i.invalidate_style_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = invalidate_style_cache &rArr; update_style_cache_children &rArr;  update_style_cache_children (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_prop_is_cacheble
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
</UL>

<P><STRONG><a name="[365]"></a>lv_area_copy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_area_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_area_copy &rArr; _lv_memcpy_small
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[3f4]"></a>lv_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lv_obj.o(i.lv_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[aa]"></a>lv_obj_design</STRONG> (Thumb, 564 bytes, Stack size 128 bytes, lv_obj.o(i.lv_obj_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392<LI>Call Chain = lv_obj_design &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_custom
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_blend_mode
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_blend_mode
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(i.lv_obj_create)
</UL>
<P><STRONG><a name="[423]"></a>lv_obj_get_style_bg_blend_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_bg_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_bg_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[422]"></a>lv_obj_get_style_bg_opa</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_bg_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_bg_opa &rArr; _lv_obj_get_style_opa &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[424]"></a>lv_obj_get_style_border_blend_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_border_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_border_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[426]"></a>lv_obj_get_style_border_post</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_border_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_border_post &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[43a]"></a>lv_obj_get_style_border_side</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_border_side))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_border_side &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[43b]"></a>lv_obj_get_style_border_width</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_border_width))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[41e]"></a>lv_obj_get_style_clip_corner</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_clip_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_clip_corner &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[43c]"></a>lv_obj_get_style_image_blend_mode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_image_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_image_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[43d]"></a>lv_obj_get_style_image_recolor_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_image_recolor_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_image_recolor_opa &rArr; _lv_obj_get_style_opa &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[43e]"></a>lv_obj_get_style_line_blend_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_line_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_line_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[43f]"></a>lv_obj_get_style_margin_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_margin_bottom))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[440]"></a>lv_obj_get_style_margin_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_margin_left))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width_margin
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[441]"></a>lv_obj_get_style_margin_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_margin_right))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width_margin
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[442]"></a>lv_obj_get_style_margin_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_margin_top))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[425]"></a>lv_obj_get_style_opa_scale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_opa_scale))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_opa_scale &rArr; _lv_obj_get_style_opa &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[443]"></a>lv_obj_get_style_outline_blend_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_outline_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_outline_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[434]"></a>lv_obj_get_style_outline_opa</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_outline_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_outline_opa &rArr; _lv_obj_get_style_opa &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[435]"></a>lv_obj_get_style_outline_pad</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_outline_pad))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_outline_pad &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[433]"></a>lv_obj_get_style_outline_width</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_outline_width))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[438]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_fit
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[439]"></a>lv_obj_get_style_pad_inner</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_pad_inner))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_inner &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_grid
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_grid
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[44b]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[450]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[437]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_fit
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[45a]"></a>lv_obj_get_style_pattern_blend_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_pattern_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_pattern_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[45b]"></a>lv_obj_get_style_pattern_image</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_pattern_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_pattern_image &rArr; _lv_obj_get_style_ptr &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[45c]"></a>lv_obj_get_style_pattern_recolor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_pattern_recolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = lv_obj_get_style_pattern_recolor &rArr; _lv_obj_get_style_color &rArr; lv_obj_get_state &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
</UL>

<P><STRONG><a name="[41f]"></a>lv_obj_get_style_radius</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_radius))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[45d]"></a>lv_obj_get_style_shadow_blend_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_shadow_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_shadow_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[42a]"></a>lv_obj_get_style_shadow_ofs_x</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_shadow_ofs_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_shadow_ofs_x &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[42b]"></a>lv_obj_get_style_shadow_ofs_y</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_shadow_ofs_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_shadow_ofs_y &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[428]"></a>lv_obj_get_style_shadow_opa</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_shadow_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_shadow_opa &rArr; _lv_obj_get_style_opa &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[429]"></a>lv_obj_get_style_shadow_spread</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_shadow_spread))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_shadow_spread &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[427]"></a>lv_obj_get_style_shadow_width</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_shadow_width))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[45f]"></a>lv_obj_get_style_text_blend_mode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_text_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_text_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[460]"></a>lv_obj_get_style_text_decor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_text_decor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_text_decor &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[461]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_text_font &rArr; _lv_obj_get_style_ptr &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[462]"></a>lv_obj_get_style_text_letter_space</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_text_letter_space))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[463]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[464]"></a>lv_obj_get_style_transform_angle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_transform_angle))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[421]"></a>lv_obj_get_style_transform_height</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_transform_height))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[420]"></a>lv_obj_get_style_transform_width</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_transform_width))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_design
</UL>

<P><STRONG><a name="[465]"></a>lv_obj_get_style_transform_zoom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_transform_zoom))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_snapshot
</UL>

<P><STRONG><a name="[430]"></a>lv_obj_get_style_value_align</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_value_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = lv_obj_get_style_value_align &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[466]"></a>lv_obj_get_style_value_blend_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_get_style_value_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = lv_obj_get_style_value_blend_mode &rArr;  _lv_obj_get_style_int (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[42f]"></a>lv_obj_get_style_value_font</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_value_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_value_font &rArr; _lv_obj_get_style_ptr &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[42e]"></a>lv_obj_get_style_value_letter_space</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_value_letter_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_value_letter_space &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[431]"></a>lv_obj_get_style_value_ofs_x</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_value_ofs_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_value_ofs_x &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[432]"></a>lv_obj_get_style_value_ofs_y</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_value_ofs_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_value_ofs_y &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[42d]"></a>lv_obj_get_style_value_opa</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_value_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_value_opa &rArr; _lv_obj_get_style_opa &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
</UL>

<P><STRONG><a name="[42c]"></a>lv_obj_get_style_value_str</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_style_value_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_value_str &rArr; _lv_obj_get_style_ptr &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
</UL>

<P><STRONG><a name="[a9]"></a>lv_obj_signal</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = lv_obj_signal &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_focused_obj
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_pad
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_realign
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(i.lv_obj_create)
</UL>
<P><STRONG><a name="[417]"></a>obj_align_core</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lv_obj.o(i.obj_align_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_align
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
</UL>

<P><STRONG><a name="[419]"></a>obj_align_mid_core</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, lv_obj.o(i.obj_align_mid_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_mid
</UL>

<P><STRONG><a name="[41d]"></a>obj_del_core</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, lv_obj.o(i.obj_del_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + In Cycle
<LI>Call Chain = obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_obj_act
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[472]"></a>refresh_children_position</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_obj.o(i.refresh_children_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = refresh_children_position &rArr;  refresh_children_position (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_position
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_position
</UL>

<P><STRONG><a name="[468]"></a>refresh_children_style</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_obj.o(i.refresh_children_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 976 + In Cycle
<LI>Call Chain = refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>

<P><STRONG><a name="[46a]"></a>report_style_mod_core</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lv_obj.o(i.report_style_mod_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024 + In Cycle
<LI>Call Chain = report_style_mod_core &rArr;  report_style_mod_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_mod_core
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_mod
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_mod_core
</UL>

<P><STRONG><a name="[356]"></a>style_prop_is_cacheble</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, lv_obj.o(i.style_prop_is_cacheble))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_style_cache
</UL>

<P><STRONG><a name="[473]"></a>style_snapshot</STRONG> (Thumb, 436 bytes, Stack size 40 bytes, lv_obj.o(i.style_snapshot))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = style_snapshot &rArr; lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_value_align &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_disable_style_caching
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_zoom
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_angle
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_top
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_right
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_left
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_bottom
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[474]"></a>style_snapshot_compare</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, lv_obj.o(i.style_snapshot_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = style_snapshot_compare &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[ab]"></a>trans_anim_cb</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, lv_obj.o(i.trans_anim_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = trans_anim_cb &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_transition_style
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(i.lv_obj_set_state)
</UL>
<P><STRONG><a name="[ad]"></a>trans_anim_ready_cb</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_obj.o(i.trans_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = trans_anim_ready_cb &rArr; lv_style_remove_prop &rArr; style_resize &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_transition_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(i.lv_obj_set_state)
</UL>
<P><STRONG><a name="[ac]"></a>trans_anim_start_cb</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lv_obj.o(i.trans_anim_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = trans_anim_start_cb &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(i.lv_obj_set_state)
</UL>
<P><STRONG><a name="[475]"></a>trans_create</STRONG> (Thumb, 742 bytes, Stack size 72 bytes, lv_obj.o(i.trans_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_transition_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[217]"></a>trans_del</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lv_obj.o(i.trans_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = trans_del &rArr; lv_style_remove_prop &rArr; style_resize &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_transition_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_opa
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_ptr
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_int
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_color
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[20e]"></a>update_style_cache</STRONG> (Thumb, 774 bytes, Stack size 24 bytes, lv_obj.o(i.update_style_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + In Cycle
<LI>Call Chain = update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_prop_is_cacheble
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_str
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_value_blend_mode
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_zoom
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_angle
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_decor
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_blend_mode
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_blend_mode
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pattern_image
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pattern_blend_mode
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_blend_mode
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_top
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_right
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_left
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_bottom
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_line_blend_mode
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_image_recolor_opa
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_image_blend_mode
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_side
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_blend_mode
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_blend_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>

<P><STRONG><a name="[357]"></a>update_style_cache_children</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, lv_obj.o(i.update_style_cache_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + In Cycle
<LI>Call Chain = update_style_cache_children &rArr;  update_style_cache_children (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_normal
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_decor
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa_scale
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_image_recolor_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_style_cache_children
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_style_cache
</UL>

<P><STRONG><a name="[1f8]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_refr.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
</UL>

<P><STRONG><a name="[489]"></a>lv_refr_area</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, lv_refr.o(i.lv_refr_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 2072<LI>Call Chain = lv_refr_area &rArr; lv_refr_area_part &rArr; lv_draw_img &rArr; lv_img_draw_core &rArr; show_error &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_is_true_double_buf
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_areas
</UL>

<P><STRONG><a name="[48a]"></a>lv_refr_area_part</STRONG> (Thumb, 290 bytes, Stack size 120 bytes, lv_refr.o(i.lv_refr_area_part))
<BR><BR>[Stack]<UL><LI>Max Depth = 2024<LI>Call Chain = lv_refr_area_part &rArr; lv_draw_img &rArr; lv_img_draw_core &rArr; show_error &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_is_true_double_buf
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_is_double_buf
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_vdb_flush
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
</UL>

<P><STRONG><a name="[1cb]"></a>lv_refr_areas</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, lv_refr.o(i.lv_refr_areas))
<BR><BR>[Stack]<UL><LI>Max Depth = 2096<LI>Call Chain = lv_refr_areas &rArr; lv_refr_area &rArr; lv_refr_area_part &rArr; lv_draw_img &rArr; lv_img_draw_core &rArr; show_error &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
</UL>

<P><STRONG><a name="[48b]"></a>lv_refr_get_top_obj</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lv_refr.o(i.lv_refr_get_top_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + In Cycle
<LI>Call Chain = lv_refr_get_top_obj &rArr;  lv_refr_get_top_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[1ca]"></a>lv_refr_join_area</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, lv_refr.o(i.lv_refr_join_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_refr_join_area &rArr; _lv_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_join
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_on
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
</UL>

<P><STRONG><a name="[48e]"></a>lv_refr_obj</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, lv_refr.o(i.lv_refr_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + In Cycle
<LI>Call Chain = lv_refr_obj &rArr;  lv_refr_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>

<P><STRONG><a name="[48c]"></a>lv_refr_obj_and_children</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_refr.o(i.lv_refr_obj_and_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = lv_refr_obj_and_children &rArr; lv_refr_obj &rArr;  lv_refr_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[1ce]"></a>lv_refr_vdb_flush</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lv_refr.o(i.lv_refr_vdb_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_refr_vdb_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_is_double_buf
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_task
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[220]"></a>_lv_memcpy_small</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_style.o(i._lv_memcpy_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_ptr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_opa
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_int
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_color
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>

<P><STRONG><a name="[230]"></a>get_alloc_local_style</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lv_style.o(i.get_alloc_local_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = get_alloc_local_style &rArr; _lv_style_list_add_style &rArr; _lv_style_list_remove_style &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_get_style
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_list_copy
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_ptr
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_opa
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_int
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_set_local_color
</UL>

<P><STRONG><a name="[224]"></a>get_prop_size</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_style.o(i.get_prop_size))
<BR><BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_mem_size
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
</UL>

<P><STRONG><a name="[21f]"></a>get_property_index</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, lv_style.o(i.get_property_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_property_index &rArr; get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_id
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prop_size
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_ptr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_opa
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_int
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_color
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>

<P><STRONG><a name="[329]"></a>get_style_prop</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_style.o(i.get_style_prop))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_id
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop_attr
</UL>

<P><STRONG><a name="[221]"></a>get_style_prop_attr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lv_style.o(i.get_style_prop_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_style_prop_attr
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_ptr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_opa
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_int
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_color
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>

<P><STRONG><a name="[225]"></a>get_style_prop_id</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lv_style.o(i.get_style_prop_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_style_prop_id
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_mem_size
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_property_index
</UL>

<P><STRONG><a name="[22c]"></a>lv_style_list_get_style</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lv_style.o(i.lv_style_list_get_style))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alloc_local_style
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_ptr
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_opa
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_int
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_get_color
</UL>

<P><STRONG><a name="[234]"></a>style_resize</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_style.o(i.style_resize))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = style_resize &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>

<P><STRONG><a name="[83]"></a>color_blend_true_color_additive</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lv_draw_blend.o(i.color_blend_true_color_additive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = color_blend_true_color_additive &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_draw_blend.o(i.fill_blended)
<LI> lv_draw_blend.o(i.map_blended)
</UL>
<P><STRONG><a name="[84]"></a>color_blend_true_color_subtractive</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lv_draw_blend.o(i.color_blend_true_color_subtractive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = color_blend_true_color_subtractive &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_draw_blend.o(i.fill_blended)
<LI> lv_draw_blend.o(i.map_blended)
</UL>
<P><STRONG><a name="[1c3]"></a>fill_blended</STRONG> (Thumb, 318 bytes, Stack size 64 bytes, lv_draw_blend.o(i.fill_blended))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = fill_blended &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[1c4]"></a>fill_normal</STRONG> (Thumb, 1058 bytes, Stack size 72 bytes, lv_draw_blend.o(i.fill_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fill_normal &rArr; lv_gpu_stm32_dma2d_blend &rArr; dma2d_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_fill
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_blend
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_fill
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[1c2]"></a>fill_set_px</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, lv_draw_blend.o(i.fill_set_px))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fill_set_px
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[27e]"></a>lv_color_mix</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, lv_draw_blend.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_blended
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_subtractive
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_additive
</UL>

<P><STRONG><a name="[1c7]"></a>map_blended</STRONG> (Thumb, 364 bytes, Stack size 88 bytes, lv_draw_blend.o(i.map_blended))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = map_blended &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
</UL>

<P><STRONG><a name="[1c8]"></a>map_normal</STRONG> (Thumb, 892 bytes, Stack size 96 bytes, lv_draw_blend.o(i.map_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = map_normal &rArr; lv_gpu_stm32_dma2d_blend &rArr; dma2d_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_blend
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_copy
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
</UL>

<P><STRONG><a name="[1c6]"></a>map_set_px</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, lv_draw_blend.o(i.map_set_px))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = map_set_px
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
</UL>

<P><STRONG><a name="[1d9]"></a>_lv_img_buf_transform</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, lv_draw_img.o(i._lv_img_buf_transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = _lv_img_buf_transform &rArr; _lv_img_buf_transform_anti_alias &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[1da]"></a>_lv_memcpy_small</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_draw_img.o(i._lv_memcpy_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
</UL>

<P><STRONG><a name="[3c4]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[3c3]"></a>lv_draw_map</STRONG> (Thumb, 1384 bytes, Stack size 256 bytes, lv_draw_img.o(i.lv_draw_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = lv_draw_map &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_get_cnt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_ff
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
</UL>

<P><STRONG><a name="[3bb]"></a>lv_img_draw_core</STRONG> (Thumb, 466 bytes, Stack size 88 bytes, lv_draw_img.o(i.lv_img_draw_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888<LI>Call Chain = lv_img_draw_core &rArr; show_error &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_read_line
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_height
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_is_chroma_keyed
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_has_alpha
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy_small
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[3bc]"></a>show_error</STRONG> (Thumb, 66 bytes, Stack size 144 bytes, lv_draw_img.o(i.show_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800<LI>Call Chain = show_error &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_draw_core
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[2d0]"></a>draw_letter_normal</STRONG> (Thumb, 624 bytes, Stack size 136 bytes, lv_draw_label.o(i.draw_letter_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = draw_letter_normal &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_get_cnt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
</UL>

<P><STRONG><a name="[2d2]"></a>draw_letter_subpx</STRONG> (Thumb, 900 bytes, Stack size 176 bytes, lv_draw_label.o(i.draw_letter_subpx))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = draw_letter_subpx &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_get_cnt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
</UL>

<P><STRONG><a name="[3be]"></a>hex_char_to_num</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, lv_draw_label.o(i.hex_char_to_num))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[2d1]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_draw_label.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[3bf]"></a>lv_draw_letter</STRONG> (Thumb, 240 bytes, Stack size 64 bytes, lv_draw_label.o(i.lv_draw_letter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = lv_draw_letter &rArr; draw_letter_subpx &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_bitmap
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_subpx
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[2d3]"></a>draw_line_hor</STRONG> (Thumb, 504 bytes, Stack size 88 bytes, lv_draw_line.o(i.draw_line_hor))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = draw_line_hor &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_get_cnt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_ff
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>

<P><STRONG><a name="[2d4]"></a>draw_line_skew</STRONG> (Thumb, 938 bytes, Stack size 304 bytes, lv_draw_line.o(i.draw_line_skew))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = draw_line_skew &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_ff
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>

<P><STRONG><a name="[2d7]"></a>draw_line_ver</STRONG> (Thumb, 462 bytes, Stack size 112 bytes, lv_draw_line.o(i.draw_line_ver))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = draw_line_ver &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_get_cnt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_ff
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>

<P><STRONG><a name="[35d]"></a>line_mask_flat</STRONG> (Thumb, 344 bytes, Stack size 32 bytes, lv_draw_mask.o(i.line_mask_flat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = line_mask_flat
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>

<P><STRONG><a name="[35f]"></a>line_mask_steep</STRONG> (Thumb, 478 bytes, Stack size 40 bytes, lv_draw_mask.o(i.line_mask_steep))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = line_mask_steep
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>

<P><STRONG><a name="[3c5]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_draw_mask.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
</UL>

<P><STRONG><a name="[95]"></a>lv_draw_mask_line</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, lv_draw_mask.o(i.lv_draw_mask_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lv_draw_mask_line &rArr; line_mask_steep
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_steep
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_flat
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(i.lv_draw_mask_line_points_init)
</UL>
<P><STRONG><a name="[96]"></a>lv_draw_mask_radius</STRONG> (Thumb, 1026 bytes, Stack size 72 bytes, lv_draw_mask.o(i.lv_draw_mask_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = lv_draw_mask_radius &rArr; _lv_sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_sqrt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(i.lv_draw_mask_radius_init)
</UL>
<P><STRONG><a name="[35e]"></a>mask_mix</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lv_draw_mask.o(i.mask_mix))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_steep
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_flat
</UL>

<P><STRONG><a name="[2bc]"></a>draw_bg</STRONG> (Thumb, 1134 bytes, Stack size 184 bytes, lv_draw_rect.o(i.draw_bg))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = draw_bg &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_get_cnt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grad_get
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2c6]"></a>draw_border</STRONG> (Thumb, 716 bytes, Stack size 200 bytes, lv_draw_rect.o(i.draw_border))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248<LI>Call Chain = draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_ff
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2c7]"></a>draw_full_border</STRONG> (Thumb, 1096 bytes, Stack size 200 bytes, lv_draw_rect.o(i.draw_full_border))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_get_cnt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_ff
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_outline
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
</UL>

<P><STRONG><a name="[2d8]"></a>draw_outline</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, lv_draw_rect.o(i.draw_outline))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096<LI>Call Chain = draw_outline &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_full_border
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2d9]"></a>draw_pattern</STRONG> (Thumb, 648 bytes, Stack size 168 bytes, lv_draw_rect.o(i.draw_pattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + In Cycle
<LI>Call Chain = draw_pattern &rArr;  lv_draw_label (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2e0]"></a>draw_shadow</STRONG> (Thumb, 2876 bytes, Stack size 200 bytes, lv_draw_rect.o(i.draw_shadow))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = draw_shadow &rArr; shadow_draw_corner_buf &rArr; shadow_blur_corner &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_get_cnt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_buf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2e2]"></a>draw_value_str</STRONG> (Thumb, 208 bytes, Stack size 88 bytes, lv_draw_rect.o(i.draw_value_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + In Cycle
<LI>Call Chain = draw_value_str &rArr;  lv_draw_label (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_align
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2c1]"></a>grad_get</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, lv_draw_rect.o(i.grad_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = grad_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[2bd]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_draw_rect.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_outline
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[2c4]"></a>lv_area_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_draw_rect.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2de]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_draw_rect.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pattern
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[4ee]"></a>shadow_blur_corner</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, lv_draw_rect.o(i.shadow_blur_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = shadow_blur_corner &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
</UL>

<P><STRONG><a name="[2e1]"></a>shadow_draw_corner_buf</STRONG> (Thumb, 382 bytes, Stack size 72 bytes, lv_draw_rect.o(i.shadow_draw_corner_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = shadow_draw_corner_buf &rArr; shadow_blur_corner &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_ff
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
</UL>

<P><STRONG><a name="[1de]"></a>_lv_memcpy_small</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_img_buf.o(i._lv_memcpy_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
</UL>

<P><STRONG><a name="[1df]"></a>lv_color_mix</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, lv_img_buf.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
</UL>

<P><STRONG><a name="[3dd]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lv_img_decoder.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[3d9]"></a>lv_img_decoder_built_in_line_alpha</STRONG> (Thumb, 378 bytes, Stack size 80 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_line_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = lv_img_decoder_built_in_line_alpha &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[3db]"></a>lv_img_decoder_built_in_line_indexed</STRONG> (Thumb, 324 bytes, Stack size 56 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_line_indexed))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = lv_img_decoder_built_in_line_indexed &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[3dc]"></a>lv_img_decoder_built_in_line_true_color</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_line_true_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = lv_img_decoder_built_in_line_true_color &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[28d]"></a>bits_write</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, lv_font_fmt_txt.o(i.bits_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bits_write
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress
</UL>

<P><STRONG><a name="[28b]"></a>decompress</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, lv_font_fmt_txt.o(i.decompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = decompress &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_line
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bits_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
</UL>

<P><STRONG><a name="[28c]"></a>decompress_line</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_font_fmt_txt.o(i.decompress_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = decompress_line &rArr; rle_next &rArr; get_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rle_next
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress
</UL>

<P><STRONG><a name="[4ed]"></a>get_bits</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, lv_font_fmt_txt.o(i.get_bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rle_next
</UL>

<P><STRONG><a name="[326]"></a>get_glyph_dsc_id</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, lv_font_fmt_txt.o(i.get_glyph_dsc_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
</UL>

<P><STRONG><a name="[328]"></a>get_kern_value</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lv_font_fmt_txt.o(i.get_kern_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_kern_value &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
</UL>

<P><STRONG><a name="[87]"></a>kern_pair_16_compare</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_font_fmt_txt.o(i.kern_pair_16_compare))
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(i.get_kern_value)
</UL>
<P><STRONG><a name="[86]"></a>kern_pair_8_compare</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_font_fmt_txt.o(i.kern_pair_8_compare))
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(i.get_kern_value)
</UL>
<P><STRONG><a name="[28e]"></a>rle_next</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, lv_font_fmt_txt.o(i.rle_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rle_next &rArr; get_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_line
</UL>

<P><STRONG><a name="[85]"></a>unicode_list_compare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_font_fmt_txt.o(i.unicode_list_compare))
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(i.get_glyph_dsc_id)
</UL>
<P><STRONG><a name="[2bb]"></a>dma2d_wait</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_gpu_stm32_dma2d.o(i.dma2d_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma2d_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_fill
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_blend
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_copy
</UL>

<P><STRONG><a name="[354]"></a>invalidate_cache</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_gpu_stm32_dma2d.o(i.invalidate_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = invalidate_cache
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_fill
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_blend
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gpu_stm32_dma2d_copy
</UL>

<P><STRONG><a name="[1b4]"></a>anim_mark_list_change</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lv_anim.o(i.anim_mark_list_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = anim_mark_list_change &rArr; lv_task_set_prio &rArr; _lv_ll_move_before &rArr; _lv_ll_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_set_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
</UL>

<P><STRONG><a name="[247]"></a>anim_ready_handler</STRONG> (Thumb, 134 bytes, Stack size 80 bytes, lv_anim.o(i.anim_ready_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = anim_ready_handler &rArr; anim_mark_list_change &rArr; lv_task_set_prio &rArr; _lv_ll_move_before &rArr; _lv_ll_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_task
</UL>

<P><STRONG><a name="[7a]"></a>anim_task</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, lv_anim.o(i.anim_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = anim_task &rArr; anim_ready_handler &rArr; anim_mark_list_change &rArr; lv_task_set_prio &rArr; _lv_ll_move_before &rArr; _lv_ll_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_linear
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_anim.o(i._lv_anim_core_init)
</UL>
<P><STRONG><a name="[1b7]"></a>lv_area_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_align
</UL>

<P><STRONG><a name="[1b6]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_align
</UL>

<P><STRONG><a name="[1ba]"></a>lv_point_within_circle</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lv_area.o(i.lv_point_within_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_point_within_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>

<P><STRONG><a name="[399]"></a>lv_color_mix</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, lv_color.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_lighten
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_darken
</UL>

<P><STRONG><a name="[3cf]"></a>lv_fs_get_real_path</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_fs.o(i.lv_fs_get_real_path))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
</UL>

<P><STRONG><a name="[1fc]"></a>node_set_next</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_ll.o(i.node_set_next))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_chg_list
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_move_before
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_prev
</UL>

<P><STRONG><a name="[1fb]"></a>node_set_prev</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_ll.o(i.node_set_prev))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_chg_list
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_move_before
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_prev
</UL>

<P><STRONG><a name="[40e]"></a>ent_get_next</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_mem.o(i.ent_get_next))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_defrag
</UL>

<P><STRONG><a name="[40f]"></a>ent_trunc</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lv_mem.o(i.ent_trunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ent_trunc
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>

<P><STRONG><a name="[1ae]"></a>_atoi</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_printf.o(i._atoi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _atoi
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[1af]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_printf.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atoi
</UL>

<P><STRONG><a name="[23d]"></a>_ntoa_format</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, lv_printf.o(i._ntoa_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ntoa_format
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long
</UL>

<P><STRONG><a name="[23c]"></a>_ntoa_long</STRONG> (Thumb, 128 bytes, Stack size 96 bytes, lv_printf.o(i._ntoa_long))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[23e]"></a>_ntoa_long_long</STRONG> (Thumb, 128 bytes, Stack size 112 bytes, lv_printf.o(i._ntoa_long_long))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[c7]"></a>_out_buffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_printf.o(i._out_buffer))
<BR>[Address Reference Count : 2]<UL><LI> lv_printf.o(i.lv_snprintf)
<LI> lv_printf.o(i.lv_vsnprintf)
</UL>
<P><STRONG><a name="[7f]"></a>_out_null</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_printf.o(i._out_null))
<BR>[Address Reference Count : 1]<UL><LI> lv_printf.o(i._vsnprintf)
</UL>
<P><STRONG><a name="[241]"></a>_vsnprintf</STRONG> (Thumb, 1046 bytes, Stack size 88 bytes, lv_printf.o(i._vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_vsnprintf
</UL>

<P><STRONG><a name="[4a3]"></a>lv_task_exec</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_task.o(i.lv_task_exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_task_exec &rArr; lv_task_del &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_del
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_time_remaining
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_handler
</UL>

<P><STRONG><a name="[4a4]"></a>lv_task_time_remaining</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_task.o(i.lv_task_time_remaining))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_task_time_remaining &rArr; lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_handler
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_task_exec
</UL>

<P><STRONG><a name="[237]"></a>lv_txt_get_next_word</STRONG> (Thumb, 292 bytes, Stack size 64 bytes, lv_txt.o(i.lv_txt_get_next_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>

<P><STRONG><a name="[4]"></a>lv_txt_utf8_get_byte_id</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lv_txt.o(i.lv_txt_utf8_get_byte_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_get_byte_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>lv_txt_utf8_get_char_id</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lv_txt.o(i.lv_txt_utf8_get_char_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_get_char_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>lv_txt_utf8_get_length</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lv_txt.o(i.lv_txt_utf8_get_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_get_length
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>lv_txt_utf8_next</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, lv_txt.o(i.lv_txt_utf8_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_txt_utf8_next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>lv_txt_utf8_prev</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lv_txt.o(i.lv_txt_utf8_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_prev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>lv_txt_utf8_size</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lv_txt.o(i.lv_txt_utf8_size))
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[249]"></a>apply_theme</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_theme.o(i.apply_theme))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = apply_theme &rArr;  apply_theme (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>

<P><STRONG><a name="[27a]"></a>clear_styles</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, lv_theme.o(i.clear_styles))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = clear_styles &rArr; lv_obj_clean_style_list &rArr; trans_del &rArr; lv_style_remove_prop &rArr; style_resize &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
</UL>

<P><STRONG><a name="[24a]"></a>arc_init</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, lv_theme_material.o(i.arc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = arc_init &rArr; lv_style_set_radius &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_rounded
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[255]"></a>bar_init</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, lv_theme_material.o(i.bar_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = bar_init &rArr; lv_style_set_value_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_value_color
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_time
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_prop_6
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[25f]"></a>basic_init</STRONG> (Thumb, 3422 bytes, Stack size 40 bytes, lv_theme_material.o(i.basic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = basic_init &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_copy
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_darken
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_value_font
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_value_color
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_time
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_prop_6
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_prop_5
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_delay
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_image_recolor
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[26d]"></a>calendar_init</STRONG> (Thumb, 1394 bytes, Stack size 40 bytes, lv_theme_material.o(i.calendar_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = calendar_init &rArr; lv_style_set_text_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_margin_top
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_margin_bottom
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[271]"></a>chart_init</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, lv_theme_material.o(i.chart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = chart_init &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_size
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[277]"></a>checkbox_init</STRONG> (Thumb, 630 bytes, Stack size 24 bytes, lv_theme_material.o(i.checkbox_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = checkbox_init &rArr; _lv_style_set_ptr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_time
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_prop_6
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pattern_opa
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_pad
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[27f]"></a>cpicker_init</STRONG> (Thumb, 516 bytes, Stack size 32 bytes, lv_theme_material.o(i.cpicker_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = cpicker_init &rArr; lv_style_set_scale_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_width
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[288]"></a>ddlist_init</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, lv_theme_material.o(i.ddlist_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ddlist_init &rArr; lv_style_set_text_line_space &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_line_space
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_clip_corner
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[317]"></a>gauge_init</STRONG> (Thumb, 954 bytes, Stack size 40 bytes, lv_theme_material.o(i.gauge_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = gauge_init &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_size
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_width
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_grad_color
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_end_line_width
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_end_color
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[358]"></a>keyboard_init</STRONG> (Thumb, 378 bytes, Stack size 24 bytes, lv_theme_material.o(i.keyboard_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = keyboard_init &rArr; lv_style_set_radius &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[359]"></a>led_init</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, lv_theme_material.o(i.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = led_init &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_lighten
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_width
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_color
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[360]"></a>linemeter_init</STRONG> (Thumb, 452 bytes, Stack size 24 bytes, lv_theme_material.o(i.linemeter_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = linemeter_init &rArr; lv_style_set_scale_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_width
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_grad_color
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_end_line_width
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_scale_end_color
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[361]"></a>list_init</STRONG> (Thumb, 1408 bytes, Stack size 32 bytes, lv_theme_material.o(i.list_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = list_init &rArr; lv_style_set_transition_time &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_darken
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_time
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_prop_6
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition_prop_5
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_width
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_pad
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_image_recolor
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_clip_corner
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[24f]"></a>lv_color_hex</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_theme_material.o(i.lv_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_color_hex &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[25e]"></a>lv_color_hex3</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lv_theme_material.o(i.lv_color_hex3))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_color_hex3 &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgbox_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[39a]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lv_theme_material.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>

<P><STRONG><a name="[26a]"></a>lv_color_mix</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, lv_theme_material.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[257]"></a>lv_style_set_bg_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_bg_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spinbox_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roller_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[256]"></a>lv_style_set_bg_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_bg_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_bg_opa &rArr; _lv_style_set_opa &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spinbox_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roller_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[262]"></a>lv_style_set_border_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_border_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_border_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[26b]"></a>lv_style_set_border_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_border_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_border_opa &rArr; _lv_style_set_opa &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[270]"></a>lv_style_set_border_side</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_border_side))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_border_side &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
</UL>

<P><STRONG><a name="[263]"></a>lv_style_set_border_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_border_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[28a]"></a>lv_style_set_clip_corner</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_clip_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_clip_corner &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
</UL>

<P><STRONG><a name="[264]"></a>lv_style_set_image_recolor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_image_recolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_image_recolor &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[24c]"></a>lv_style_set_line_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_line_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_line_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[24e]"></a>lv_style_set_line_rounded</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_line_rounded))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_line_rounded &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[24d]"></a>lv_style_set_line_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_line_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_line_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[26f]"></a>lv_style_set_margin_bottom</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_margin_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_margin_bottom &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
</UL>

<P><STRONG><a name="[26e]"></a>lv_style_set_margin_top</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_margin_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_margin_top &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
</UL>

<P><STRONG><a name="[259]"></a>lv_style_set_outline_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_outline_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_outline_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[25a]"></a>lv_style_set_outline_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_outline_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_outline_opa &rArr; _lv_style_set_opa &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[278]"></a>lv_style_set_outline_pad</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_outline_pad))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_outline_pad &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
</UL>

<P><STRONG><a name="[25b]"></a>lv_style_set_outline_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_outline_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_outline_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[252]"></a>lv_style_set_pad_bottom</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_pad_bottom &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spinbox_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[266]"></a>lv_style_set_pad_inner</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_pad_inner))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_pad_inner &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[253]"></a>lv_style_set_pad_left</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_pad_left &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[254]"></a>lv_style_set_pad_right</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_pad_right &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[251]"></a>lv_style_set_pad_top</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_pad_top &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spinbox_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[279]"></a>lv_style_set_pattern_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_pattern_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_pattern_opa &rArr; _lv_style_set_opa &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
</UL>

<P><STRONG><a name="[250]"></a>lv_style_set_radius</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_radius &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[319]"></a>lv_style_set_scale_end_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_scale_end_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_scale_end_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
</UL>

<P><STRONG><a name="[31a]"></a>lv_style_set_scale_end_line_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_scale_end_line_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_scale_end_line_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
</UL>

<P><STRONG><a name="[318]"></a>lv_style_set_scale_grad_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_scale_grad_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_scale_grad_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
</UL>

<P><STRONG><a name="[280]"></a>lv_style_set_scale_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_scale_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_scale_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
</UL>

<P><STRONG><a name="[35c]"></a>lv_style_set_shadow_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_shadow_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_shadow_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgbox_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[35b]"></a>lv_style_set_shadow_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_shadow_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_shadow_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgbox_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[272]"></a>lv_style_set_size</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_size &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
</UL>

<P><STRONG><a name="[260]"></a>lv_style_set_text_color</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_text_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_text_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spinbox_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roller_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[289]"></a>lv_style_set_text_line_space</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_text_line_space &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roller_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
</UL>

<P><STRONG><a name="[362]"></a>lv_style_set_transform_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_transform_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_transform_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
</UL>

<P><STRONG><a name="[26c]"></a>lv_style_set_transition_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_transition_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_transition_delay &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[269]"></a>lv_style_set_transition_prop_5</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_transition_prop_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_transition_prop_5 &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[25d]"></a>lv_style_set_transition_prop_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_transition_prop_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_transition_prop_6 &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[25c]"></a>lv_style_set_transition_time</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_transition_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_transition_time &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[258]"></a>lv_style_set_value_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_value_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_value_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
</UL>

<P><STRONG><a name="[261]"></a>lv_style_set_value_font</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_theme_material.o(i.lv_style_set_value_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_style_set_value_font &rArr; _lv_style_set_ptr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
</UL>

<P><STRONG><a name="[4a7]"></a>msgbox_init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, lv_theme_material.o(i.msgbox_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = msgbox_init &rArr; lv_style_set_shadow_width &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_width
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[4a8]"></a>page_init</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, lv_theme_material.o(i.page_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = page_init &rArr; lv_style_set_size &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_size
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[4ab]"></a>roller_init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, lv_theme_material.o(i.roller_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = roller_init &rArr; lv_style_set_text_line_space &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_line_space
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[4a5]"></a>slider_init</STRONG> (Thumb, 522 bytes, Stack size 24 bytes, lv_theme_material.o(i.slider_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = slider_init &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_value_color
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_margin_top
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_margin_bottom
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[4aa]"></a>spinbox_init</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, lv_theme_material.o(i.spinbox_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = spinbox_init &rArr; lv_style_set_text_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[24b]"></a>style_init_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_theme_material.o(i.style_init_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = style_init_reset &rArr; lv_style_reset &rArr; lv_mem_free &rArr; lv_mem_defrag
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;textarea_init
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_win_shared_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;table_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spinbox_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roller_init
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgbox_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linemeter_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gauge_init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddlist_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpicker_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbox_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bar_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_init
</UL>

<P><STRONG><a name="[4a6]"></a>switch_init</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, lv_theme_material.o(i.switch_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = switch_init &rArr; lv_style_set_radius &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[4ac]"></a>table_init</STRONG> (Thumb, 450 bytes, Stack size 24 bytes, lv_theme_material.o(i.table_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = table_init &rArr; lv_style_set_pad_top &rArr; _lv_style_set_int &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[4ad]"></a>tabview_win_shared_init</STRONG> (Thumb, 1086 bytes, Stack size 40 bytes, lv_theme_material.o(i.tabview_win_shared_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = tabview_win_shared_init &rArr; lv_style_set_text_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_size
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_inner
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_image_recolor
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[4a9]"></a>textarea_init</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, lv_theme_material.o(i.textarea_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = textarea_init &rArr; lv_style_set_text_color &rArr; _lv_style_set_color &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex3
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_material_init
</UL>

<P><STRONG><a name="[cd]"></a>theme_apply</STRONG> (Thumb, 1424 bytes, Stack size 16 bytes, lv_theme_material.o(i.theme_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = theme_apply &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_list_add_style
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_theme_material.o(i.lv_theme_material_init)
</UL>
<P><STRONG><a name="[2c9]"></a>draw_indic</STRONG> (Thumb, 1082 bytes, Stack size 280 bytes, lv_bar.o(i.draw_indic))
<BR><BR>[Stack]<UL><LI>Max Depth = 1544<LI>Call Chain = draw_indic &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_design
</UL>

<P><STRONG><a name="[2cc]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_bar.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[82]"></a>lv_area_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_bar.o(i.lv_area_get_height))
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.draw_indic)
</UL>
<P><STRONG><a name="[81]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_bar.o(i.lv_area_get_width))
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.draw_indic)
</UL>
<P><STRONG><a name="[8b]"></a>lv_bar_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_bar.o(i.lv_bar_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = lv_bar_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.lv_bar_set_value_with_anim)
</UL>
<P><STRONG><a name="[8c]"></a>lv_bar_anim_ready</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lv_bar.o(i.lv_bar_anim_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = lv_bar_anim_ready &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.lv_bar_set_value_with_anim)
</UL>
<P><STRONG><a name="[8a]"></a>lv_bar_design</STRONG> (Thumb, 178 bytes, Stack size 192 bytes, lv_bar.o(i.lv_bar_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 1736<LI>Call Chain = lv_bar_design &rArr; draw_indic &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.lv_bar_create)
</UL>
<P><STRONG><a name="[374]"></a>lv_bar_get_style</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_get_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_bar_get_style &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_signal
</UL>

<P><STRONG><a name="[36b]"></a>lv_bar_init_anim</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_bar.o(i.lv_bar_init_anim))
<BR><BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
</UL>

<P><STRONG><a name="[378]"></a>lv_bar_set_value_with_anim</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, lv_bar.o(i.lv_bar_set_value_with_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = lv_bar_set_value_with_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
</UL>

<P><STRONG><a name="[89]"></a>lv_bar_signal</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, lv_bar.o(i.lv_bar_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_bar_signal &rArr; lv_obj_get_draw_rect_ext_pad_size &rArr; lv_obj_get_style_value_align &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.lv_bar_create)
</UL>
<P><STRONG><a name="[372]"></a>lv_obj_get_style_border_post</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_bar.o(i.lv_obj_get_style_border_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = lv_obj_get_style_border_post &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_design
</UL>

<P><STRONG><a name="[8e]"></a>lv_btn_design</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_btn.o(i.lv_btn_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_btn_design
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btn.o(i.lv_btn_create)
</UL>
<P><STRONG><a name="[8d]"></a>lv_btn_signal</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, lv_btn.o(i.lv_btn_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512<LI>Call Chain = lv_btn_signal &rArr; lv_btn_set_state &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_is_dragging
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_set_state
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_get_checkable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btn.o(i.lv_btn_create)
</UL>
<P><STRONG><a name="[245]"></a>allocate_btn_areas_and_controls</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.allocate_btn_areas_and_controls))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = allocate_btn_areas_and_controls &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memset_00
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[31b]"></a>get_button_from_point</STRONG> (Thumb, 376 bytes, Stack size 104 bytes, lv_btnmatrix.o(i.get_button_from_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = get_button_from_point &rArr; lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
</UL>

<P><STRONG><a name="[38f]"></a>get_button_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.get_button_width))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[353]"></a>invalidate_button_area</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, lv_btnmatrix.o(i.invalidate_button_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
</UL>

<P><STRONG><a name="[322]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>

<P><STRONG><a name="[90]"></a>lv_btnmatrix_design</STRONG> (Thumb, 938 bytes, Stack size 624 bytes, lv_btnmatrix.o(i.lv_btnmatrix_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 2280<LI>Call Chain = lv_btnmatrix_design &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_disable_style_caching
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_align
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btnmatrix.o(i.lv_btnmatrix_create)
</UL>
<P><STRONG><a name="[38c]"></a>lv_btnmatrix_get_style</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_get_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_btnmatrix_get_style &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
</UL>

<P><STRONG><a name="[8f]"></a>lv_btnmatrix_signal</STRONG> (Thumb, 1150 bytes, Stack size 96 bytes, lv_btnmatrix.o(i.lv_btnmatrix_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = lv_btnmatrix_signal &rArr; make_one_button_toggled &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset_long_press
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_toggled
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_style
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btnmatrix.o(i.lv_btnmatrix_create)
</UL>
<P><STRONG><a name="[320]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>

<P><STRONG><a name="[321]"></a>lv_obj_get_style_pad_inner</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_inner))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_inner &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>

<P><STRONG><a name="[31d]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>

<P><STRONG><a name="[31e]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>

<P><STRONG><a name="[31f]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_design
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>

<P><STRONG><a name="[394]"></a>make_one_button_toggled</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.make_one_button_toggled))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = make_one_button_toggled &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_ctrl
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_signal
</UL>

<P><STRONG><a name="[91]"></a>lv_checkbox_signal</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, lv_checkbox.o(i.lv_checkbox_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = lv_checkbox_signal &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_checkbox.o(i.lv_checkbox_create)
</UL>
<P><STRONG><a name="[3af]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_cont.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
</UL>

<P><STRONG><a name="[39f]"></a>lv_cont_layout_center</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, lv_cont.o(i.lv_cont_layout_center))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = lv_cont_layout_center &rArr; lv_obj_align &rArr; obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_protect
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
</UL>

<P><STRONG><a name="[3a2]"></a>lv_cont_layout_col</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, lv_cont.o(i.lv_cont_layout_col))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = lv_cont_layout_col &rArr; lv_obj_align &rArr; obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_protect
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_layout
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_top
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_left
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
</UL>

<P><STRONG><a name="[3a9]"></a>lv_cont_layout_grid</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, lv_cont.o(i.lv_cont_layout_grid))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_cont_layout_grid &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_protect
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
</UL>

<P><STRONG><a name="[3aa]"></a>lv_cont_layout_pretty</STRONG> (Thumb, 684 bytes, Stack size 104 bytes, lv_cont.o(i.lv_cont_layout_pretty))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = lv_cont_layout_pretty &rArr; lv_obj_align &rArr; obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_protect
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_layout
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_top
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_right
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_left
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
</UL>

<P><STRONG><a name="[3ac]"></a>lv_cont_layout_row</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, lv_cont.o(i.lv_cont_layout_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = lv_cont_layout_row &rArr; lv_obj_align &rArr; obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_protect
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_protect
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_layout
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_inner
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
</UL>

<P><STRONG><a name="[3ae]"></a>lv_cont_refr_autofit</STRONG> (Thumb, 838 bytes, Stack size 56 bytes, lv_cont.o(i.lv_cont_refr_autofit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = lv_cont_refr_autofit &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_is_empty
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_hidden
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_realign
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_auto_realign
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_top
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_right
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_left
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_margin_bottom
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_signal
</UL>

<P><STRONG><a name="[3b2]"></a>lv_cont_refr_layout</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, lv_cont.o(i.lv_cont_refr_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = lv_cont_refr_layout &rArr; lv_cont_layout_pretty &rArr; lv_obj_align &rArr; obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_layout
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_signal
</UL>

<P><STRONG><a name="[92]"></a>lv_cont_signal</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, lv_cont.o(i.lv_cont_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = lv_cont_signal &rArr; lv_cont_refr_layout &rArr; lv_cont_layout_pretty &rArr; lv_obj_align &rArr; obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_layout
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_cont.o(i.lv_cont_create)
</UL>
<P><STRONG><a name="[3a7]"></a>lv_obj_get_style_margin_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_margin_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_margin_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
</UL>

<P><STRONG><a name="[3a8]"></a>lv_obj_get_style_margin_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_margin_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_margin_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
</UL>

<P><STRONG><a name="[3ab]"></a>lv_obj_get_style_margin_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_margin_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_margin_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
</UL>

<P><STRONG><a name="[3a6]"></a>lv_obj_get_style_margin_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_margin_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_margin_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
</UL>

<P><STRONG><a name="[3ad]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
</UL>

<P><STRONG><a name="[3a0]"></a>lv_obj_get_style_pad_inner</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_pad_inner))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_inner &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_center
</UL>

<P><STRONG><a name="[3a3]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
</UL>

<P><STRONG><a name="[3a4]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
</UL>

<P><STRONG><a name="[3a5]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_cont.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_refr_autofit
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_row
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_pretty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_grid
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_layout_col
</UL>

<P><STRONG><a name="[9c]"></a>lv_img_design</STRONG> (Thumb, 1362 bytes, Stack size 232 bytes, lv_img.o(i.lv_img_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 2136<LI>Call Chain = lv_img_design &rArr; lv_draw_img &rArr; lv_img_draw_core &rArr; show_error &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_custom
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_release
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_mem_buf_get
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_opa
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_color
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_zoom
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_angle
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img.o(i.lv_img_create)
</UL>
<P><STRONG><a name="[9b]"></a>lv_img_signal</STRONG> (Thumb, 612 bytes, Stack size 48 bytes, lv_img.o(i.lv_img_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = lv_img_signal &rArr; lv_img_set_src &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_point_on_coords
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_zoom
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_angle
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img.o(i.lv_img_create)
</UL>
<P><STRONG><a name="[3e2]"></a>lv_obj_get_style_border_post</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_img.o(i.lv_obj_get_style_border_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = lv_obj_get_style_border_post &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3df]"></a>lv_obj_get_style_clip_corner</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_img.o(i.lv_obj_get_style_clip_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = lv_obj_get_style_clip_corner &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3e6]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_img.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3e3]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_img.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3e4]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_img.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3e5]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_img.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3e0]"></a>lv_obj_get_style_transform_angle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_img.o(i.lv_obj_get_style_transform_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_transform_angle &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[3e1]"></a>lv_obj_get_style_transform_zoom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_img.o(i.lv_obj_get_style_transform_zoom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_transform_zoom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_signal
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_design
</UL>

<P><STRONG><a name="[32a]"></a>get_txt_coords</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lv_label.o(i.get_txt_coords))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = get_txt_coords &rArr; lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_design
</UL>

<P><STRONG><a name="[40b]"></a>lv_area_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_label.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
</UL>

<P><STRONG><a name="[409]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_label.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
</UL>

<P><STRONG><a name="[9e]"></a>lv_label_design</STRONG> (Thumb, 528 bytes, Stack size 192 bytes, lv_label.o(i.lv_label_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 1848<LI>Call Chain = lv_label_design &rArr; lv_draw_label &rArr; lv_draw_line &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_size
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_align
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_sel_start
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_sel_end
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_txt_coords
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(i.lv_label_create)
</UL>
<P><STRONG><a name="[403]"></a>lv_label_dot_tmp_free</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_label.o(i.lv_label_dot_tmp_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = lv_label_dot_tmp_free &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
</UL>

<P><STRONG><a name="[40c]"></a>lv_label_revert_dots</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lv_label.o(i.lv_label_revert_dots))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = lv_label_revert_dots &rArr; lv_label_dot_tmp_free &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_signal
</UL>

<P><STRONG><a name="[400]"></a>lv_label_set_dot_tmp</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lv_label.o(i.lv_label_set_dot_tmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = lv_label_set_dot_tmp &rArr; lv_label_dot_tmp_free &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_memcpy
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[a0]"></a>lv_label_set_offset_x</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_set_offset_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_label_set_offset_x &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_label.o(i.lv_label_refr_text)
<LI> lv_label.o(i.lv_label_set_long_mode)
</UL>
<P><STRONG><a name="[a1]"></a>lv_label_set_offset_y</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_set_offset_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = lv_label_set_offset_y &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_label.o(i.lv_label_refr_text)
<LI> lv_label.o(i.lv_label_set_long_mode)
</UL>
<P><STRONG><a name="[9f]"></a>lv_label_signal</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, lv_label.o(i.lv_label_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336<LI>Call Chain = lv_label_signal &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_style
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(i.lv_label_create)
</UL>
<P><STRONG><a name="[32e]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_label.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_txt_coords
</UL>

<P><STRONG><a name="[32b]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_label.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_txt_coords
</UL>

<P><STRONG><a name="[32c]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_label.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_txt_coords
</UL>

<P><STRONG><a name="[32d]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_label.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_txt_coords
</UL>

<P><STRONG><a name="[405]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_label.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_obj_get_style_text_font &rArr; _lv_obj_get_style_ptr &rArr;  update_style_cache (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[407]"></a>lv_obj_get_style_text_letter_space</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_label.o(i.lv_obj_get_style_text_letter_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_text_letter_space &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[406]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_label.o(i.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[a3]"></a>lv_msgbox_btnm_event_cb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_msgbox.o(i.lv_msgbox_btnm_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = lv_msgbox_btnm_event_cb &rArr; lv_event_send &rArr; lv_event_send_func &rArr;  lv_event_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_msgbox.o(i.lv_msgbox_add_btns)
</UL>
<P><STRONG><a name="[a8]"></a>lv_msgbox_close_ready_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_msgbox.o(i.lv_msgbox_close_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = lv_msgbox_close_ready_cb &rArr; lv_obj_del &rArr; obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_msgbox.o(i.lv_msgbox_start_auto_close)
</UL>
<P><STRONG><a name="[a5]"></a>lv_msgbox_default_event_cb</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_msgbox.o(i.lv_msgbox_default_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = lv_msgbox_default_event_cb &rArr; lv_msgbox_start_auto_close &rArr; lv_cont_set_fit4 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_start_auto_close
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_active_btn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_msgbox.o(i.lv_msgbox_create)
</UL>
<P><STRONG><a name="[416]"></a>lv_msgbox_get_style</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lv_msgbox.o(i.lv_msgbox_get_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_msgbox_get_style &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
</UL>

<P><STRONG><a name="[a4]"></a>lv_msgbox_signal</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, lv_msgbox.o(i.lv_msgbox_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496<LI>Call Chain = lv_msgbox_signal &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_focused_btn
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_focused_btn
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_msgbox.o(i.lv_msgbox_create)
</UL>
<P><STRONG><a name="[444]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_msgbox.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
</UL>

<P><STRONG><a name="[455]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_msgbox.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbox_realign
</UL>

<P><STRONG><a name="[411]"></a>mbox_realign</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, lv_msgbox.o(i.mbox_realign))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = mbox_realign &rArr; lv_obj_set_width &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_map_array
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_signal
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
</UL>

<P><STRONG><a name="[b2]"></a>edge_flash_anim</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lv_page.o(i.edge_flash_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = edge_flash_anim &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_edge_flash_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_page.o(i.lv_page_start_edge_flash)
</UL>
<P><STRONG><a name="[b3]"></a>edge_flash_anim_end</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_page.o(i.edge_flash_anim_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = edge_flash_anim_end &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_edge_flash_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_page.o(i.lv_page_start_edge_flash)
</UL>
<P><STRONG><a name="[2e3]"></a>get_edge_flash_area</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, lv_page.o(i.get_edge_flash_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = get_edge_flash_area &rArr; lv_obj_get_width &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_design
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edge_flash_anim_end
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edge_flash_anim
</UL>

<P><STRONG><a name="[479]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_page.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_design
</UL>

<P><STRONG><a name="[484]"></a>lv_area_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_page.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
</UL>

<P><STRONG><a name="[483]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_page.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
</UL>

<P><STRONG><a name="[445]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_page.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_on_edge
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_ext_draw_pad
</UL>

<P><STRONG><a name="[449]"></a>lv_obj_get_style_pad_inner</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_page.o(i.lv_obj_get_style_pad_inner))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_inner &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_grid
</UL>

<P><STRONG><a name="[44c]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_page.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_on_edge
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_fit
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[451]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_page.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_on_edge
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_fit
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_ext_draw_pad
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[456]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_page.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_on_edge
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[45e]"></a>lv_obj_get_style_size</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_page.o(i.lv_obj_get_style_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_size &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[b0]"></a>lv_page_design</STRONG> (Thumb, 356 bytes, Stack size 128 bytes, lv_page.o(i.lv_page_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392<LI>Call Chain = lv_page_design &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_on
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_edge_flash_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_page.o(i.lv_page_create)
</UL>
<P><STRONG><a name="[47c]"></a>lv_page_get_scrl_width</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_page.o(i.lv_page_get_scrl_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = lv_page_get_scrl_width &rArr; lv_page_get_scrollable &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[47d]"></a>lv_page_get_style</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_page.o(i.lv_page_get_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_page_get_style &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[ae]"></a>lv_page_scrollable_signal</STRONG> (Thumb, 860 bytes, Stack size 48 bytes, lv_page.o(i.lv_page_scrollable_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = lv_page_scrollable_signal &rArr; scrl_reposition &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_is_dragging
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_parent
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_on_edge
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrl_reposition
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_page.o(i.lv_page_create)
</UL>
<P><STRONG><a name="[af]"></a>lv_page_signal</STRONG> (Thumb, 716 bytes, Stack size 56 bytes, lv_page.o(i.lv_page_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = lv_page_signal &rArr; scrlbar_refresh &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_protected
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_height
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_width
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_top
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_right
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_get_fit_left
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_ver
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scroll_hor
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrlbar_refresh
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_ext_draw_pad
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_style
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrl_width
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_size
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_page.o(i.lv_page_create)
</UL>
<P><STRONG><a name="[486]"></a>refr_ext_draw_pad</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_page.o(i.refr_ext_draw_pad))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = refr_ext_draw_pad &rArr; lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
</UL>

<P><STRONG><a name="[b1]"></a>scrl_def_event_cb</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_page.o(i.scrl_def_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = scrl_def_event_cb &rArr; lv_event_send &rArr; lv_event_send_func &rArr;  lv_event_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_page.o(i.lv_page_create)
</UL>
<P><STRONG><a name="[482]"></a>scrl_reposition</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, lv_page.o(i.scrl_reposition))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = scrl_reposition &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_start_edge_flash
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
</UL>

<P><STRONG><a name="[478]"></a>scrlbar_refresh</STRONG> (Thumb, 848 bytes, Stack size 112 bytes, lv_page.o(i.scrlbar_refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = scrlbar_refresh &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_height
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_width
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_set_pos
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_size
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_create
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_set_scrollbar_mode
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_signal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_scrollable_signal
</UL>

<P><STRONG><a name="[48f]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_slider.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_design
</UL>

<P><STRONG><a name="[446]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_slider.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_position_knob
</UL>

<P><STRONG><a name="[44d]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_slider.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_position_knob
</UL>

<P><STRONG><a name="[452]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_slider.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_position_knob
</UL>

<P><STRONG><a name="[457]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_slider.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_position_knob
</UL>

<P><STRONG><a name="[c6]"></a>lv_slider_design</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, lv_slider.o(i.lv_slider_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408<LI>Call Chain = lv_slider_design &rArr; lv_slider_draw_knob &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_position_knob
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_type
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_draw_knob
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_slider.o(i.lv_slider_create)
</UL>
<P><STRONG><a name="[491]"></a>lv_slider_draw_knob</STRONG> (Thumb, 40 bytes, Stack size 104 bytes, lv_slider.o(i.lv_slider_draw_knob))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = lv_slider_draw_knob &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_design
</UL>

<P><STRONG><a name="[493]"></a>lv_slider_get_style</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_slider.o(i.lv_slider_get_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_slider_get_style &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
</UL>

<P><STRONG><a name="[492]"></a>lv_slider_get_type</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_slider.o(i.lv_slider_get_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = lv_slider_get_type &rArr; lv_bar_get_type &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_type
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_signal
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_design
</UL>

<P><STRONG><a name="[490]"></a>lv_slider_position_knob</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lv_slider.o(i.lv_slider_position_knob))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = lv_slider_position_knob &rArr; lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_design
</UL>

<P><STRONG><a name="[c5]"></a>lv_slider_signal</STRONG> (Thumb, 974 bytes, Stack size 48 bytes, lv_slider.o(i.lv_slider_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = lv_slider_signal &rArr; lv_bar_set_value &rArr; lv_bar_set_value_with_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_value
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_type
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_style
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_slider.o(i.lv_slider_create)
</UL>
<P><STRONG><a name="[447]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_switch.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[44e]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_switch.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[453]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_switch.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[458]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_switch.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_design
</UL>

<P><STRONG><a name="[c9]"></a>lv_switch_design</STRONG> (Thumb, 286 bytes, Stack size 152 bytes, lv_switch.o(i.lv_switch_design))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = lv_switch_design &rArr; lv_draw_rect &rArr; draw_border &rArr; draw_full_border &rArr; _lv_mem_buf_get &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(i.lv_switch_create)
</UL>
<P><STRONG><a name="[497]"></a>lv_switch_get_state</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_switch.o(i.lv_switch_get_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = lv_switch_get_state &rArr; lv_bar_get_value &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
</UL>

<P><STRONG><a name="[498]"></a>lv_switch_get_style</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_switch.o(i.lv_switch_get_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_switch_get_style &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_signal
</UL>

<P><STRONG><a name="[c8]"></a>lv_switch_signal</STRONG> (Thumb, 336 bytes, Stack size 32 bytes, lv_switch.o(i.lv_switch_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504<LI>Call Chain = lv_switch_signal &rArr; lv_switch_on &rArr; lv_obj_add_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_draw_rect_ext_pad_size
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean_style_list
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_on
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_off
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_get_style
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_get_state
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(i.lv_switch_create)
</UL>
<P><STRONG><a name="[448]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tabview.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
</UL>

<P><STRONG><a name="[44a]"></a>lv_obj_get_style_pad_inner</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tabview.o(i.lv_obj_get_style_pad_inner))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_inner &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
</UL>

<P><STRONG><a name="[44f]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tabview.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_left &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
</UL>

<P><STRONG><a name="[454]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tabview.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_right &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
</UL>

<P><STRONG><a name="[459]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tabview.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_obj_get_style_pad_top &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
</UL>

<P><STRONG><a name="[49f]"></a>lv_tabview_get_style</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lv_tabview.o(i.lv_tabview_get_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = lv_tabview_get_style &rArr; lv_obj_get_ext_attr &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_log_error
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_debug_check_null
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_list
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[ca]"></a>lv_tabview_signal</STRONG> (Thumb, 450 bytes, Stack size 32 bytes, lv_tabview.o(i.lv_tabview_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488<LI>Call Chain = lv_tabview_signal &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_signal_send
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_data
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_focused_btn
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tabview.o(i.lv_tabview_create)
</UL>
<P><STRONG><a name="[4e9]"></a>refr_align</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, lv_tabview.o(i.refr_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = refr_align &rArr; lv_obj_align &rArr; obj_align_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
</UL>

<P><STRONG><a name="[4ea]"></a>refr_btns_size</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, lv_tabview.o(i.refr_btns_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = refr_btns_size &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_hidden
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_ptr
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
</UL>

<P><STRONG><a name="[4eb]"></a>refr_content_size</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, lv_tabview.o(i.refr_content_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = refr_content_size &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_signal_cb
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
</UL>

<P><STRONG><a name="[4ec]"></a>refr_indic_size</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, lv_tabview.o(i.refr_indic_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = refr_indic_size &rArr; lv_obj_set_width &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_hidden
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_style_int
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tabview_realign
</UL>

<P><STRONG><a name="[cc]"></a>tab_btnm_event_cb</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lv_tabview.o(i.tab_btnm_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = tab_btnm_event_cb &rArr; lv_tabview_set_tab_act &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_ctrl
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_active_btn
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tabview.o(i.lv_tabview_create)
</UL>
<P><STRONG><a name="[49b]"></a>tabview_realign</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_tabview.o(i.tabview_realign))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = tabview_realign &rArr; refr_btns_size &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_indic_size
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_content_size
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_btns_size
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_align
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_signal
</UL>

<P><STRONG><a name="[cb]"></a>tabview_scrl_signal</STRONG> (Thumb, 284 bytes, Stack size 48 bytes, lv_tabview.o(i.tabview_scrl_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = tabview_scrl_signal &rArr; lv_tabview_set_tab_act &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_vect
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_finish_drag
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_handle_get_type_signal
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_ext_attr
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_base_dir
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_tab_act
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab_act
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tabview.o(i.lv_tabview_create)
</UL>
<P><STRONG><a name="[b4]"></a>DMA_Transit_Callback</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_port_disp.o(i.DMA_Transit_Callback))
<BR>[Address Reference Count : 1]<UL><LI> lv_port_disp.o(i.lv_port_disp_init)
</UL>
<P><STRONG><a name="[b5]"></a>disp_flush</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lv_port_disp.o(i.disp_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = disp_flush &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_flush_ready
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_disp.o(i.lv_port_disp_init)
</UL>
<P><STRONG><a name="[c4]"></a>touchpad_read</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_port_indev.o(i.touchpad_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchpad_read &rArr; GTP_TouchProcess &rArr; Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; i2c_SendByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Touch_XY
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_TouchProcess
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_finger
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_indev.o(i.lv_port_indev_init)
</UL>
<P><STRONG><a name="[b7]"></a>fs_close</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = fs_close &rArr; f_close &rArr; f_sync &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[c1]"></a>fs_dir_close</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_dir_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = fs_dir_close &rArr; f_closedir &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[c2]"></a>fs_dir_open</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_dir_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = fs_dir_open &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[c3]"></a>fs_dir_read</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = fs_dir_read &rArr; f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[bc]"></a>fs_free</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_port_fs_template.o(i.fs_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = fs_free &rArr; f_getfree &rArr; find_volume &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[b6]"></a>fs_open</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_port_fs_template.o(i.fs_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = fs_open &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[b8]"></a>fs_read</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_port_fs_template.o(i.fs_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = fs_read &rArr; f_read &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[be]"></a>fs_remove</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = fs_remove &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[bf]"></a>fs_rename</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_rename))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = fs_rename &rArr; f_rename &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[ba]"></a>fs_seek</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_seek))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = fs_seek &rArr; f_lseek &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[bd]"></a>fs_size</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_size))
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[bb]"></a>fs_tell</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_tell))
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[c0]"></a>fs_trunc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_port_fs_template.o(i.fs_trunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = fs_trunc &rArr; f_truncate &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[b9]"></a>fs_write</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_port_fs_template.o(i.fs_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = fs_write &rArr; f_write &rArr; validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_fs_template.o(i.lv_port_fs_init)
</UL>
<P><STRONG><a name="[154]"></a>Home_open</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, lv_box.o(i.Home_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408<LI>Call Chain = Home_open &rArr; lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_click
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_bg_color
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_box_demo
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_to_home_event_cb
</UL>

<P><STRONG><a name="[19c]"></a>Sensors_open</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, lv_box.o(i.Sensors_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 1624<LI>Call Chain = Sensors_open &rArr; lv_tabview_create &rArr; lv_tabview_add_tab &rArr; lv_page_create &rArr; lv_obj_set_focus_parent &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_set_int
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_int
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_out_all
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_sensors_event_handler
</UL>

<P><STRONG><a name="[1a6]"></a>add_back</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lv_box.o(i.add_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392<LI>Call Chain = add_back &rArr; lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_grid
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height_grid
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_settings_event_handler
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[78]"></a>back_to_home_event_cb</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_box.o(i.back_to_home_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = back_to_home_event_cb &rArr; Home_open &rArr; lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_out_all
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_box.o(i.Sensors_open)
<LI> lv_box.o(i.icon_settings_event_handler)
</UL>
<P><STRONG><a name="[1a7]"></a>dht11_create</STRONG> (Thumb, 690 bytes, Stack size 40 bytes, lv_box.o(i.dht11_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512<LI>Call Chain = dht11_create &rArr; lv_btn_toggle &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width_margin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_event_cb
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_drag_parent
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_grid
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width_fit
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_int
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_size_category
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_small
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_layout
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_create
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_toggle
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_type
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_scrollable
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_page_get_width_grid
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_get_btnmatrix
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_msgbox_add_btns
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_str
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_opa
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_ofs_y
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_font
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit2
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[330]"></a>icon_generic_event_cb</STRONG> (Thumb, 292 bytes, Stack size 96 bytes, lv_box.o(i.icon_generic_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = icon_generic_event_cb &rArr; lv_obj_get_y &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_back
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_settings_event_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_sensors_event_handler
</UL>

<P><STRONG><a name="[75]"></a>icon_sensors_event_handler</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_box.o(i.icon_sensors_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1640<LI>Call Chain = icon_sensors_event_handler &rArr; Sensors_open &rArr; lv_tabview_create &rArr; lv_tabview_add_tab &rArr; lv_page_create &rArr; lv_obj_set_focus_parent &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; trans_create &rArr; _lv_obj_get_style_int &rArr; update_style_cache &rArr;  lv_obj_get_style_text_line_space (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_generic_event_cb
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_box.o(i.Home_open)
</UL>
<P><STRONG><a name="[74]"></a>icon_settings_event_handler</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lv_box.o(i.icon_settings_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408<LI>Call Chain = icon_settings_event_handler &rArr; add_back &rArr; lv_label_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_set_height &rArr; lv_obj_set_size &rArr; lv_obj_realign &rArr; lv_obj_align_mid &rArr; obj_align_mid_core &rArr; lv_obj_set_y &rArr; lv_obj_set_pos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_out_all
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_generic_event_cb
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_box.o(i.Home_open)
</UL>
<P><STRONG><a name="[15a]"></a>lv_color_mix</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, lv_box.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[29c]"></a>lv_cont_set_fit2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_box.o(i.lv_cont_set_fit2))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000<LI>Call Chain = lv_cont_set_fit2 &rArr; lv_cont_set_fit4 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_cont_set_fit4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[161]"></a>lv_demo_printer_anim_in</STRONG> (Thumb, 84 bytes, Stack size 80 bytes, lv_box.o(i.lv_demo_printer_anim_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_demo_printer_anim_in &rArr; lv_obj_get_y &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_settings_event_handler
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[19d]"></a>lv_demo_printer_anim_out_all</STRONG> (Thumb, 126 bytes, Stack size 88 bytes, lv_box.o(i.lv_demo_printer_anim_out_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = lv_demo_printer_anim_out_all &rArr; lv_obj_get_y &rArr; lv_obj_get_parent &rArr; lv_debug_log_error &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_back
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_act
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_settings_event_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_to_home_event_cb
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
</UL>

<P><STRONG><a name="[159]"></a>lv_obj_set_style_local_bg_color</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_box.o(i.lv_obj_set_style_local_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_obj_set_style_local_bg_color &rArr; _lv_obj_set_style_local_color &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_color
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[2a5]"></a>lv_obj_set_style_local_value_font</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_box.o(i.lv_obj_set_style_local_value_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_obj_set_style_local_value_font &rArr; _lv_obj_set_style_local_ptr &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[2a6]"></a>lv_obj_set_style_local_value_ofs_y</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_box.o(i.lv_obj_set_style_local_value_ofs_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_obj_set_style_local_value_ofs_y &rArr; _lv_obj_set_style_local_int &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_int
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[2a7]"></a>lv_obj_set_style_local_value_opa</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_box.o(i.lv_obj_set_style_local_value_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_obj_set_style_local_value_opa &rArr; _lv_obj_set_style_local_opa &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[29b]"></a>lv_obj_set_style_local_value_str</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_box.o(i.lv_obj_set_style_local_value_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_obj_set_style_local_value_str &rArr; _lv_obj_set_style_local_ptr &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_set_style_local_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
</UL>

<P><STRONG><a name="[155]"></a>lv_scr_act</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_box.o(i.lv_scr_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = lv_scr_act &rArr; lv_disp_get_scr_act &rArr; _lv_log_add &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_out_all
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_printer_anim_in
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icon_settings_event_handler
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dht11_create
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_to_home_event_cb
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_back
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_open
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_open
</UL>

<P><STRONG><a name="[80]"></a>slider_event_cb</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lv_box.o(i.slider_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = slider_event_cb &rArr; lv_obj_set_style_local_value_str &rArr; _lv_obj_set_style_local_ptr &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_type
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_value
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_local_value_str
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_box.o(i.dht11_create)
</UL>
<P><STRONG><a name="[273]"></a>check_fs</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[286]"></a>chk_chr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[2f8]"></a>chk_lock</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, ff.o(i.chk_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = chk_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[2f3]"></a>clear_lock</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, ff.o(i.clear_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = clear_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[2ee]"></a>clmt_clust</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ff.o(i.clmt_clust))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[2b2]"></a>clust2sect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[27c]"></a>cmp_lfn</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, ff.o(i.cmp_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = cmp_lfn &rArr; ff_wtoupper
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[281]"></a>create_chain</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[284]"></a>create_name</STRONG> (Thumb, 494 bytes, Stack size 40 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = create_name
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[2e8]"></a>dec_lock</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ff.o(i.dec_lock))
<BR><BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
</UL>

<P><STRONG><a name="[2ad]"></a>dir_find</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[2b0]"></a>dir_next</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[2b3]"></a>dir_read</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[2b5]"></a>dir_register</STRONG> (Thumb, 480 bytes, Stack size 72 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[2b9]"></a>dir_remove</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ff.o(i.dir_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = dir_remove &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[2ae]"></a>dir_sdi</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[2ec]"></a>find_volume</STRONG> (Thumb, 594 bytes, Stack size 40 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = find_volume &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_fs
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_lock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[2f7]"></a>follow_path</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[2b7]"></a>gen_numname</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, ff.o(i.gen_numname))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gen_numname
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[282]"></a>get_fat</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[302]"></a>get_fileinfo</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_fileinfo
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[2f2]"></a>get_ldnumber</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[2fe]"></a>inc_lock</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, ff.o(i.inc_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = inc_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[2fb]"></a>ld_clust</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ff.o(i.ld_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ld_clust
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[276]"></a>ld_dword</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ff.o(i.ld_dword))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[275]"></a>ld_word</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ff.o(i.ld_word))
<BR><BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[310]"></a>lock_fs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ff.o(i.lock_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_req_grant
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[2b6]"></a>mem_cpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(i.mem_cpy))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[287]"></a>mem_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ff.o(i.mem_set))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[274]"></a>move_window</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[2b4]"></a>pick_lfn</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, ff.o(i.pick_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pick_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[283]"></a>put_fat</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[2fd]"></a>remove_chain</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
</UL>

<P><STRONG><a name="[2fc]"></a>st_clust</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ff.o(i.st_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = st_clust
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[2fa]"></a>st_dword</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_dword))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
</UL>

<P><STRONG><a name="[2b8]"></a>st_word</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ff.o(i.st_word))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[2af]"></a>sum_sfn</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.sum_sfn))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[304]"></a>sync_fs</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[2b1]"></a>sync_window</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[2e9]"></a>unlock_fs</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(i.unlock_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = unlock_fs &rArr; ff_rel_grant &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>

<P><STRONG><a name="[2e7]"></a>validate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = validate &rArr; lock_fs &rArr; ff_req_grant &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_fs
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_fs
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[1ad]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[240]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[23f]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
